Terminals unused in grammar

    END
    JSON
    XML
    OVERRIDE


State 305 conflicts: 6 shift/reduce
State 306 conflicts: 1 shift/reduce
State 674 conflicts: 1 shift/reduce
State 730 conflicts: 1 shift/reduce


Grammar

    0 $accept: all $end

    1 all: empty
    2    | concept_list
    3    | hash_array_list
    4    | instructions
    5    | rules
    6    | error

    7 empty: Îµ

    8 dvalues: FLOAT
    9        | dvalues ',' FLOAT
   10        | INTEGER
   11        | dvalues ',' INTEGER

   12 svalues: STRING
   13        | svalues ',' STRING

   14 integer_array: INTEGER
   15              | integer_array ',' INTEGER

   16 instructions: instruction
   17             | instruction instructions
   18             | instruction ';' instructions
   19             | instruction ';'

   20 instruction: simple ';'
   21            | if_block
   22            | list_block
   23            | while_block
   24            | trigger_block
   25            | concept_block
   26            | hash_array_block
   27            | when_block
   28            | switch_block

   29 semi: ';'
   30     | semi ';'

   31 argument_list: empty
   32              | arguments

   33 arguments: argument
   34          | argument ',' arguments

   35 argument: expression

   36 simple: UNSIGNED '[' INTEGER ']' IDENT default flags
   37       | UNSIGNED '[' INTEGER ']' IDENT '[' argument_list ']' default flags
   38       | UNSIGNED '(' INTEGER ')' IDENT default flags
   39       | UNSIGNED '(' INTEGER ')' IDENT '[' argument_list ']' default flags
   40       | ASCII '[' INTEGER ']' IDENT default flags
   41       | GROUP IDENT default flags
   42       | GROUP IDENT '(' argument_list ')' default flags
   43       | IDENT '=' TO_INTEGER '(' argument_list ')' flags
   44       | IDENT '=' SEX2DEC '(' argument_list ')' flags
   45       | IDENT '=' TO_STRING '(' argument_list ')' flags
   46       | NON_ALPHA IDENT default flags
   47       | ASCII '[' INTEGER ']' STRING default flags
   48       | BYTE '[' INTEGER ']' IDENT default flags
   49       | BYTE '[' INTEGER ']' IDENT '[' argument_list ']' default flags
   50       | KSEC1EXPVER '[' INTEGER ']' IDENT default flags
   51       | SIGNED '[' INTEGER ']' IDENT default flags
   52       | SIGNED '[' INTEGER ']' IDENT '[' argument_list ']' default flags
   53       | SIGNED '(' INTEGER ')' IDENT default flags
   54       | SIGNED '(' INTEGER ')' IDENT '[' argument_list ']' default flags
   55       | CODETABLE '[' INTEGER ']' IDENT argument default flags
   56       | CODETABLE '[' IDENT ']' IDENT argument default flags
   57       | CODETABLE '[' INTEGER ']' IDENT argument default SET '(' IDENT ')' flags
   58       | CODETABLE '[' INTEGER ']' IDENT '(' argument_list ')' default flags
   59       | SMART_TABLE IDENT '(' argument_list ')' default flags
   60       | IDENT '=' DICTIONARY '(' argument_list ')' default flags
   61       | IDENT '=' GETENV '(' argument_list ')' default flags
   62       | COMPLEX_CODETABLE '[' INTEGER ']' IDENT argument default flags
   63       | COMPLEX_CODETABLE '[' INTEGER ']' IDENT '(' argument_list ')' default flags
   64       | FLAG '[' INTEGER ']' IDENT argument default flags
   65       | LOOKUP '[' INTEGER ']' IDENT '(' argument_list ')' flags
   66       | FLAGBIT IDENT '(' argument_list ')' default flags
   67       | LABEL IDENT
   68       | LABEL STRING
   69       | IBMFLOAT IDENT default flags
   70       | INT8 IDENT default flags
   71       | UINT8 IDENT default flags
   72       | INT16 IDENT default flags
   73       | UINT16 IDENT default flags
   74       | INT16_LITTLE_ENDIAN IDENT default flags
   75       | UINT16_LITTLE_ENDIAN IDENT default flags
   76       | INT32 IDENT default flags
   77       | UINT32 IDENT default flags
   78       | INT32_LITTLE_ENDIAN IDENT default flags
   79       | UINT32_LITTLE_ENDIAN IDENT default flags
   80       | INT64 IDENT default flags
   81       | UINT64 IDENT default flags
   82       | INT64_LITTLE_ENDIAN IDENT default flags
   83       | UINT64_LITTLE_ENDIAN IDENT default flags
   84       | BLOB IDENT '[' argument_list ']' default flags
   85       | IBMFLOAT IDENT '.' IDENT default flags
   86       | IBMFLOAT IDENT '[' argument ']' default flags
   87       | POS IDENT
   88       | INTCONST IDENT '=' argument flags
   89       | TRANS IDENT '=' argument flags
   90       | TRANS IDENT '=' '{' dvalues '}' flags
   91       | FLOAT IDENT default flags
   92       | FLOAT IDENT '.' IDENT default flags
   93       | FLOAT IDENT '[' argument ']' default flags
   94       | G1_HALF_BYTE IDENT
   95       | SECTION_LENGTH '[' INTEGER ']' IDENT default
   96       | G1_MESSAGE_LENGTH '[' INTEGER ']' IDENT '(' argument_list ')'
   97       | G1_SECTION4_LENGTH '[' INTEGER ']' IDENT '(' argument_list ')'
   98       | KSEC IDENT argument
   99       | PAD IDENT '(' argument_list ')'
  100       | PADTO IDENT '(' argument_list ')'
  101       | PADTOEVEN IDENT '(' argument_list ')'
  102       | PADTOMULTIPLE IDENT '(' argument_list ')'
  103       | MESSAGE '[' INTEGER ']' IDENT flags
  104       | MESSAGE_COPY IDENT flags
  105       | SECTION_PADDING IDENT flags
  106       | TEMPLATE IDENT STRING
  107       | TEMPLATE_NOFAIL IDENT STRING
  108       | ALIAS IDENT '=' IDENT flags
  109       | UNALIAS IDENT
  110       | ALIAS IDENT '.' IDENT '=' IDENT flags
  111       | UNALIAS IDENT '.' IDENT
  112       | META IDENT IDENT '(' argument_list ')' default flags
  113       | META IDENT '.' IDENT IDENT '(' argument_list ')' default flags
  114       | ITERATOR IDENT '(' argument_list ')'
  115       | NEAREST IDENT '(' argument_list ')'
  116       | BOX IDENT '(' argument_list ')'
  117       | EXPORT IDENT '(' argument_list ')'
  118       | REMOVE argument_list
  119       | RENAME '(' IDENT ',' IDENT ')'
  120       | ASSERT '(' expression ')'
  121       | MODIFY IDENT flags
  122       | SET IDENT '=' MISSING
  123       | SET IDENT '=' expression
  124       | SET IDENT '=' '{' dvalues '}'
  125       | SET IDENT '=' '{' svalues '}'
  126       | SET_NOFAIL IDENT '=' expression
  127       | WRITE STRING
  128       | WRITE
  129       | WRITE '(' INTEGER ')' STRING
  130       | WRITE '(' INTEGER ')'
  131       | APPEND STRING
  132       | APPEND
  133       | APPEND '(' INTEGER ')' STRING
  134       | APPEND '(' INTEGER ')'
  135       | CLOSE '(' IDENT ')'
  136       | PRINT STRING
  137       | PRINT '(' STRING ')' STRING
  138       | PRINT '(' IDENT ')' STRING
  139       | PRINT

  140 if_block: IF '(' expression ')' '{' instructions '}'
  141         | IF '(' expression ')' '{' instructions '}' ELSE '{' instructions '}'
  142         | IF_TRANSIENT '(' expression ')' '{' instructions '}'
  143         | IF_TRANSIENT '(' expression ')' '{' instructions '}' ELSE '{' instructions '}'

  144 when_block: WHEN '(' expression ')' set semi
  145           | WHEN '(' expression ')' '{' set_list '}'
  146           | WHEN '(' expression ')' '{' set_list '}' ELSE '{' set_list '}'

  147 set: SET IDENT '=' expression
  148    | SET_NOFAIL IDENT '=' expression

  149 set_list: set semi
  150         | set_list set semi

  151 default: empty
  152        | '=' argument_list

  153 flags: empty
  154      | ':' flag_list

  155 flag_list: flag
  156          | flag_list ',' flag

  157 flag: READ_ONLY
  158     | LOWERCASE
  159     | DUMP
  160     | NO_COPY
  161     | NO_FAIL
  162     | HIDDEN
  163     | EDITION_SPECIFIC
  164     | CAN_BE_MISSING
  165     | CONSTRAINT
  166     | COPY_OK
  167     | COPY_AS_LONG
  168     | COPY_IF_CHANGING_EDITION
  169     | TRANS
  170     | STRING_TYPE
  171     | LONG_TYPE
  172     | DOUBLE_TYPE

  173 list_block: IDENT LIST '(' expression ')' '{' instructions '}'

  174 while_block: WHILE '(' expression ')' '{' instructions '}'

  175 trigger_block: TRIGGER '(' argument_list ')' '{' instructions '}'

  176 concept_block: CONCEPT IDENT '{' concept_list '}' flags
  177              | CONCEPT IDENT '(' IDENT ')' '{' concept_list '}' flags
  178              | CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  179              | CONCEPT IDENT '(' IDENT ',' IDENT ',' IDENT ',' IDENT ')' flags
  180              | CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ',' IDENT ')' flags
  181              | CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT ')' flags
  182              | CONCEPT IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  183              | CONCEPT IDENT '.' IDENT '(' IDENT ',' IDENT ',' IDENT ',' IDENT ')' flags
  184              | CONCEPT IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ')' flags
  185              | CONCEPT IDENT '.' IDENT '{' concept_list '}' flags
  186              | CONCEPT IDENT '.' IDENT '(' IDENT ')' '{' concept_list '}' flags
  187              | CONCEPT_NOFAIL IDENT '{' concept_list '}' flags
  188              | CONCEPT_NOFAIL IDENT '(' IDENT ')' '{' concept_list '}' flags
  189              | CONCEPT_NOFAIL IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  190              | CONCEPT_NOFAIL IDENT '(' IDENT ',' STRING ',' IDENT ')' flags
  191              | CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  192              | CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ')' flags
  193              | CONCEPT_NOFAIL IDENT '.' IDENT '{' concept_list '}' flags
  194              | CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ')' '{' concept_list '}' flags

  195 concept_list: concept_value
  196             | concept_list concept_value

  197 hash_array_list: hash_array_value
  198                | hash_array_list hash_array_value

  199 hash_array_block: HASH_ARRAY IDENT '{' hash_array_list '}' flags
  200                 | HASH_ARRAY IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags

  201 case_list: case_value
  202          | case_list case_value

  203 case_value: CASE arguments ':' instructions

  204 switch_block: SWITCH '(' argument_list ')' '{' case_list DEFAULT ':' instructions '}'
  205             | SWITCH '(' argument_list ')' '{' case_list DEFAULT ':' '}'
  206             | SWITCH '(' argument_list ')' '{' case_list '}'

  207 concept_value: STRING '=' '{' concept_conditions '}'
  208              | IDENT '=' '{' concept_conditions '}'
  209              | INTEGER '=' '{' concept_conditions '}'
  210              | FLOAT '=' '{' concept_conditions '}'

  211 concept_conditions: concept_condition
  212                   | concept_condition concept_conditions

  213 concept_condition: IDENT '=' expression ';'
  214                  | IDENT '=' '[' integer_array ']' ';'

  215 hash_array_value: STRING '=' '[' integer_array ']'
  216                 | IDENT '=' '[' integer_array ']'

  217 string_or_ident: SUBSTR '(' IDENT ',' INTEGER ',' INTEGER ')'
  218                | IDENT
  219                | SUBSTR '(' STRING ',' INTEGER ',' INTEGER ')'
  220                | STRING

  221 atom: string_or_ident
  222     | INTEGER
  223     | FLOAT
  224     | NIL
  225     | DUMMY
  226     | '(' expression ')'
  227     | '-' atom
  228     | IDENT '(' ')'
  229     | IDENT '(' argument_list ')'

  230 power: atom '^' power
  231      | atom

  232 factor: factor '*' power
  233       | factor '/' power
  234       | factor '%' power
  235       | factor BIT power
  236       | factor BITOFF power
  237       | power
  238       | LENGTH '(' IDENT ')'
  239       | IS_IN_LIST '(' IDENT ',' STRING ')'
  240       | IS_IN_DICT '(' IDENT ',' STRING ')'
  241       | IS_INTEGER '(' IDENT ',' INTEGER ')'
  242       | IS_INTEGER '(' IDENT ',' INTEGER ',' INTEGER ')'
  243       | IS_INTEGER '(' IDENT ')'

  244 term: term '+' factor
  245     | term '-' factor
  246     | factor

  247 condition: condition GT term
  248          | condition EQ term
  249          | condition LT term
  250          | condition GE term
  251          | condition LE term
  252          | condition NE term
  253          | string_or_ident IS string_or_ident
  254          | string_or_ident ISNOT string_or_ident
  255          | NOT condition
  256          | term

  257 conjunction: conjunction AND condition
  258            | condition

  259 disjunction: disjunction OR conjunction
  260            | conjunction

  261 expression: disjunction

  262 rule: fact
  263     | conditional_rule

  264 rule_entry: IDENT '=' expression ';'
  265           | SKIP ';'

  266 rule_entries: rule_entry
  267             | rule_entry rule_entries

  268 fact: rule_entry

  269 conditional_rule: IF '(' expression ')' '{' rule_entries '}'

  270 rules: rule
  271      | rule rules


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 234
    '(' (40) 38 39 42 43 44 45 53 54 57 58 59 60 61 63 65 66 96 97 99 100 101 102 112 113 114 115 116 117 119 120 129 130 133 134 135 137 138 140 141 142 143 144 145 146 173 174 175 177 178 179 180 181 182 183 184 186 188 189 190 191 192 194 200 204 205 206 217 219 226 228 229 238 239 240 241 242 243 269
    ')' (41) 38 39 42 43 44 45 53 54 57 58 59 60 61 63 65 66 96 97 99 100 101 102 112 113 114 115 116 117 119 120 129 130 133 134 135 137 138 140 141 142 143 144 145 146 173 174 175 177 178 179 180 181 182 183 184 186 188 189 190 191 192 194 200 204 205 206 217 219 226 228 229 238 239 240 241 242 243 269
    '*' (42) 232
    '+' (43) 244
    ',' (44) 9 11 13 15 34 119 156 178 179 180 181 182 183 184 189 190 191 192 200 217 219 239 240 241 242
    '-' (45) 227 245
    '.' (46) 85 92 110 111 113 182 183 184 185 186 191 192 193 194
    '/' (47) 233
    ':' (58) 154 203 204 205
    ';' (59) 18 19 20 29 30 213 214 264 265
    '=' (61) 43 44 45 60 61 88 89 90 108 110 122 123 124 125 126 147 148 152 207 208 209 210 213 214 215 216 264
    '[' (91) 36 37 39 40 47 48 49 50 51 52 54 55 56 57 58 62 63 64 65 84 86 93 95 96 97 103 214 215 216
    ']' (93) 36 37 39 40 47 48 49 50 51 52 54 55 56 57 58 62 63 64 65 84 86 93 95 96 97 103 214 215 216
    '^' (94) 230
    '{' (123) 90 124 125 140 141 142 143 145 146 173 174 175 176 177 185 186 187 188 193 194 199 204 205 206 207 208 209 210 269
    '}' (125) 90 124 125 140 141 142 143 145 146 173 174 175 176 177 185 186 187 188 193 194 199 204 205 206 207 208 209 210 269
    error (256) 6
    LOWERCASE (258) 158
    IF (259) 140 141 269
    IF_TRANSIENT (260) 142 143
    ELSE (261) 141 143 146
    END (262)
    CLOSE (263) 135
    UNSIGNED (264) 36 37 38 39
    TEMPLATE (265) 106
    TEMPLATE_NOFAIL (266) 107
    TRIGGER (267) 175
    ASCII (268) 40 47
    GROUP (269) 41 42
    NON_ALPHA (270) 46
    KSEC1EXPVER (271) 50
    LABEL (272) 67 68
    LIST (273) 173
    IS_IN_LIST (274) 239
    IS_IN_DICT (275) 240
    IS_INTEGER (276) 241 242 243
    TO_INTEGER (277) 43
    TO_STRING (278) 45
    SEX2DEC (279) 44
    WHILE (280) 174
    IBMFLOAT (281) 69 85 86
    SIGNED (282) 51 52 53 54
    UINT8 (283) 71
    INT8 (284) 70
    UINT16 (285) 73
    INT16 (286) 72
    UINT16_LITTLE_ENDIAN (287) 75
    INT16_LITTLE_ENDIAN (288) 74
    UINT32 (289) 77
    INT32 (290) 76
    UINT32_LITTLE_ENDIAN (291) 79
    INT32_LITTLE_ENDIAN (292) 78
    UINT64 (293) 81
    INT64 (294) 80
    UINT64_LITTLE_ENDIAN (295) 83
    INT64_LITTLE_ENDIAN (296) 82
    BLOB (297) 84
    BYTE (298) 48 49
    CODETABLE (299) 55 56 57 58
    SMART_TABLE (300) 59
    DICTIONARY (301) 60
    COMPLEX_CODETABLE (302) 62 63
    LOOKUP (303) 65
    ALIAS (304) 108 110
    UNALIAS (305) 109 111
    META (306) 112 113
    POS (307) 87
    INTCONST (308) 88
    TRANS (309) 89 90 169
    FLAGBIT (310) 66
    CONCEPT (311) 176 177 178 179 180 181 182 183 184 185 186
    GETENV (312) 61
    HASH_ARRAY (313) 199 200
    CONCEPT_NOFAIL (314) 187 188 189 190 191 192 193 194
    NIL (315) 224
    DUMMY (316) 225
    MODIFY (317) 121
    READ_ONLY (318) 157
    STRING_TYPE (319) 170
    LONG_TYPE (320) 171
    DOUBLE_TYPE (321) 172
    NO_COPY (322) 160
    DUMP (323) 159
    JSON (324)
    XML (325)
    NO_FAIL (326) 161
    EDITION_SPECIFIC (327) 163
    OVERRIDE (328)
    HIDDEN (329) 162
    CAN_BE_MISSING (330) 164
    MISSING (331) 122
    CONSTRAINT (332) 165
    COPY_OK (333) 166
    COPY_AS_LONG (334) 167
    COPY_IF_CHANGING_EDITION (335) 168
    WHEN (336) 144 145 146
    SET (337) 57 122 123 124 125 147
    SET_NOFAIL (338) 126 148
    WRITE (339) 127 128 129 130
    APPEND (340) 131 132 133 134
    PRINT (341) 136 137 138 139
    EXPORT (342) 117
    REMOVE (343) 118
    RENAME (344) 119
    SKIP (345) 265
    PAD (346) 99
    SECTION_PADDING (347) 105
    MESSAGE (348) 103
    MESSAGE_COPY (349) 104
    PADTO (350) 100
    PADTOEVEN (351) 101
    PADTOMULTIPLE (352) 102
    G1_HALF_BYTE (353) 94
    G1_MESSAGE_LENGTH (354) 96
    G1_SECTION4_LENGTH (355) 97
    SECTION_LENGTH (356) 95
    LENGTH (357) 238
    FLAG (358) 64
    ITERATOR (359) 114
    NEAREST (360) 115
    BOX (361) 116
    KSEC (362) 98
    ASSERT (363) 120
    SUBSTR (364) 217 219
    CASE (365) 203
    SWITCH (366) 204 205 206
    DEFAULT (367) 204 205
    EQ (368) 248
    NE (369) 252
    GE (370) 250
    LE (371) 251
    LT (372) 249
    GT (373) 247
    BIT (374) 235
    BITOFF (375) 236
    AND (376) 257
    OR (377) 259
    NOT (378) 255
    IS (379) 253
    ISNOT (380) 254
    IDENT <str> (381) 36 37 38 39 40 41 42 43 44 45 46 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 119 121 122 123 124 125 126 135 138 147 148 173 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 199 200 208 213 214 216 217 218 228 229 238 239 240 241 242 243 264
    STRING <str> (382) 12 13 47 68 106 107 127 129 131 133 136 137 138 178 180 181 182 184 189 190 191 192 200 207 215 219 220 239 240
    INTEGER <lval> (383) 10 11 14 15 36 37 38 39 40 47 48 49 50 51 52 53 54 55 57 58 62 63 64 65 95 96 97 103 129 130 133 134 209 217 219 222 241 242
    FLOAT <dval> (384) 8 9 91 92 93 210 223


Nonterminals, with rules where they appear

    $accept (147)
        on left: 0
    all (148)
        on left: 1 2 3 4 5 6
        on right: 0
    empty (149)
        on left: 7
        on right: 1 31 151 153
    dvalues <dvalue> (150)
        on left: 8 9 10 11
        on right: 9 11 90 124
    svalues <svalue> (151)
        on left: 12 13
        on right: 13 125
    integer_array <ivalue> (152)
        on left: 14 15
        on right: 15 214 215 216
    instructions <act> (153)
        on left: 16 17 18 19
        on right: 4 17 18 140 141 142 143 173 174 175 203 204
    instruction <act> (154)
        on left: 20 21 22 23 24 25 26 27 28
        on right: 16 17 18 19
    semi (155)
        on left: 29 30
        on right: 30 144 149 150
    argument_list <explist> (156)
        on left: 31 32
        on right: 37 39 42 43 44 45 49 52 54 58 59 60 61 63 65 66 84 96 97 99 100 101 102 112 113 114 115 116 117 118 152 175 204 205 206 229
    arguments <explist> (157)
        on left: 33 34
        on right: 32 34 203
    argument <explist> (158)
        on left: 35
        on right: 33 34 55 56 57 62 64 86 88 89 93 98
    simple <act> (159)
        on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139
        on right: 20
    if_block <act> (160)
        on left: 140 141 142 143
        on right: 21
    when_block <act> (161)
        on left: 144 145 146
        on right: 27
    set <act> (162)
        on left: 147 148
        on right: 144 149 150
    set_list <act> (163)
        on left: 149 150
        on right: 145 146 150
    default <explist> (164)
        on left: 151 152
        on right: 36 37 38 39 40 41 42 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 66 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 91 92 93 95 112 113
    flags <lval> (165)
        on left: 153 154
        on right: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 88 89 90 91 92 93 103 104 105 108 110 112 113 121 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 199 200
    flag_list <lval> (166)
        on left: 155 156
        on right: 154 156
    flag <lval> (167)
        on left: 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172
        on right: 155 156
    list_block <act> (168)
        on left: 173
        on right: 22
    while_block <act> (169)
        on left: 174
        on right: 23
    trigger_block <act> (170)
        on left: 175
        on right: 24
    concept_block <act> (171)
        on left: 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194
        on right: 25
    concept_list <concept_value> (172)
        on left: 195 196
        on right: 2 176 177 185 186 187 188 193 194 196
    hash_array_list <hash_array_value> (173)
        on left: 197 198
        on right: 3 198 199
    hash_array_block <act> (174)
        on left: 199 200
        on right: 26
    case_list <case_value> (175)
        on left: 201 202
        on right: 202 204 205 206
    case_value <case_value> (176)
        on left: 203
        on right: 201 202
    switch_block <act> (177)
        on left: 204 205 206
        on right: 28
    concept_value <concept_value> (178)
        on left: 207 208 209 210
        on right: 195 196
    concept_conditions <concept_condition> (179)
        on left: 211 212
        on right: 207 208 209 210 212
    concept_condition <concept_condition> (180)
        on left: 213 214
        on right: 211 212
    hash_array_value <hash_array_value> (181)
        on left: 215 216
        on right: 197 198
    string_or_ident <exp> (182)
        on left: 217 218 219 220
        on right: 221 253 254
    atom <exp> (183)
        on left: 221 222 223 224 225 226 227 228 229
        on right: 227 230 231
    power <exp> (184)
        on left: 230 231
        on right: 230 232 233 234 235 236 237
    factor <exp> (185)
        on left: 232 233 234 235 236 237 238 239 240 241 242 243
        on right: 232 233 234 235 236 244 245 246
    term <exp> (186)
        on left: 244 245 246
        on right: 244 245 247 248 249 250 251 252 256
    condition <exp> (187)
        on left: 247 248 249 250 251 252 253 254 255 256
        on right: 247 248 249 250 251 252 255 257 258
    conjunction <exp> (188)
        on left: 257 258
        on right: 257 259 260
    disjunction <exp> (189)
        on left: 259 260
        on right: 259 261
    expression <exp> (190)
        on left: 261
        on right: 35 120 123 126 140 141 142 143 144 145 146 147 148 173 174 213 226 264 269
    rule <rules> (191)
        on left: 262 263
        on right: 270 271
    rule_entry <rule_entry> (192)
        on left: 264 265
        on right: 266 267 268
    rule_entries <rule_entry> (193)
        on left: 266 267
        on right: 267 269
    fact <rules> (194)
        on left: 268
        on right: 262
    conditional_rule <rules> (195)
        on left: 269
        on right: 263
    rules <rules> (196)
        on left: 270 271
        on right: 5 271


State 0

    0 $accept: â¢ all $end

    error                 shift, and go to state 1
    IF                    shift, and go to state 2
    IF_TRANSIENT          shift, and go to state 3
    CLOSE                 shift, and go to state 4
    UNSIGNED              shift, and go to state 5
    TEMPLATE              shift, and go to state 6
    TEMPLATE_NOFAIL       shift, and go to state 7
    TRIGGER               shift, and go to state 8
    ASCII                 shift, and go to state 9
    GROUP                 shift, and go to state 10
    NON_ALPHA             shift, and go to state 11
    KSEC1EXPVER           shift, and go to state 12
    LABEL                 shift, and go to state 13
    WHILE                 shift, and go to state 14
    IBMFLOAT              shift, and go to state 15
    SIGNED                shift, and go to state 16
    UINT8                 shift, and go to state 17
    INT8                  shift, and go to state 18
    UINT16                shift, and go to state 19
    INT16                 shift, and go to state 20
    UINT16_LITTLE_ENDIAN  shift, and go to state 21
    INT16_LITTLE_ENDIAN   shift, and go to state 22
    UINT32                shift, and go to state 23
    INT32                 shift, and go to state 24
    UINT32_LITTLE_ENDIAN  shift, and go to state 25
    INT32_LITTLE_ENDIAN   shift, and go to state 26
    UINT64                shift, and go to state 27
    INT64                 shift, and go to state 28
    UINT64_LITTLE_ENDIAN  shift, and go to state 29
    INT64_LITTLE_ENDIAN   shift, and go to state 30
    BLOB                  shift, and go to state 31
    BYTE                  shift, and go to state 32
    CODETABLE             shift, and go to state 33
    SMART_TABLE           shift, and go to state 34
    COMPLEX_CODETABLE     shift, and go to state 35
    LOOKUP                shift, and go to state 36
    ALIAS                 shift, and go to state 37
    UNALIAS               shift, and go to state 38
    META                  shift, and go to state 39
    POS                   shift, and go to state 40
    INTCONST              shift, and go to state 41
    TRANS                 shift, and go to state 42
    FLAGBIT               shift, and go to state 43
    CONCEPT               shift, and go to state 44
    HASH_ARRAY            shift, and go to state 45
    CONCEPT_NOFAIL        shift, and go to state 46
    MODIFY                shift, and go to state 47
    WHEN                  shift, and go to state 48
    SET                   shift, and go to state 49
    SET_NOFAIL            shift, and go to state 50
    WRITE                 shift, and go to state 51
    APPEND                shift, and go to state 52
    PRINT                 shift, and go to state 53
    EXPORT                shift, and go to state 54
    REMOVE                shift, and go to state 55
    RENAME                shift, and go to state 56
    SKIP                  shift, and go to state 57
    PAD                   shift, and go to state 58
    SECTION_PADDING       shift, and go to state 59
    MESSAGE               shift, and go to state 60
    MESSAGE_COPY          shift, and go to state 61
    PADTO                 shift, and go to state 62
    PADTOEVEN             shift, and go to state 63
    PADTOMULTIPLE         shift, and go to state 64
    G1_HALF_BYTE          shift, and go to state 65
    G1_MESSAGE_LENGTH     shift, and go to state 66
    G1_SECTION4_LENGTH    shift, and go to state 67
    SECTION_LENGTH        shift, and go to state 68
    FLAG                  shift, and go to state 69
    ITERATOR              shift, and go to state 70
    NEAREST               shift, and go to state 71
    BOX                   shift, and go to state 72
    KSEC                  shift, and go to state 73
    ASSERT                shift, and go to state 74
    SWITCH                shift, and go to state 75
    IDENT                 shift, and go to state 76
    STRING                shift, and go to state 77
    INTEGER               shift, and go to state 78
    FLOAT                 shift, and go to state 79

    $end  reduce using rule 7 (empty)

    all               go to state 80
    empty             go to state 81
    instructions      go to state 82
    instruction       go to state 83
    simple            go to state 84
    if_block          go to state 85
    when_block        go to state 86
    list_block        go to state 87
    while_block       go to state 88
    trigger_block     go to state 89
    concept_block     go to state 90
    concept_list      go to state 91
    hash_array_list   go to state 92
    hash_array_block  go to state 93
    switch_block      go to state 94
    concept_value     go to state 95
    hash_array_value  go to state 96
    rule              go to state 97
    rule_entry        go to state 98
    fact              go to state 99
    conditional_rule  go to state 100
    rules             go to state 101


State 1

    6 all: error â¢

    $default  reduce using rule 6 (all)


State 2

  140 if_block: IF â¢ '(' expression ')' '{' instructions '}'
  141         | IF â¢ '(' expression ')' '{' instructions '}' ELSE '{' instructions '}'
  269 conditional_rule: IF â¢ '(' expression ')' '{' rule_entries '}'

    '('  shift, and go to state 102


State 3

  142 if_block: IF_TRANSIENT â¢ '(' expression ')' '{' instructions '}'
  143         | IF_TRANSIENT â¢ '(' expression ')' '{' instructions '}' ELSE '{' instructions '}'

    '('  shift, and go to state 103


State 4

  135 simple: CLOSE â¢ '(' IDENT ')'

    '('  shift, and go to state 104


State 5

   36 simple: UNSIGNED â¢ '[' INTEGER ']' IDENT default flags
   37       | UNSIGNED â¢ '[' INTEGER ']' IDENT '[' argument_list ']' default flags
   38       | UNSIGNED â¢ '(' INTEGER ')' IDENT default flags
   39       | UNSIGNED â¢ '(' INTEGER ')' IDENT '[' argument_list ']' default flags

    '['  shift, and go to state 105
    '('  shift, and go to state 106


State 6

  106 simple: TEMPLATE â¢ IDENT STRING

    IDENT  shift, and go to state 107


State 7

  107 simple: TEMPLATE_NOFAIL â¢ IDENT STRING

    IDENT  shift, and go to state 108


State 8

  175 trigger_block: TRIGGER â¢ '(' argument_list ')' '{' instructions '}'

    '('  shift, and go to state 109


State 9

   40 simple: ASCII â¢ '[' INTEGER ']' IDENT default flags
   47       | ASCII â¢ '[' INTEGER ']' STRING default flags

    '['  shift, and go to state 110


State 10

   41 simple: GROUP â¢ IDENT default flags
   42       | GROUP â¢ IDENT '(' argument_list ')' default flags

    IDENT  shift, and go to state 111


State 11

   46 simple: NON_ALPHA â¢ IDENT default flags

    IDENT  shift, and go to state 112


State 12

   50 simple: KSEC1EXPVER â¢ '[' INTEGER ']' IDENT default flags

    '['  shift, and go to state 113


State 13

   67 simple: LABEL â¢ IDENT
   68       | LABEL â¢ STRING

    IDENT   shift, and go to state 114
    STRING  shift, and go to state 115


State 14

  174 while_block: WHILE â¢ '(' expression ')' '{' instructions '}'

    '('  shift, and go to state 116


State 15

   69 simple: IBMFLOAT â¢ IDENT default flags
   85       | IBMFLOAT â¢ IDENT '.' IDENT default flags
   86       | IBMFLOAT â¢ IDENT '[' argument ']' default flags

    IDENT  shift, and go to state 117


State 16

   51 simple: SIGNED â¢ '[' INTEGER ']' IDENT default flags
   52       | SIGNED â¢ '[' INTEGER ']' IDENT '[' argument_list ']' default flags
   53       | SIGNED â¢ '(' INTEGER ')' IDENT default flags
   54       | SIGNED â¢ '(' INTEGER ')' IDENT '[' argument_list ']' default flags

    '['  shift, and go to state 118
    '('  shift, and go to state 119


State 17

   71 simple: UINT8 â¢ IDENT default flags

    IDENT  shift, and go to state 120


State 18

   70 simple: INT8 â¢ IDENT default flags

    IDENT  shift, and go to state 121


State 19

   73 simple: UINT16 â¢ IDENT default flags

    IDENT  shift, and go to state 122


State 20

   72 simple: INT16 â¢ IDENT default flags

    IDENT  shift, and go to state 123


State 21

   75 simple: UINT16_LITTLE_ENDIAN â¢ IDENT default flags

    IDENT  shift, and go to state 124


State 22

   74 simple: INT16_LITTLE_ENDIAN â¢ IDENT default flags

    IDENT  shift, and go to state 125


State 23

   77 simple: UINT32 â¢ IDENT default flags

    IDENT  shift, and go to state 126


State 24

   76 simple: INT32 â¢ IDENT default flags

    IDENT  shift, and go to state 127


State 25

   79 simple: UINT32_LITTLE_ENDIAN â¢ IDENT default flags

    IDENT  shift, and go to state 128


State 26

   78 simple: INT32_LITTLE_ENDIAN â¢ IDENT default flags

    IDENT  shift, and go to state 129


State 27

   81 simple: UINT64 â¢ IDENT default flags

    IDENT  shift, and go to state 130


State 28

   80 simple: INT64 â¢ IDENT default flags

    IDENT  shift, and go to state 131


State 29

   83 simple: UINT64_LITTLE_ENDIAN â¢ IDENT default flags

    IDENT  shift, and go to state 132


State 30

   82 simple: INT64_LITTLE_ENDIAN â¢ IDENT default flags

    IDENT  shift, and go to state 133


State 31

   84 simple: BLOB â¢ IDENT '[' argument_list ']' default flags

    IDENT  shift, and go to state 134


State 32

   48 simple: BYTE â¢ '[' INTEGER ']' IDENT default flags
   49       | BYTE â¢ '[' INTEGER ']' IDENT '[' argument_list ']' default flags

    '['  shift, and go to state 135


State 33

   55 simple: CODETABLE â¢ '[' INTEGER ']' IDENT argument default flags
   56       | CODETABLE â¢ '[' IDENT ']' IDENT argument default flags
   57       | CODETABLE â¢ '[' INTEGER ']' IDENT argument default SET '(' IDENT ')' flags
   58       | CODETABLE â¢ '[' INTEGER ']' IDENT '(' argument_list ')' default flags

    '['  shift, and go to state 136


State 34

   59 simple: SMART_TABLE â¢ IDENT '(' argument_list ')' default flags

    IDENT  shift, and go to state 137


State 35

   62 simple: COMPLEX_CODETABLE â¢ '[' INTEGER ']' IDENT argument default flags
   63       | COMPLEX_CODETABLE â¢ '[' INTEGER ']' IDENT '(' argument_list ')' default flags

    '['  shift, and go to state 138


State 36

   65 simple: LOOKUP â¢ '[' INTEGER ']' IDENT '(' argument_list ')' flags

    '['  shift, and go to state 139


State 37

  108 simple: ALIAS â¢ IDENT '=' IDENT flags
  110       | ALIAS â¢ IDENT '.' IDENT '=' IDENT flags

    IDENT  shift, and go to state 140


State 38

  109 simple: UNALIAS â¢ IDENT
  111       | UNALIAS â¢ IDENT '.' IDENT

    IDENT  shift, and go to state 141


State 39

  112 simple: META â¢ IDENT IDENT '(' argument_list ')' default flags
  113       | META â¢ IDENT '.' IDENT IDENT '(' argument_list ')' default flags

    IDENT  shift, and go to state 142


State 40

   87 simple: POS â¢ IDENT

    IDENT  shift, and go to state 143


State 41

   88 simple: INTCONST â¢ IDENT '=' argument flags

    IDENT  shift, and go to state 144


State 42

   89 simple: TRANS â¢ IDENT '=' argument flags
   90       | TRANS â¢ IDENT '=' '{' dvalues '}' flags

    IDENT  shift, and go to state 145


State 43

   66 simple: FLAGBIT â¢ IDENT '(' argument_list ')' default flags

    IDENT  shift, and go to state 146


State 44

  176 concept_block: CONCEPT â¢ IDENT '{' concept_list '}' flags
  177              | CONCEPT â¢ IDENT '(' IDENT ')' '{' concept_list '}' flags
  178              | CONCEPT â¢ IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  179              | CONCEPT â¢ IDENT '(' IDENT ',' IDENT ',' IDENT ',' IDENT ')' flags
  180              | CONCEPT â¢ IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ',' IDENT ')' flags
  181              | CONCEPT â¢ IDENT '(' IDENT ',' STRING ',' IDENT ')' flags
  182              | CONCEPT â¢ IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  183              | CONCEPT â¢ IDENT '.' IDENT '(' IDENT ',' IDENT ',' IDENT ',' IDENT ')' flags
  184              | CONCEPT â¢ IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ')' flags
  185              | CONCEPT â¢ IDENT '.' IDENT '{' concept_list '}' flags
  186              | CONCEPT â¢ IDENT '.' IDENT '(' IDENT ')' '{' concept_list '}' flags

    IDENT  shift, and go to state 147


State 45

  199 hash_array_block: HASH_ARRAY â¢ IDENT '{' hash_array_list '}' flags
  200                 | HASH_ARRAY â¢ IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags

    IDENT  shift, and go to state 148


State 46

  187 concept_block: CONCEPT_NOFAIL â¢ IDENT '{' concept_list '}' flags
  188              | CONCEPT_NOFAIL â¢ IDENT '(' IDENT ')' '{' concept_list '}' flags
  189              | CONCEPT_NOFAIL â¢ IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  190              | CONCEPT_NOFAIL â¢ IDENT '(' IDENT ',' STRING ',' IDENT ')' flags
  191              | CONCEPT_NOFAIL â¢ IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  192              | CONCEPT_NOFAIL â¢ IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ')' flags
  193              | CONCEPT_NOFAIL â¢ IDENT '.' IDENT '{' concept_list '}' flags
  194              | CONCEPT_NOFAIL â¢ IDENT '.' IDENT '(' IDENT ')' '{' concept_list '}' flags

    IDENT  shift, and go to state 149


State 47

  121 simple: MODIFY â¢ IDENT flags

    IDENT  shift, and go to state 150


State 48

  144 when_block: WHEN â¢ '(' expression ')' set semi
  145           | WHEN â¢ '(' expression ')' '{' set_list '}'
  146           | WHEN â¢ '(' expression ')' '{' set_list '}' ELSE '{' set_list '}'

    '('  shift, and go to state 151


State 49

  122 simple: SET â¢ IDENT '=' MISSING
  123       | SET â¢ IDENT '=' expression
  124       | SET â¢ IDENT '=' '{' dvalues '}'
  125       | SET â¢ IDENT '=' '{' svalues '}'

    IDENT  shift, and go to state 152


State 50

  126 simple: SET_NOFAIL â¢ IDENT '=' expression

    IDENT  shift, and go to state 153


State 51

  127 simple: WRITE â¢ STRING
  128       | WRITE â¢
  129       | WRITE â¢ '(' INTEGER ')' STRING
  130       | WRITE â¢ '(' INTEGER ')'

    STRING  shift, and go to state 154
    '('     shift, and go to state 155

    $default  reduce using rule 128 (simple)


State 52

  131 simple: APPEND â¢ STRING
  132       | APPEND â¢
  133       | APPEND â¢ '(' INTEGER ')' STRING
  134       | APPEND â¢ '(' INTEGER ')'

    STRING  shift, and go to state 156
    '('     shift, and go to state 157

    $default  reduce using rule 132 (simple)


State 53

  136 simple: PRINT â¢ STRING
  137       | PRINT â¢ '(' STRING ')' STRING
  138       | PRINT â¢ '(' IDENT ')' STRING
  139       | PRINT â¢

    STRING  shift, and go to state 158
    '('     shift, and go to state 159

    $default  reduce using rule 139 (simple)


State 54

  117 simple: EXPORT â¢ IDENT '(' argument_list ')'

    IDENT  shift, and go to state 160


State 55

  118 simple: REMOVE â¢ argument_list

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 176
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 56

  119 simple: RENAME â¢ '(' IDENT ',' IDENT ')'

    '('  shift, and go to state 188


State 57

  265 rule_entry: SKIP â¢ ';'

    ';'  shift, and go to state 189


State 58

   99 simple: PAD â¢ IDENT '(' argument_list ')'

    IDENT  shift, and go to state 190


State 59

  105 simple: SECTION_PADDING â¢ IDENT flags

    IDENT  shift, and go to state 191


State 60

  103 simple: MESSAGE â¢ '[' INTEGER ']' IDENT flags

    '['  shift, and go to state 192


State 61

  104 simple: MESSAGE_COPY â¢ IDENT flags

    IDENT  shift, and go to state 193


State 62

  100 simple: PADTO â¢ IDENT '(' argument_list ')'

    IDENT  shift, and go to state 194


State 63

  101 simple: PADTOEVEN â¢ IDENT '(' argument_list ')'

    IDENT  shift, and go to state 195


State 64

  102 simple: PADTOMULTIPLE â¢ IDENT '(' argument_list ')'

    IDENT  shift, and go to state 196


State 65

   94 simple: G1_HALF_BYTE â¢ IDENT

    IDENT  shift, and go to state 197


State 66

   96 simple: G1_MESSAGE_LENGTH â¢ '[' INTEGER ']' IDENT '(' argument_list ')'

    '['  shift, and go to state 198


State 67

   97 simple: G1_SECTION4_LENGTH â¢ '[' INTEGER ']' IDENT '(' argument_list ')'

    '['  shift, and go to state 199


State 68

   95 simple: SECTION_LENGTH â¢ '[' INTEGER ']' IDENT default

    '['  shift, and go to state 200


State 69

   64 simple: FLAG â¢ '[' INTEGER ']' IDENT argument default flags

    '['  shift, and go to state 201


State 70

  114 simple: ITERATOR â¢ IDENT '(' argument_list ')'

    IDENT  shift, and go to state 202


State 71

  115 simple: NEAREST â¢ IDENT '(' argument_list ')'

    IDENT  shift, and go to state 203


State 72

  116 simple: BOX â¢ IDENT '(' argument_list ')'

    IDENT  shift, and go to state 204


State 73

   98 simple: KSEC â¢ IDENT argument

    IDENT  shift, and go to state 205


State 74

  120 simple: ASSERT â¢ '(' expression ')'

    '('  shift, and go to state 206


State 75

  204 switch_block: SWITCH â¢ '(' argument_list ')' '{' case_list DEFAULT ':' instructions '}'
  205             | SWITCH â¢ '(' argument_list ')' '{' case_list DEFAULT ':' '}'
  206             | SWITCH â¢ '(' argument_list ')' '{' case_list '}'

    '('  shift, and go to state 207


State 76

   43 simple: IDENT â¢ '=' TO_INTEGER '(' argument_list ')' flags
   44       | IDENT â¢ '=' SEX2DEC '(' argument_list ')' flags
   45       | IDENT â¢ '=' TO_STRING '(' argument_list ')' flags
   60       | IDENT â¢ '=' DICTIONARY '(' argument_list ')' default flags
   61       | IDENT â¢ '=' GETENV '(' argument_list ')' default flags
  173 list_block: IDENT â¢ LIST '(' expression ')' '{' instructions '}'
  208 concept_value: IDENT â¢ '=' '{' concept_conditions '}'
  216 hash_array_value: IDENT â¢ '=' '[' integer_array ']'
  264 rule_entry: IDENT â¢ '=' expression ';'

    LIST  shift, and go to state 208
    '='   shift, and go to state 209


State 77

  207 concept_value: STRING â¢ '=' '{' concept_conditions '}'
  215 hash_array_value: STRING â¢ '=' '[' integer_array ']'

    '='  shift, and go to state 210


State 78

  209 concept_value: INTEGER â¢ '=' '{' concept_conditions '}'

    '='  shift, and go to state 211


State 79

   91 simple: FLOAT â¢ IDENT default flags
   92       | FLOAT â¢ IDENT '.' IDENT default flags
   93       | FLOAT â¢ IDENT '[' argument ']' default flags
  210 concept_value: FLOAT â¢ '=' '{' concept_conditions '}'

    IDENT  shift, and go to state 212
    '='    shift, and go to state 213


State 80

    0 $accept: all â¢ $end

    $end  shift, and go to state 214


State 81

    1 all: empty â¢

    $default  reduce using rule 1 (all)


State 82

    4 all: instructions â¢

    $default  reduce using rule 4 (all)


State 83

   16 instructions: instruction â¢
   17             | instruction â¢ instructions
   18             | instruction â¢ ';' instructions
   19             | instruction â¢ ';'

    IF                    shift, and go to state 215
    IF_TRANSIENT          shift, and go to state 3
    CLOSE                 shift, and go to state 4
    UNSIGNED              shift, and go to state 5
    TEMPLATE              shift, and go to state 6
    TEMPLATE_NOFAIL       shift, and go to state 7
    TRIGGER               shift, and go to state 8
    ASCII                 shift, and go to state 9
    GROUP                 shift, and go to state 10
    NON_ALPHA             shift, and go to state 11
    KSEC1EXPVER           shift, and go to state 12
    LABEL                 shift, and go to state 13
    WHILE                 shift, and go to state 14
    IBMFLOAT              shift, and go to state 15
    SIGNED                shift, and go to state 16
    UINT8                 shift, and go to state 17
    INT8                  shift, and go to state 18
    UINT16                shift, and go to state 19
    INT16                 shift, and go to state 20
    UINT16_LITTLE_ENDIAN  shift, and go to state 21
    INT16_LITTLE_ENDIAN   shift, and go to state 22
    UINT32                shift, and go to state 23
    INT32                 shift, and go to state 24
    UINT32_LITTLE_ENDIAN  shift, and go to state 25
    INT32_LITTLE_ENDIAN   shift, and go to state 26
    UINT64                shift, and go to state 27
    INT64                 shift, and go to state 28
    UINT64_LITTLE_ENDIAN  shift, and go to state 29
    INT64_LITTLE_ENDIAN   shift, and go to state 30
    BLOB                  shift, and go to state 31
    BYTE                  shift, and go to state 32
    CODETABLE             shift, and go to state 33
    SMART_TABLE           shift, and go to state 34
    COMPLEX_CODETABLE     shift, and go to state 35
    LOOKUP                shift, and go to state 36
    ALIAS                 shift, and go to state 37
    UNALIAS               shift, and go to state 38
    META                  shift, and go to state 39
    POS                   shift, and go to state 40
    INTCONST              shift, and go to state 41
    TRANS                 shift, and go to state 42
    FLAGBIT               shift, and go to state 43
    CONCEPT               shift, and go to state 44
    HASH_ARRAY            shift, and go to state 45
    CONCEPT_NOFAIL        shift, and go to state 46
    MODIFY                shift, and go to state 47
    WHEN                  shift, and go to state 48
    SET                   shift, and go to state 49
    SET_NOFAIL            shift, and go to state 50
    WRITE                 shift, and go to state 51
    APPEND                shift, and go to state 52
    PRINT                 shift, and go to state 53
    EXPORT                shift, and go to state 54
    REMOVE                shift, and go to state 55
    RENAME                shift, and go to state 56
    PAD                   shift, and go to state 58
    SECTION_PADDING       shift, and go to state 59
    MESSAGE               shift, and go to state 60
    MESSAGE_COPY          shift, and go to state 61
    PADTO                 shift, and go to state 62
    PADTOEVEN             shift, and go to state 63
    PADTOMULTIPLE         shift, and go to state 64
    G1_HALF_BYTE          shift, and go to state 65
    G1_MESSAGE_LENGTH     shift, and go to state 66
    G1_SECTION4_LENGTH    shift, and go to state 67
    SECTION_LENGTH        shift, and go to state 68
    FLAG                  shift, and go to state 69
    ITERATOR              shift, and go to state 70
    NEAREST               shift, and go to state 71
    BOX                   shift, and go to state 72
    KSEC                  shift, and go to state 73
    ASSERT                shift, and go to state 74
    SWITCH                shift, and go to state 75
    IDENT                 shift, and go to state 216
    FLOAT                 shift, and go to state 217
    ';'                   shift, and go to state 218

    $default  reduce using rule 16 (instructions)

    instructions      go to state 219
    instruction       go to state 83
    simple            go to state 84
    if_block          go to state 85
    when_block        go to state 86
    list_block        go to state 87
    while_block       go to state 88
    trigger_block     go to state 89
    concept_block     go to state 90
    hash_array_block  go to state 93
    switch_block      go to state 94


State 84

   20 instruction: simple â¢ ';'

    ';'  shift, and go to state 220


State 85

   21 instruction: if_block â¢

    $default  reduce using rule 21 (instruction)


State 86

   27 instruction: when_block â¢

    $default  reduce using rule 27 (instruction)


State 87

   22 instruction: list_block â¢

    $default  reduce using rule 22 (instruction)


State 88

   23 instruction: while_block â¢

    $default  reduce using rule 23 (instruction)


State 89

   24 instruction: trigger_block â¢

    $default  reduce using rule 24 (instruction)


State 90

   25 instruction: concept_block â¢

    $default  reduce using rule 25 (instruction)


State 91

    2 all: concept_list â¢
  196 concept_list: concept_list â¢ concept_value

    IDENT    shift, and go to state 221
    STRING   shift, and go to state 222
    INTEGER  shift, and go to state 78
    FLOAT    shift, and go to state 223

    $default  reduce using rule 2 (all)

    concept_value  go to state 224


State 92

    3 all: hash_array_list â¢
  198 hash_array_list: hash_array_list â¢ hash_array_value

    IDENT   shift, and go to state 225
    STRING  shift, and go to state 226

    $default  reduce using rule 3 (all)

    hash_array_value  go to state 227


State 93

   26 instruction: hash_array_block â¢

    $default  reduce using rule 26 (instruction)


State 94

   28 instruction: switch_block â¢

    $default  reduce using rule 28 (instruction)


State 95

  195 concept_list: concept_value â¢

    $default  reduce using rule 195 (concept_list)


State 96

  197 hash_array_list: hash_array_value â¢

    $default  reduce using rule 197 (hash_array_list)


State 97

  270 rules: rule â¢
  271      | rule â¢ rules

    IF     shift, and go to state 228
    SKIP   shift, and go to state 57
    IDENT  shift, and go to state 229

    $default  reduce using rule 270 (rules)

    rule              go to state 97
    rule_entry        go to state 98
    fact              go to state 99
    conditional_rule  go to state 100
    rules             go to state 230


State 98

  268 fact: rule_entry â¢

    $default  reduce using rule 268 (fact)


State 99

  262 rule: fact â¢

    $default  reduce using rule 262 (rule)


State 100

  263 rule: conditional_rule â¢

    $default  reduce using rule 263 (rule)


State 101

    5 all: rules â¢

    $default  reduce using rule 5 (all)


State 102

  140 if_block: IF '(' â¢ expression ')' '{' instructions '}'
  141         | IF '(' â¢ expression ')' '{' instructions '}' ELSE '{' instructions '}'
  269 conditional_rule: IF '(' â¢ expression ')' '{' rule_entries '}'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 231


State 103

  142 if_block: IF_TRANSIENT '(' â¢ expression ')' '{' instructions '}'
  143         | IF_TRANSIENT '(' â¢ expression ')' '{' instructions '}' ELSE '{' instructions '}'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 232


State 104

  135 simple: CLOSE '(' â¢ IDENT ')'

    IDENT  shift, and go to state 233


State 105

   36 simple: UNSIGNED '[' â¢ INTEGER ']' IDENT default flags
   37       | UNSIGNED '[' â¢ INTEGER ']' IDENT '[' argument_list ']' default flags

    INTEGER  shift, and go to state 234


State 106

   38 simple: UNSIGNED '(' â¢ INTEGER ')' IDENT default flags
   39       | UNSIGNED '(' â¢ INTEGER ')' IDENT '[' argument_list ']' default flags

    INTEGER  shift, and go to state 235


State 107

  106 simple: TEMPLATE IDENT â¢ STRING

    STRING  shift, and go to state 236


State 108

  107 simple: TEMPLATE_NOFAIL IDENT â¢ STRING

    STRING  shift, and go to state 237


State 109

  175 trigger_block: TRIGGER '(' â¢ argument_list ')' '{' instructions '}'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 238
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 110

   40 simple: ASCII '[' â¢ INTEGER ']' IDENT default flags
   47       | ASCII '[' â¢ INTEGER ']' STRING default flags

    INTEGER  shift, and go to state 239


State 111

   41 simple: GROUP IDENT â¢ default flags
   42       | GROUP IDENT â¢ '(' argument_list ')' default flags

    '('  shift, and go to state 240
    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 243


State 112

   46 simple: NON_ALPHA IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 244


State 113

   50 simple: KSEC1EXPVER '[' â¢ INTEGER ']' IDENT default flags

    INTEGER  shift, and go to state 245


State 114

   67 simple: LABEL IDENT â¢

    $default  reduce using rule 67 (simple)


State 115

   68 simple: LABEL STRING â¢

    $default  reduce using rule 68 (simple)


State 116

  174 while_block: WHILE '(' â¢ expression ')' '{' instructions '}'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 246


State 117

   69 simple: IBMFLOAT IDENT â¢ default flags
   85       | IBMFLOAT IDENT â¢ '.' IDENT default flags
   86       | IBMFLOAT IDENT â¢ '[' argument ']' default flags

    '['  shift, and go to state 247
    '='  shift, and go to state 241
    '.'  shift, and go to state 248

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 249


State 118

   51 simple: SIGNED '[' â¢ INTEGER ']' IDENT default flags
   52       | SIGNED '[' â¢ INTEGER ']' IDENT '[' argument_list ']' default flags

    INTEGER  shift, and go to state 250


State 119

   53 simple: SIGNED '(' â¢ INTEGER ')' IDENT default flags
   54       | SIGNED '(' â¢ INTEGER ')' IDENT '[' argument_list ']' default flags

    INTEGER  shift, and go to state 251


State 120

   71 simple: UINT8 IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 252


State 121

   70 simple: INT8 IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 253


State 122

   73 simple: UINT16 IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 254


State 123

   72 simple: INT16 IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 255


State 124

   75 simple: UINT16_LITTLE_ENDIAN IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 256


State 125

   74 simple: INT16_LITTLE_ENDIAN IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 257


State 126

   77 simple: UINT32 IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 258


State 127

   76 simple: INT32 IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 259


State 128

   79 simple: UINT32_LITTLE_ENDIAN IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 260


State 129

   78 simple: INT32_LITTLE_ENDIAN IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 261


State 130

   81 simple: UINT64 IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 262


State 131

   80 simple: INT64 IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 263


State 132

   83 simple: UINT64_LITTLE_ENDIAN IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 264


State 133

   82 simple: INT64_LITTLE_ENDIAN IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 265


State 134

   84 simple: BLOB IDENT â¢ '[' argument_list ']' default flags

    '['  shift, and go to state 266


State 135

   48 simple: BYTE '[' â¢ INTEGER ']' IDENT default flags
   49       | BYTE '[' â¢ INTEGER ']' IDENT '[' argument_list ']' default flags

    INTEGER  shift, and go to state 267


State 136

   55 simple: CODETABLE '[' â¢ INTEGER ']' IDENT argument default flags
   56       | CODETABLE '[' â¢ IDENT ']' IDENT argument default flags
   57       | CODETABLE '[' â¢ INTEGER ']' IDENT argument default SET '(' IDENT ')' flags
   58       | CODETABLE '[' â¢ INTEGER ']' IDENT '(' argument_list ')' default flags

    IDENT    shift, and go to state 268
    INTEGER  shift, and go to state 269


State 137

   59 simple: SMART_TABLE IDENT â¢ '(' argument_list ')' default flags

    '('  shift, and go to state 270


State 138

   62 simple: COMPLEX_CODETABLE '[' â¢ INTEGER ']' IDENT argument default flags
   63       | COMPLEX_CODETABLE '[' â¢ INTEGER ']' IDENT '(' argument_list ')' default flags

    INTEGER  shift, and go to state 271


State 139

   65 simple: LOOKUP '[' â¢ INTEGER ']' IDENT '(' argument_list ')' flags

    INTEGER  shift, and go to state 272


State 140

  108 simple: ALIAS IDENT â¢ '=' IDENT flags
  110       | ALIAS IDENT â¢ '.' IDENT '=' IDENT flags

    '='  shift, and go to state 273
    '.'  shift, and go to state 274


State 141

  109 simple: UNALIAS IDENT â¢
  111       | UNALIAS IDENT â¢ '.' IDENT

    '.'  shift, and go to state 275

    $default  reduce using rule 109 (simple)


State 142

  112 simple: META IDENT â¢ IDENT '(' argument_list ')' default flags
  113       | META IDENT â¢ '.' IDENT IDENT '(' argument_list ')' default flags

    IDENT  shift, and go to state 276
    '.'    shift, and go to state 277


State 143

   87 simple: POS IDENT â¢

    $default  reduce using rule 87 (simple)


State 144

   88 simple: INTCONST IDENT â¢ '=' argument flags

    '='  shift, and go to state 278


State 145

   89 simple: TRANS IDENT â¢ '=' argument flags
   90       | TRANS IDENT â¢ '=' '{' dvalues '}' flags

    '='  shift, and go to state 279


State 146

   66 simple: FLAGBIT IDENT â¢ '(' argument_list ')' default flags

    '('  shift, and go to state 280


State 147

  176 concept_block: CONCEPT IDENT â¢ '{' concept_list '}' flags
  177              | CONCEPT IDENT â¢ '(' IDENT ')' '{' concept_list '}' flags
  178              | CONCEPT IDENT â¢ '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  179              | CONCEPT IDENT â¢ '(' IDENT ',' IDENT ',' IDENT ',' IDENT ')' flags
  180              | CONCEPT IDENT â¢ '(' IDENT ',' STRING ',' IDENT ',' IDENT ',' IDENT ')' flags
  181              | CONCEPT IDENT â¢ '(' IDENT ',' STRING ',' IDENT ')' flags
  182              | CONCEPT IDENT â¢ '.' IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  183              | CONCEPT IDENT â¢ '.' IDENT '(' IDENT ',' IDENT ',' IDENT ',' IDENT ')' flags
  184              | CONCEPT IDENT â¢ '.' IDENT '(' IDENT ',' STRING ',' IDENT ')' flags
  185              | CONCEPT IDENT â¢ '.' IDENT '{' concept_list '}' flags
  186              | CONCEPT IDENT â¢ '.' IDENT '(' IDENT ')' '{' concept_list '}' flags

    '('  shift, and go to state 281
    '.'  shift, and go to state 282
    '{'  shift, and go to state 283


State 148

  199 hash_array_block: HASH_ARRAY IDENT â¢ '{' hash_array_list '}' flags
  200                 | HASH_ARRAY IDENT â¢ '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags

    '('  shift, and go to state 284
    '{'  shift, and go to state 285


State 149

  187 concept_block: CONCEPT_NOFAIL IDENT â¢ '{' concept_list '}' flags
  188              | CONCEPT_NOFAIL IDENT â¢ '(' IDENT ')' '{' concept_list '}' flags
  189              | CONCEPT_NOFAIL IDENT â¢ '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  190              | CONCEPT_NOFAIL IDENT â¢ '(' IDENT ',' STRING ',' IDENT ')' flags
  191              | CONCEPT_NOFAIL IDENT â¢ '.' IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  192              | CONCEPT_NOFAIL IDENT â¢ '.' IDENT '(' IDENT ',' STRING ',' IDENT ')' flags
  193              | CONCEPT_NOFAIL IDENT â¢ '.' IDENT '{' concept_list '}' flags
  194              | CONCEPT_NOFAIL IDENT â¢ '.' IDENT '(' IDENT ')' '{' concept_list '}' flags

    '('  shift, and go to state 286
    '.'  shift, and go to state 287
    '{'  shift, and go to state 288


State 150

  121 simple: MODIFY IDENT â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 291


State 151

  144 when_block: WHEN '(' â¢ expression ')' set semi
  145           | WHEN '(' â¢ expression ')' '{' set_list '}'
  146           | WHEN '(' â¢ expression ')' '{' set_list '}' ELSE '{' set_list '}'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 292


State 152

  122 simple: SET IDENT â¢ '=' MISSING
  123       | SET IDENT â¢ '=' expression
  124       | SET IDENT â¢ '=' '{' dvalues '}'
  125       | SET IDENT â¢ '=' '{' svalues '}'

    '='  shift, and go to state 293


State 153

  126 simple: SET_NOFAIL IDENT â¢ '=' expression

    '='  shift, and go to state 294


State 154

  127 simple: WRITE STRING â¢

    $default  reduce using rule 127 (simple)


State 155

  129 simple: WRITE '(' â¢ INTEGER ')' STRING
  130       | WRITE '(' â¢ INTEGER ')'

    INTEGER  shift, and go to state 295


State 156

  131 simple: APPEND STRING â¢

    $default  reduce using rule 131 (simple)


State 157

  133 simple: APPEND '(' â¢ INTEGER ')' STRING
  134       | APPEND '(' â¢ INTEGER ')'

    INTEGER  shift, and go to state 296


State 158

  136 simple: PRINT STRING â¢

    $default  reduce using rule 136 (simple)


State 159

  137 simple: PRINT '(' â¢ STRING ')' STRING
  138       | PRINT '(' â¢ IDENT ')' STRING

    IDENT   shift, and go to state 297
    STRING  shift, and go to state 298


State 160

  117 simple: EXPORT IDENT â¢ '(' argument_list ')'

    '('  shift, and go to state 299


State 161

  239 factor: IS_IN_LIST â¢ '(' IDENT ',' STRING ')'

    '('  shift, and go to state 300


State 162

  240 factor: IS_IN_DICT â¢ '(' IDENT ',' STRING ')'

    '('  shift, and go to state 301


State 163

  241 factor: IS_INTEGER â¢ '(' IDENT ',' INTEGER ')'
  242       | IS_INTEGER â¢ '(' IDENT ',' INTEGER ',' INTEGER ')'
  243       | IS_INTEGER â¢ '(' IDENT ')'

    '('  shift, and go to state 302


State 164

  224 atom: NIL â¢

    $default  reduce using rule 224 (atom)


State 165

  225 atom: DUMMY â¢

    $default  reduce using rule 225 (atom)


State 166

  238 factor: LENGTH â¢ '(' IDENT ')'

    '('  shift, and go to state 303


State 167

  217 string_or_ident: SUBSTR â¢ '(' IDENT ',' INTEGER ',' INTEGER ')'
  219                | SUBSTR â¢ '(' STRING ',' INTEGER ',' INTEGER ')'

    '('  shift, and go to state 304


State 168

  255 condition: NOT â¢ condition

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 305


State 169

  218 string_or_ident: IDENT â¢
  228 atom: IDENT â¢ '(' ')'
  229     | IDENT â¢ '(' argument_list ')'

    '('  shift, and go to state 306

    $default  reduce using rule 218 (string_or_ident)


State 170

  220 string_or_ident: STRING â¢

    $default  reduce using rule 220 (string_or_ident)


State 171

  222 atom: INTEGER â¢

    $default  reduce using rule 222 (atom)


State 172

  223 atom: FLOAT â¢

    $default  reduce using rule 223 (atom)


State 173

  226 atom: '(' â¢ expression ')'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 307


State 174

  227 atom: '-' â¢ atom

    NIL      shift, and go to state 164
    DUMMY    shift, and go to state 165
    SUBSTR   shift, and go to state 167
    IDENT    shift, and go to state 169
    STRING   shift, and go to state 170
    INTEGER  shift, and go to state 171
    FLOAT    shift, and go to state 172
    '('      shift, and go to state 173
    '-'      shift, and go to state 174

    string_or_ident  go to state 308
    atom             go to state 309


State 175

   31 argument_list: empty â¢

    $default  reduce using rule 31 (argument_list)


State 176

  118 simple: REMOVE argument_list â¢

    $default  reduce using rule 118 (simple)


State 177

   32 argument_list: arguments â¢

    $default  reduce using rule 32 (argument_list)


State 178

   33 arguments: argument â¢
   34          | argument â¢ ',' arguments

    ','  shift, and go to state 310

    $default  reduce using rule 33 (arguments)


State 179

  221 atom: string_or_ident â¢
  253 condition: string_or_ident â¢ IS string_or_ident
  254          | string_or_ident â¢ ISNOT string_or_ident

    IS     shift, and go to state 311
    ISNOT  shift, and go to state 312

    $default  reduce using rule 221 (atom)


State 180

  230 power: atom â¢ '^' power
  231      | atom â¢

    '^'  shift, and go to state 313

    $default  reduce using rule 231 (power)


State 181

  237 factor: power â¢

    $default  reduce using rule 237 (factor)


State 182

  232 factor: factor â¢ '*' power
  233       | factor â¢ '/' power
  234       | factor â¢ '%' power
  235       | factor â¢ BIT power
  236       | factor â¢ BITOFF power
  246 term: factor â¢

    BIT     shift, and go to state 314
    BITOFF  shift, and go to state 315
    '*'     shift, and go to state 316
    '/'     shift, and go to state 317
    '%'     shift, and go to state 318

    $default  reduce using rule 246 (term)


State 183

  244 term: term â¢ '+' factor
  245     | term â¢ '-' factor
  256 condition: term â¢

    '-'  shift, and go to state 319
    '+'  shift, and go to state 320

    $default  reduce using rule 256 (condition)


State 184

  247 condition: condition â¢ GT term
  248          | condition â¢ EQ term
  249          | condition â¢ LT term
  250          | condition â¢ GE term
  251          | condition â¢ LE term
  252          | condition â¢ NE term
  258 conjunction: condition â¢

    EQ  shift, and go to state 321
    NE  shift, and go to state 322
    GE  shift, and go to state 323
    LE  shift, and go to state 324
    LT  shift, and go to state 325
    GT  shift, and go to state 326

    $default  reduce using rule 258 (conjunction)


State 185

  257 conjunction: conjunction â¢ AND condition
  260 disjunction: conjunction â¢

    AND  shift, and go to state 327

    $default  reduce using rule 260 (disjunction)


State 186

  259 disjunction: disjunction â¢ OR conjunction
  261 expression: disjunction â¢

    OR  shift, and go to state 328

    $default  reduce using rule 261 (expression)


State 187

   35 argument: expression â¢

    $default  reduce using rule 35 (argument)


State 188

  119 simple: RENAME '(' â¢ IDENT ',' IDENT ')'

    IDENT  shift, and go to state 329


State 189

  265 rule_entry: SKIP ';' â¢

    $default  reduce using rule 265 (rule_entry)


State 190

   99 simple: PAD IDENT â¢ '(' argument_list ')'

    '('  shift, and go to state 330


State 191

  105 simple: SECTION_PADDING IDENT â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 331


State 192

  103 simple: MESSAGE '[' â¢ INTEGER ']' IDENT flags

    INTEGER  shift, and go to state 332


State 193

  104 simple: MESSAGE_COPY IDENT â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 333


State 194

  100 simple: PADTO IDENT â¢ '(' argument_list ')'

    '('  shift, and go to state 334


State 195

  101 simple: PADTOEVEN IDENT â¢ '(' argument_list ')'

    '('  shift, and go to state 335


State 196

  102 simple: PADTOMULTIPLE IDENT â¢ '(' argument_list ')'

    '('  shift, and go to state 336


State 197

   94 simple: G1_HALF_BYTE IDENT â¢

    $default  reduce using rule 94 (simple)


State 198

   96 simple: G1_MESSAGE_LENGTH '[' â¢ INTEGER ']' IDENT '(' argument_list ')'

    INTEGER  shift, and go to state 337


State 199

   97 simple: G1_SECTION4_LENGTH '[' â¢ INTEGER ']' IDENT '(' argument_list ')'

    INTEGER  shift, and go to state 338


State 200

   95 simple: SECTION_LENGTH '[' â¢ INTEGER ']' IDENT default

    INTEGER  shift, and go to state 339


State 201

   64 simple: FLAG '[' â¢ INTEGER ']' IDENT argument default flags

    INTEGER  shift, and go to state 340


State 202

  114 simple: ITERATOR IDENT â¢ '(' argument_list ')'

    '('  shift, and go to state 341


State 203

  115 simple: NEAREST IDENT â¢ '(' argument_list ')'

    '('  shift, and go to state 342


State 204

  116 simple: BOX IDENT â¢ '(' argument_list ')'

    '('  shift, and go to state 343


State 205

   98 simple: KSEC IDENT â¢ argument

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    argument         go to state 344
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 206

  120 simple: ASSERT '(' â¢ expression ')'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 345


State 207

  204 switch_block: SWITCH '(' â¢ argument_list ')' '{' case_list DEFAULT ':' instructions '}'
  205             | SWITCH '(' â¢ argument_list ')' '{' case_list DEFAULT ':' '}'
  206             | SWITCH '(' â¢ argument_list ')' '{' case_list '}'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 346
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 208

  173 list_block: IDENT LIST â¢ '(' expression ')' '{' instructions '}'

    '('  shift, and go to state 347


State 209

   43 simple: IDENT '=' â¢ TO_INTEGER '(' argument_list ')' flags
   44       | IDENT '=' â¢ SEX2DEC '(' argument_list ')' flags
   45       | IDENT '=' â¢ TO_STRING '(' argument_list ')' flags
   60       | IDENT '=' â¢ DICTIONARY '(' argument_list ')' default flags
   61       | IDENT '=' â¢ GETENV '(' argument_list ')' default flags
  208 concept_value: IDENT '=' â¢ '{' concept_conditions '}'
  216 hash_array_value: IDENT '=' â¢ '[' integer_array ']'
  264 rule_entry: IDENT '=' â¢ expression ';'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    TO_INTEGER  shift, and go to state 348
    TO_STRING   shift, and go to state 349
    SEX2DEC     shift, and go to state 350
    DICTIONARY  shift, and go to state 351
    GETENV      shift, and go to state 352
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '['         shift, and go to state 353
    '('         shift, and go to state 173
    '{'         shift, and go to state 354
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 355


State 210

  207 concept_value: STRING '=' â¢ '{' concept_conditions '}'
  215 hash_array_value: STRING '=' â¢ '[' integer_array ']'

    '['  shift, and go to state 356
    '{'  shift, and go to state 357


State 211

  209 concept_value: INTEGER '=' â¢ '{' concept_conditions '}'

    '{'  shift, and go to state 358


State 212

   91 simple: FLOAT IDENT â¢ default flags
   92       | FLOAT IDENT â¢ '.' IDENT default flags
   93       | FLOAT IDENT â¢ '[' argument ']' default flags

    '['  shift, and go to state 359
    '='  shift, and go to state 241
    '.'  shift, and go to state 360

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 361


State 213

  210 concept_value: FLOAT '=' â¢ '{' concept_conditions '}'

    '{'  shift, and go to state 362


State 214

    0 $accept: all $end â¢

    $default  accept


State 215

  140 if_block: IF â¢ '(' expression ')' '{' instructions '}'
  141         | IF â¢ '(' expression ')' '{' instructions '}' ELSE '{' instructions '}'

    '('  shift, and go to state 363


State 216

   43 simple: IDENT â¢ '=' TO_INTEGER '(' argument_list ')' flags
   44       | IDENT â¢ '=' SEX2DEC '(' argument_list ')' flags
   45       | IDENT â¢ '=' TO_STRING '(' argument_list ')' flags
   60       | IDENT â¢ '=' DICTIONARY '(' argument_list ')' default flags
   61       | IDENT â¢ '=' GETENV '(' argument_list ')' default flags
  173 list_block: IDENT â¢ LIST '(' expression ')' '{' instructions '}'

    LIST  shift, and go to state 208
    '='   shift, and go to state 364


State 217

   91 simple: FLOAT â¢ IDENT default flags
   92       | FLOAT â¢ IDENT '.' IDENT default flags
   93       | FLOAT â¢ IDENT '[' argument ']' default flags

    IDENT  shift, and go to state 212


State 218

   18 instructions: instruction ';' â¢ instructions
   19             | instruction ';' â¢

    IF                    shift, and go to state 215
    IF_TRANSIENT          shift, and go to state 3
    CLOSE                 shift, and go to state 4
    UNSIGNED              shift, and go to state 5
    TEMPLATE              shift, and go to state 6
    TEMPLATE_NOFAIL       shift, and go to state 7
    TRIGGER               shift, and go to state 8
    ASCII                 shift, and go to state 9
    GROUP                 shift, and go to state 10
    NON_ALPHA             shift, and go to state 11
    KSEC1EXPVER           shift, and go to state 12
    LABEL                 shift, and go to state 13
    WHILE                 shift, and go to state 14
    IBMFLOAT              shift, and go to state 15
    SIGNED                shift, and go to state 16
    UINT8                 shift, and go to state 17
    INT8                  shift, and go to state 18
    UINT16                shift, and go to state 19
    INT16                 shift, and go to state 20
    UINT16_LITTLE_ENDIAN  shift, and go to state 21
    INT16_LITTLE_ENDIAN   shift, and go to state 22
    UINT32                shift, and go to state 23
    INT32                 shift, and go to state 24
    UINT32_LITTLE_ENDIAN  shift, and go to state 25
    INT32_LITTLE_ENDIAN   shift, and go to state 26
    UINT64                shift, and go to state 27
    INT64                 shift, and go to state 28
    UINT64_LITTLE_ENDIAN  shift, and go to state 29
    INT64_LITTLE_ENDIAN   shift, and go to state 30
    BLOB                  shift, and go to state 31
    BYTE                  shift, and go to state 32
    CODETABLE             shift, and go to state 33
    SMART_TABLE           shift, and go to state 34
    COMPLEX_CODETABLE     shift, and go to state 35
    LOOKUP                shift, and go to state 36
    ALIAS                 shift, and go to state 37
    UNALIAS               shift, and go to state 38
    META                  shift, and go to state 39
    POS                   shift, and go to state 40
    INTCONST              shift, and go to state 41
    TRANS                 shift, and go to state 42
    FLAGBIT               shift, and go to state 43
    CONCEPT               shift, and go to state 44
    HASH_ARRAY            shift, and go to state 45
    CONCEPT_NOFAIL        shift, and go to state 46
    MODIFY                shift, and go to state 47
    WHEN                  shift, and go to state 48
    SET                   shift, and go to state 49
    SET_NOFAIL            shift, and go to state 50
    WRITE                 shift, and go to state 51
    APPEND                shift, and go to state 52
    PRINT                 shift, and go to state 53
    EXPORT                shift, and go to state 54
    REMOVE                shift, and go to state 55
    RENAME                shift, and go to state 56
    PAD                   shift, and go to state 58
    SECTION_PADDING       shift, and go to state 59
    MESSAGE               shift, and go to state 60
    MESSAGE_COPY          shift, and go to state 61
    PADTO                 shift, and go to state 62
    PADTOEVEN             shift, and go to state 63
    PADTOMULTIPLE         shift, and go to state 64
    G1_HALF_BYTE          shift, and go to state 65
    G1_MESSAGE_LENGTH     shift, and go to state 66
    G1_SECTION4_LENGTH    shift, and go to state 67
    SECTION_LENGTH        shift, and go to state 68
    FLAG                  shift, and go to state 69
    ITERATOR              shift, and go to state 70
    NEAREST               shift, and go to state 71
    BOX                   shift, and go to state 72
    KSEC                  shift, and go to state 73
    ASSERT                shift, and go to state 74
    SWITCH                shift, and go to state 75
    IDENT                 shift, and go to state 216
    FLOAT                 shift, and go to state 217

    $default  reduce using rule 19 (instructions)

    instructions      go to state 365
    instruction       go to state 83
    simple            go to state 84
    if_block          go to state 85
    when_block        go to state 86
    list_block        go to state 87
    while_block       go to state 88
    trigger_block     go to state 89
    concept_block     go to state 90
    hash_array_block  go to state 93
    switch_block      go to state 94


State 219

   17 instructions: instruction instructions â¢

    $default  reduce using rule 17 (instructions)


State 220

   20 instruction: simple ';' â¢

    $default  reduce using rule 20 (instruction)


State 221

  208 concept_value: IDENT â¢ '=' '{' concept_conditions '}'

    '='  shift, and go to state 366


State 222

  207 concept_value: STRING â¢ '=' '{' concept_conditions '}'

    '='  shift, and go to state 367


State 223

  210 concept_value: FLOAT â¢ '=' '{' concept_conditions '}'

    '='  shift, and go to state 213


State 224

  196 concept_list: concept_list concept_value â¢

    $default  reduce using rule 196 (concept_list)


State 225

  216 hash_array_value: IDENT â¢ '=' '[' integer_array ']'

    '='  shift, and go to state 368


State 226

  215 hash_array_value: STRING â¢ '=' '[' integer_array ']'

    '='  shift, and go to state 369


State 227

  198 hash_array_list: hash_array_list hash_array_value â¢

    $default  reduce using rule 198 (hash_array_list)


State 228

  269 conditional_rule: IF â¢ '(' expression ')' '{' rule_entries '}'

    '('  shift, and go to state 370


State 229

  264 rule_entry: IDENT â¢ '=' expression ';'

    '='  shift, and go to state 371


State 230

  271 rules: rule rules â¢

    $default  reduce using rule 271 (rules)


State 231

  140 if_block: IF '(' expression â¢ ')' '{' instructions '}'
  141         | IF '(' expression â¢ ')' '{' instructions '}' ELSE '{' instructions '}'
  269 conditional_rule: IF '(' expression â¢ ')' '{' rule_entries '}'

    ')'  shift, and go to state 372


State 232

  142 if_block: IF_TRANSIENT '(' expression â¢ ')' '{' instructions '}'
  143         | IF_TRANSIENT '(' expression â¢ ')' '{' instructions '}' ELSE '{' instructions '}'

    ')'  shift, and go to state 373


State 233

  135 simple: CLOSE '(' IDENT â¢ ')'

    ')'  shift, and go to state 374


State 234

   36 simple: UNSIGNED '[' INTEGER â¢ ']' IDENT default flags
   37       | UNSIGNED '[' INTEGER â¢ ']' IDENT '[' argument_list ']' default flags

    ']'  shift, and go to state 375


State 235

   38 simple: UNSIGNED '(' INTEGER â¢ ')' IDENT default flags
   39       | UNSIGNED '(' INTEGER â¢ ')' IDENT '[' argument_list ']' default flags

    ')'  shift, and go to state 376


State 236

  106 simple: TEMPLATE IDENT STRING â¢

    $default  reduce using rule 106 (simple)


State 237

  107 simple: TEMPLATE_NOFAIL IDENT STRING â¢

    $default  reduce using rule 107 (simple)


State 238

  175 trigger_block: TRIGGER '(' argument_list â¢ ')' '{' instructions '}'

    ')'  shift, and go to state 377


State 239

   40 simple: ASCII '[' INTEGER â¢ ']' IDENT default flags
   47       | ASCII '[' INTEGER â¢ ']' STRING default flags

    ']'  shift, and go to state 378


State 240

   42 simple: GROUP IDENT '(' â¢ argument_list ')' default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 379
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 241

  152 default: '=' â¢ argument_list

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 380
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 242

  151 default: empty â¢

    $default  reduce using rule 151 (default)


State 243

   41 simple: GROUP IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 381


State 244

   46 simple: NON_ALPHA IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 382


State 245

   50 simple: KSEC1EXPVER '[' INTEGER â¢ ']' IDENT default flags

    ']'  shift, and go to state 383


State 246

  174 while_block: WHILE '(' expression â¢ ')' '{' instructions '}'

    ')'  shift, and go to state 384


State 247

   86 simple: IBMFLOAT IDENT '[' â¢ argument ']' default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    argument         go to state 385
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 248

   85 simple: IBMFLOAT IDENT '.' â¢ IDENT default flags

    IDENT  shift, and go to state 386


State 249

   69 simple: IBMFLOAT IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 387


State 250

   51 simple: SIGNED '[' INTEGER â¢ ']' IDENT default flags
   52       | SIGNED '[' INTEGER â¢ ']' IDENT '[' argument_list ']' default flags

    ']'  shift, and go to state 388


State 251

   53 simple: SIGNED '(' INTEGER â¢ ')' IDENT default flags
   54       | SIGNED '(' INTEGER â¢ ')' IDENT '[' argument_list ']' default flags

    ')'  shift, and go to state 389


State 252

   71 simple: UINT8 IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 390


State 253

   70 simple: INT8 IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 391


State 254

   73 simple: UINT16 IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 392


State 255

   72 simple: INT16 IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 393


State 256

   75 simple: UINT16_LITTLE_ENDIAN IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 394


State 257

   74 simple: INT16_LITTLE_ENDIAN IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 395


State 258

   77 simple: UINT32 IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 396


State 259

   76 simple: INT32 IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 397


State 260

   79 simple: UINT32_LITTLE_ENDIAN IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 398


State 261

   78 simple: INT32_LITTLE_ENDIAN IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 399


State 262

   81 simple: UINT64 IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 400


State 263

   80 simple: INT64 IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 401


State 264

   83 simple: UINT64_LITTLE_ENDIAN IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 402


State 265

   82 simple: INT64_LITTLE_ENDIAN IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 403


State 266

   84 simple: BLOB IDENT '[' â¢ argument_list ']' default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 404
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 267

   48 simple: BYTE '[' INTEGER â¢ ']' IDENT default flags
   49       | BYTE '[' INTEGER â¢ ']' IDENT '[' argument_list ']' default flags

    ']'  shift, and go to state 405


State 268

   56 simple: CODETABLE '[' IDENT â¢ ']' IDENT argument default flags

    ']'  shift, and go to state 406


State 269

   55 simple: CODETABLE '[' INTEGER â¢ ']' IDENT argument default flags
   57       | CODETABLE '[' INTEGER â¢ ']' IDENT argument default SET '(' IDENT ')' flags
   58       | CODETABLE '[' INTEGER â¢ ']' IDENT '(' argument_list ')' default flags

    ']'  shift, and go to state 407


State 270

   59 simple: SMART_TABLE IDENT '(' â¢ argument_list ')' default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 408
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 271

   62 simple: COMPLEX_CODETABLE '[' INTEGER â¢ ']' IDENT argument default flags
   63       | COMPLEX_CODETABLE '[' INTEGER â¢ ']' IDENT '(' argument_list ')' default flags

    ']'  shift, and go to state 409


State 272

   65 simple: LOOKUP '[' INTEGER â¢ ']' IDENT '(' argument_list ')' flags

    ']'  shift, and go to state 410


State 273

  108 simple: ALIAS IDENT '=' â¢ IDENT flags

    IDENT  shift, and go to state 411


State 274

  110 simple: ALIAS IDENT '.' â¢ IDENT '=' IDENT flags

    IDENT  shift, and go to state 412


State 275

  111 simple: UNALIAS IDENT '.' â¢ IDENT

    IDENT  shift, and go to state 413


State 276

  112 simple: META IDENT IDENT â¢ '(' argument_list ')' default flags

    '('  shift, and go to state 414


State 277

  113 simple: META IDENT '.' â¢ IDENT IDENT '(' argument_list ')' default flags

    IDENT  shift, and go to state 415


State 278

   88 simple: INTCONST IDENT '=' â¢ argument flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    argument         go to state 416
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 279

   89 simple: TRANS IDENT '=' â¢ argument flags
   90       | TRANS IDENT '=' â¢ '{' dvalues '}' flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '{'         shift, and go to state 417
    '-'         shift, and go to state 174

    argument         go to state 418
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 280

   66 simple: FLAGBIT IDENT '(' â¢ argument_list ')' default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 419
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 281

  177 concept_block: CONCEPT IDENT '(' â¢ IDENT ')' '{' concept_list '}' flags
  178              | CONCEPT IDENT '(' â¢ IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  179              | CONCEPT IDENT '(' â¢ IDENT ',' IDENT ',' IDENT ',' IDENT ')' flags
  180              | CONCEPT IDENT '(' â¢ IDENT ',' STRING ',' IDENT ',' IDENT ',' IDENT ')' flags
  181              | CONCEPT IDENT '(' â¢ IDENT ',' STRING ',' IDENT ')' flags

    IDENT  shift, and go to state 420


State 282

  182 concept_block: CONCEPT IDENT '.' â¢ IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  183              | CONCEPT IDENT '.' â¢ IDENT '(' IDENT ',' IDENT ',' IDENT ',' IDENT ')' flags
  184              | CONCEPT IDENT '.' â¢ IDENT '(' IDENT ',' STRING ',' IDENT ')' flags
  185              | CONCEPT IDENT '.' â¢ IDENT '{' concept_list '}' flags
  186              | CONCEPT IDENT '.' â¢ IDENT '(' IDENT ')' '{' concept_list '}' flags

    IDENT  shift, and go to state 421


State 283

  176 concept_block: CONCEPT IDENT '{' â¢ concept_list '}' flags

    IDENT    shift, and go to state 221
    STRING   shift, and go to state 222
    INTEGER  shift, and go to state 78
    FLOAT    shift, and go to state 223

    concept_list   go to state 422
    concept_value  go to state 95


State 284

  200 hash_array_block: HASH_ARRAY IDENT '(' â¢ IDENT ',' STRING ',' IDENT ',' IDENT ')' flags

    IDENT  shift, and go to state 423


State 285

  199 hash_array_block: HASH_ARRAY IDENT '{' â¢ hash_array_list '}' flags

    IDENT   shift, and go to state 225
    STRING  shift, and go to state 226

    hash_array_list   go to state 424
    hash_array_value  go to state 96


State 286

  188 concept_block: CONCEPT_NOFAIL IDENT '(' â¢ IDENT ')' '{' concept_list '}' flags
  189              | CONCEPT_NOFAIL IDENT '(' â¢ IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  190              | CONCEPT_NOFAIL IDENT '(' â¢ IDENT ',' STRING ',' IDENT ')' flags

    IDENT  shift, and go to state 425


State 287

  191 concept_block: CONCEPT_NOFAIL IDENT '.' â¢ IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  192              | CONCEPT_NOFAIL IDENT '.' â¢ IDENT '(' IDENT ',' STRING ',' IDENT ')' flags
  193              | CONCEPT_NOFAIL IDENT '.' â¢ IDENT '{' concept_list '}' flags
  194              | CONCEPT_NOFAIL IDENT '.' â¢ IDENT '(' IDENT ')' '{' concept_list '}' flags

    IDENT  shift, and go to state 426


State 288

  187 concept_block: CONCEPT_NOFAIL IDENT '{' â¢ concept_list '}' flags

    IDENT    shift, and go to state 221
    STRING   shift, and go to state 222
    INTEGER  shift, and go to state 78
    FLOAT    shift, and go to state 223

    concept_list   go to state 427
    concept_value  go to state 95


State 289

  154 flags: ':' â¢ flag_list

    LOWERCASE                 shift, and go to state 428
    TRANS                     shift, and go to state 429
    READ_ONLY                 shift, and go to state 430
    STRING_TYPE               shift, and go to state 431
    LONG_TYPE                 shift, and go to state 432
    DOUBLE_TYPE               shift, and go to state 433
    NO_COPY                   shift, and go to state 434
    DUMP                      shift, and go to state 435
    NO_FAIL                   shift, and go to state 436
    EDITION_SPECIFIC          shift, and go to state 437
    HIDDEN                    shift, and go to state 438
    CAN_BE_MISSING            shift, and go to state 439
    CONSTRAINT                shift, and go to state 440
    COPY_OK                   shift, and go to state 441
    COPY_AS_LONG              shift, and go to state 442
    COPY_IF_CHANGING_EDITION  shift, and go to state 443

    flag_list  go to state 444
    flag       go to state 445


State 290

  153 flags: empty â¢

    $default  reduce using rule 153 (flags)


State 291

  121 simple: MODIFY IDENT flags â¢

    $default  reduce using rule 121 (simple)


State 292

  144 when_block: WHEN '(' expression â¢ ')' set semi
  145           | WHEN '(' expression â¢ ')' '{' set_list '}'
  146           | WHEN '(' expression â¢ ')' '{' set_list '}' ELSE '{' set_list '}'

    ')'  shift, and go to state 446


State 293

  122 simple: SET IDENT '=' â¢ MISSING
  123       | SET IDENT '=' â¢ expression
  124       | SET IDENT '=' â¢ '{' dvalues '}'
  125       | SET IDENT '=' â¢ '{' svalues '}'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    MISSING     shift, and go to state 447
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '{'         shift, and go to state 448
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 449


State 294

  126 simple: SET_NOFAIL IDENT '=' â¢ expression

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 450


State 295

  129 simple: WRITE '(' INTEGER â¢ ')' STRING
  130       | WRITE '(' INTEGER â¢ ')'

    ')'  shift, and go to state 451


State 296

  133 simple: APPEND '(' INTEGER â¢ ')' STRING
  134       | APPEND '(' INTEGER â¢ ')'

    ')'  shift, and go to state 452


State 297

  138 simple: PRINT '(' IDENT â¢ ')' STRING

    ')'  shift, and go to state 453


State 298

  137 simple: PRINT '(' STRING â¢ ')' STRING

    ')'  shift, and go to state 454


State 299

  117 simple: EXPORT IDENT '(' â¢ argument_list ')'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 455
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 300

  239 factor: IS_IN_LIST '(' â¢ IDENT ',' STRING ')'

    IDENT  shift, and go to state 456


State 301

  240 factor: IS_IN_DICT '(' â¢ IDENT ',' STRING ')'

    IDENT  shift, and go to state 457


State 302

  241 factor: IS_INTEGER '(' â¢ IDENT ',' INTEGER ')'
  242       | IS_INTEGER '(' â¢ IDENT ',' INTEGER ',' INTEGER ')'
  243       | IS_INTEGER '(' â¢ IDENT ')'

    IDENT  shift, and go to state 458


State 303

  238 factor: LENGTH '(' â¢ IDENT ')'

    IDENT  shift, and go to state 459


State 304

  217 string_or_ident: SUBSTR '(' â¢ IDENT ',' INTEGER ',' INTEGER ')'
  219                | SUBSTR '(' â¢ STRING ',' INTEGER ',' INTEGER ')'

    IDENT   shift, and go to state 460
    STRING  shift, and go to state 461


State 305

  247 condition: condition â¢ GT term
  248          | condition â¢ EQ term
  249          | condition â¢ LT term
  250          | condition â¢ GE term
  251          | condition â¢ LE term
  252          | condition â¢ NE term
  255          | NOT condition â¢

    EQ  shift, and go to state 321
    NE  shift, and go to state 322
    GE  shift, and go to state 323
    LE  shift, and go to state 324
    LT  shift, and go to state 325
    GT  shift, and go to state 326

    EQ        [reduce using rule 255 (condition)]
    NE        [reduce using rule 255 (condition)]
    GE        [reduce using rule 255 (condition)]
    LE        [reduce using rule 255 (condition)]
    LT        [reduce using rule 255 (condition)]
    GT        [reduce using rule 255 (condition)]
    $default  reduce using rule 255 (condition)


State 306

  228 atom: IDENT '(' â¢ ')'
  229     | IDENT '(' â¢ argument_list ')'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    ')'         shift, and go to state 462
    '-'         shift, and go to state 174

    ')'  [reduce using rule 7 (empty)]

    empty            go to state 175
    argument_list    go to state 463
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 307

  226 atom: '(' expression â¢ ')'

    ')'  shift, and go to state 464


State 308

  221 atom: string_or_ident â¢

    $default  reduce using rule 221 (atom)


State 309

  227 atom: '-' atom â¢

    $default  reduce using rule 227 (atom)


State 310

   34 arguments: argument ',' â¢ arguments

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    arguments        go to state 465
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 311

  253 condition: string_or_ident IS â¢ string_or_ident

    SUBSTR  shift, and go to state 167
    IDENT   shift, and go to state 466
    STRING  shift, and go to state 170

    string_or_ident  go to state 467


State 312

  254 condition: string_or_ident ISNOT â¢ string_or_ident

    SUBSTR  shift, and go to state 167
    IDENT   shift, and go to state 466
    STRING  shift, and go to state 170

    string_or_ident  go to state 468


State 313

  230 power: atom '^' â¢ power

    NIL      shift, and go to state 164
    DUMMY    shift, and go to state 165
    SUBSTR   shift, and go to state 167
    IDENT    shift, and go to state 169
    STRING   shift, and go to state 170
    INTEGER  shift, and go to state 171
    FLOAT    shift, and go to state 172
    '('      shift, and go to state 173
    '-'      shift, and go to state 174

    string_or_ident  go to state 308
    atom             go to state 180
    power            go to state 469


State 314

  235 factor: factor BIT â¢ power

    NIL      shift, and go to state 164
    DUMMY    shift, and go to state 165
    SUBSTR   shift, and go to state 167
    IDENT    shift, and go to state 169
    STRING   shift, and go to state 170
    INTEGER  shift, and go to state 171
    FLOAT    shift, and go to state 172
    '('      shift, and go to state 173
    '-'      shift, and go to state 174

    string_or_ident  go to state 308
    atom             go to state 180
    power            go to state 470


State 315

  236 factor: factor BITOFF â¢ power

    NIL      shift, and go to state 164
    DUMMY    shift, and go to state 165
    SUBSTR   shift, and go to state 167
    IDENT    shift, and go to state 169
    STRING   shift, and go to state 170
    INTEGER  shift, and go to state 171
    FLOAT    shift, and go to state 172
    '('      shift, and go to state 173
    '-'      shift, and go to state 174

    string_or_ident  go to state 308
    atom             go to state 180
    power            go to state 471


State 316

  232 factor: factor '*' â¢ power

    NIL      shift, and go to state 164
    DUMMY    shift, and go to state 165
    SUBSTR   shift, and go to state 167
    IDENT    shift, and go to state 169
    STRING   shift, and go to state 170
    INTEGER  shift, and go to state 171
    FLOAT    shift, and go to state 172
    '('      shift, and go to state 173
    '-'      shift, and go to state 174

    string_or_ident  go to state 308
    atom             go to state 180
    power            go to state 472


State 317

  233 factor: factor '/' â¢ power

    NIL      shift, and go to state 164
    DUMMY    shift, and go to state 165
    SUBSTR   shift, and go to state 167
    IDENT    shift, and go to state 169
    STRING   shift, and go to state 170
    INTEGER  shift, and go to state 171
    FLOAT    shift, and go to state 172
    '('      shift, and go to state 173
    '-'      shift, and go to state 174

    string_or_ident  go to state 308
    atom             go to state 180
    power            go to state 473


State 318

  234 factor: factor '%' â¢ power

    NIL      shift, and go to state 164
    DUMMY    shift, and go to state 165
    SUBSTR   shift, and go to state 167
    IDENT    shift, and go to state 169
    STRING   shift, and go to state 170
    INTEGER  shift, and go to state 171
    FLOAT    shift, and go to state 172
    '('      shift, and go to state 173
    '-'      shift, and go to state 174

    string_or_ident  go to state 308
    atom             go to state 180
    power            go to state 474


State 319

  245 term: term '-' â¢ factor

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 308
    atom             go to state 180
    power            go to state 181
    factor           go to state 475


State 320

  244 term: term '+' â¢ factor

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 308
    atom             go to state 180
    power            go to state 181
    factor           go to state 476


State 321

  248 condition: condition EQ â¢ term

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 308
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 477


State 322

  252 condition: condition NE â¢ term

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 308
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 478


State 323

  250 condition: condition GE â¢ term

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 308
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 479


State 324

  251 condition: condition LE â¢ term

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 308
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 480


State 325

  249 condition: condition LT â¢ term

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 308
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 481


State 326

  247 condition: condition GT â¢ term

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 308
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 482


State 327

  257 conjunction: conjunction AND â¢ condition

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 483


State 328

  259 disjunction: disjunction OR â¢ conjunction

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 484


State 329

  119 simple: RENAME '(' IDENT â¢ ',' IDENT ')'

    ','  shift, and go to state 485


State 330

   99 simple: PAD IDENT '(' â¢ argument_list ')'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 486
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 331

  105 simple: SECTION_PADDING IDENT flags â¢

    $default  reduce using rule 105 (simple)


State 332

  103 simple: MESSAGE '[' INTEGER â¢ ']' IDENT flags

    ']'  shift, and go to state 487


State 333

  104 simple: MESSAGE_COPY IDENT flags â¢

    $default  reduce using rule 104 (simple)


State 334

  100 simple: PADTO IDENT '(' â¢ argument_list ')'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 488
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 335

  101 simple: PADTOEVEN IDENT '(' â¢ argument_list ')'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 489
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 336

  102 simple: PADTOMULTIPLE IDENT '(' â¢ argument_list ')'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 490
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 337

   96 simple: G1_MESSAGE_LENGTH '[' INTEGER â¢ ']' IDENT '(' argument_list ')'

    ']'  shift, and go to state 491


State 338

   97 simple: G1_SECTION4_LENGTH '[' INTEGER â¢ ']' IDENT '(' argument_list ')'

    ']'  shift, and go to state 492


State 339

   95 simple: SECTION_LENGTH '[' INTEGER â¢ ']' IDENT default

    ']'  shift, and go to state 493


State 340

   64 simple: FLAG '[' INTEGER â¢ ']' IDENT argument default flags

    ']'  shift, and go to state 494


State 341

  114 simple: ITERATOR IDENT '(' â¢ argument_list ')'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 495
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 342

  115 simple: NEAREST IDENT '(' â¢ argument_list ')'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 496
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 343

  116 simple: BOX IDENT '(' â¢ argument_list ')'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 497
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 344

   98 simple: KSEC IDENT argument â¢

    $default  reduce using rule 98 (simple)


State 345

  120 simple: ASSERT '(' expression â¢ ')'

    ')'  shift, and go to state 498


State 346

  204 switch_block: SWITCH '(' argument_list â¢ ')' '{' case_list DEFAULT ':' instructions '}'
  205             | SWITCH '(' argument_list â¢ ')' '{' case_list DEFAULT ':' '}'
  206             | SWITCH '(' argument_list â¢ ')' '{' case_list '}'

    ')'  shift, and go to state 499


State 347

  173 list_block: IDENT LIST '(' â¢ expression ')' '{' instructions '}'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 500


State 348

   43 simple: IDENT '=' TO_INTEGER â¢ '(' argument_list ')' flags

    '('  shift, and go to state 501


State 349

   45 simple: IDENT '=' TO_STRING â¢ '(' argument_list ')' flags

    '('  shift, and go to state 502


State 350

   44 simple: IDENT '=' SEX2DEC â¢ '(' argument_list ')' flags

    '('  shift, and go to state 503


State 351

   60 simple: IDENT '=' DICTIONARY â¢ '(' argument_list ')' default flags

    '('  shift, and go to state 504


State 352

   61 simple: IDENT '=' GETENV â¢ '(' argument_list ')' default flags

    '('  shift, and go to state 505


State 353

  216 hash_array_value: IDENT '=' '[' â¢ integer_array ']'

    INTEGER  shift, and go to state 506

    integer_array  go to state 507


State 354

  208 concept_value: IDENT '=' '{' â¢ concept_conditions '}'

    IDENT  shift, and go to state 508

    concept_conditions  go to state 509
    concept_condition   go to state 510


State 355

  264 rule_entry: IDENT '=' expression â¢ ';'

    ';'  shift, and go to state 511


State 356

  215 hash_array_value: STRING '=' '[' â¢ integer_array ']'

    INTEGER  shift, and go to state 506

    integer_array  go to state 512


State 357

  207 concept_value: STRING '=' '{' â¢ concept_conditions '}'

    IDENT  shift, and go to state 508

    concept_conditions  go to state 513
    concept_condition   go to state 510


State 358

  209 concept_value: INTEGER '=' '{' â¢ concept_conditions '}'

    IDENT  shift, and go to state 508

    concept_conditions  go to state 514
    concept_condition   go to state 510


State 359

   93 simple: FLOAT IDENT '[' â¢ argument ']' default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    argument         go to state 515
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 360

   92 simple: FLOAT IDENT '.' â¢ IDENT default flags

    IDENT  shift, and go to state 516


State 361

   91 simple: FLOAT IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 517


State 362

  210 concept_value: FLOAT '=' '{' â¢ concept_conditions '}'

    IDENT  shift, and go to state 508

    concept_conditions  go to state 518
    concept_condition   go to state 510


State 363

  140 if_block: IF '(' â¢ expression ')' '{' instructions '}'
  141         | IF '(' â¢ expression ')' '{' instructions '}' ELSE '{' instructions '}'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 519


State 364

   43 simple: IDENT '=' â¢ TO_INTEGER '(' argument_list ')' flags
   44       | IDENT '=' â¢ SEX2DEC '(' argument_list ')' flags
   45       | IDENT '=' â¢ TO_STRING '(' argument_list ')' flags
   60       | IDENT '=' â¢ DICTIONARY '(' argument_list ')' default flags
   61       | IDENT '=' â¢ GETENV '(' argument_list ')' default flags

    TO_INTEGER  shift, and go to state 348
    TO_STRING   shift, and go to state 349
    SEX2DEC     shift, and go to state 350
    DICTIONARY  shift, and go to state 351
    GETENV      shift, and go to state 352


State 365

   18 instructions: instruction ';' instructions â¢

    $default  reduce using rule 18 (instructions)


State 366

  208 concept_value: IDENT '=' â¢ '{' concept_conditions '}'

    '{'  shift, and go to state 354


State 367

  207 concept_value: STRING '=' â¢ '{' concept_conditions '}'

    '{'  shift, and go to state 357


State 368

  216 hash_array_value: IDENT '=' â¢ '[' integer_array ']'

    '['  shift, and go to state 353


State 369

  215 hash_array_value: STRING '=' â¢ '[' integer_array ']'

    '['  shift, and go to state 356


State 370

  269 conditional_rule: IF '(' â¢ expression ')' '{' rule_entries '}'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 520


State 371

  264 rule_entry: IDENT '=' â¢ expression ';'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 355


State 372

  140 if_block: IF '(' expression ')' â¢ '{' instructions '}'
  141         | IF '(' expression ')' â¢ '{' instructions '}' ELSE '{' instructions '}'
  269 conditional_rule: IF '(' expression ')' â¢ '{' rule_entries '}'

    '{'  shift, and go to state 521


State 373

  142 if_block: IF_TRANSIENT '(' expression ')' â¢ '{' instructions '}'
  143         | IF_TRANSIENT '(' expression ')' â¢ '{' instructions '}' ELSE '{' instructions '}'

    '{'  shift, and go to state 522


State 374

  135 simple: CLOSE '(' IDENT ')' â¢

    $default  reduce using rule 135 (simple)


State 375

   36 simple: UNSIGNED '[' INTEGER ']' â¢ IDENT default flags
   37       | UNSIGNED '[' INTEGER ']' â¢ IDENT '[' argument_list ']' default flags

    IDENT  shift, and go to state 523


State 376

   38 simple: UNSIGNED '(' INTEGER ')' â¢ IDENT default flags
   39       | UNSIGNED '(' INTEGER ')' â¢ IDENT '[' argument_list ']' default flags

    IDENT  shift, and go to state 524


State 377

  175 trigger_block: TRIGGER '(' argument_list ')' â¢ '{' instructions '}'

    '{'  shift, and go to state 525


State 378

   40 simple: ASCII '[' INTEGER ']' â¢ IDENT default flags
   47       | ASCII '[' INTEGER ']' â¢ STRING default flags

    IDENT   shift, and go to state 526
    STRING  shift, and go to state 527


State 379

   42 simple: GROUP IDENT '(' argument_list â¢ ')' default flags

    ')'  shift, and go to state 528


State 380

  152 default: '=' argument_list â¢

    $default  reduce using rule 152 (default)


State 381

   41 simple: GROUP IDENT default flags â¢

    $default  reduce using rule 41 (simple)


State 382

   46 simple: NON_ALPHA IDENT default flags â¢

    $default  reduce using rule 46 (simple)


State 383

   50 simple: KSEC1EXPVER '[' INTEGER ']' â¢ IDENT default flags

    IDENT  shift, and go to state 529


State 384

  174 while_block: WHILE '(' expression ')' â¢ '{' instructions '}'

    '{'  shift, and go to state 530


State 385

   86 simple: IBMFLOAT IDENT '[' argument â¢ ']' default flags

    ']'  shift, and go to state 531


State 386

   85 simple: IBMFLOAT IDENT '.' IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 532


State 387

   69 simple: IBMFLOAT IDENT default flags â¢

    $default  reduce using rule 69 (simple)


State 388

   51 simple: SIGNED '[' INTEGER ']' â¢ IDENT default flags
   52       | SIGNED '[' INTEGER ']' â¢ IDENT '[' argument_list ']' default flags

    IDENT  shift, and go to state 533


State 389

   53 simple: SIGNED '(' INTEGER ')' â¢ IDENT default flags
   54       | SIGNED '(' INTEGER ')' â¢ IDENT '[' argument_list ']' default flags

    IDENT  shift, and go to state 534


State 390

   71 simple: UINT8 IDENT default flags â¢

    $default  reduce using rule 71 (simple)


State 391

   70 simple: INT8 IDENT default flags â¢

    $default  reduce using rule 70 (simple)


State 392

   73 simple: UINT16 IDENT default flags â¢

    $default  reduce using rule 73 (simple)


State 393

   72 simple: INT16 IDENT default flags â¢

    $default  reduce using rule 72 (simple)


State 394

   75 simple: UINT16_LITTLE_ENDIAN IDENT default flags â¢

    $default  reduce using rule 75 (simple)


State 395

   74 simple: INT16_LITTLE_ENDIAN IDENT default flags â¢

    $default  reduce using rule 74 (simple)


State 396

   77 simple: UINT32 IDENT default flags â¢

    $default  reduce using rule 77 (simple)


State 397

   76 simple: INT32 IDENT default flags â¢

    $default  reduce using rule 76 (simple)


State 398

   79 simple: UINT32_LITTLE_ENDIAN IDENT default flags â¢

    $default  reduce using rule 79 (simple)


State 399

   78 simple: INT32_LITTLE_ENDIAN IDENT default flags â¢

    $default  reduce using rule 78 (simple)


State 400

   81 simple: UINT64 IDENT default flags â¢

    $default  reduce using rule 81 (simple)


State 401

   80 simple: INT64 IDENT default flags â¢

    $default  reduce using rule 80 (simple)


State 402

   83 simple: UINT64_LITTLE_ENDIAN IDENT default flags â¢

    $default  reduce using rule 83 (simple)


State 403

   82 simple: INT64_LITTLE_ENDIAN IDENT default flags â¢

    $default  reduce using rule 82 (simple)


State 404

   84 simple: BLOB IDENT '[' argument_list â¢ ']' default flags

    ']'  shift, and go to state 535


State 405

   48 simple: BYTE '[' INTEGER ']' â¢ IDENT default flags
   49       | BYTE '[' INTEGER ']' â¢ IDENT '[' argument_list ']' default flags

    IDENT  shift, and go to state 536


State 406

   56 simple: CODETABLE '[' IDENT ']' â¢ IDENT argument default flags

    IDENT  shift, and go to state 537


State 407

   55 simple: CODETABLE '[' INTEGER ']' â¢ IDENT argument default flags
   57       | CODETABLE '[' INTEGER ']' â¢ IDENT argument default SET '(' IDENT ')' flags
   58       | CODETABLE '[' INTEGER ']' â¢ IDENT '(' argument_list ')' default flags

    IDENT  shift, and go to state 538


State 408

   59 simple: SMART_TABLE IDENT '(' argument_list â¢ ')' default flags

    ')'  shift, and go to state 539


State 409

   62 simple: COMPLEX_CODETABLE '[' INTEGER ']' â¢ IDENT argument default flags
   63       | COMPLEX_CODETABLE '[' INTEGER ']' â¢ IDENT '(' argument_list ')' default flags

    IDENT  shift, and go to state 540


State 410

   65 simple: LOOKUP '[' INTEGER ']' â¢ IDENT '(' argument_list ')' flags

    IDENT  shift, and go to state 541


State 411

  108 simple: ALIAS IDENT '=' IDENT â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 542


State 412

  110 simple: ALIAS IDENT '.' IDENT â¢ '=' IDENT flags

    '='  shift, and go to state 543


State 413

  111 simple: UNALIAS IDENT '.' IDENT â¢

    $default  reduce using rule 111 (simple)


State 414

  112 simple: META IDENT IDENT '(' â¢ argument_list ')' default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 544
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 415

  113 simple: META IDENT '.' IDENT â¢ IDENT '(' argument_list ')' default flags

    IDENT  shift, and go to state 545


State 416

   88 simple: INTCONST IDENT '=' argument â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 546


State 417

   90 simple: TRANS IDENT '=' '{' â¢ dvalues '}' flags

    INTEGER  shift, and go to state 547
    FLOAT    shift, and go to state 548

    dvalues  go to state 549


State 418

   89 simple: TRANS IDENT '=' argument â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 550


State 419

   66 simple: FLAGBIT IDENT '(' argument_list â¢ ')' default flags

    ')'  shift, and go to state 551


State 420

  177 concept_block: CONCEPT IDENT '(' IDENT â¢ ')' '{' concept_list '}' flags
  178              | CONCEPT IDENT '(' IDENT â¢ ',' STRING ',' IDENT ',' IDENT ')' flags
  179              | CONCEPT IDENT '(' IDENT â¢ ',' IDENT ',' IDENT ',' IDENT ')' flags
  180              | CONCEPT IDENT '(' IDENT â¢ ',' STRING ',' IDENT ',' IDENT ',' IDENT ')' flags
  181              | CONCEPT IDENT '(' IDENT â¢ ',' STRING ',' IDENT ')' flags

    ','  shift, and go to state 552
    ')'  shift, and go to state 553


State 421

  182 concept_block: CONCEPT IDENT '.' IDENT â¢ '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  183              | CONCEPT IDENT '.' IDENT â¢ '(' IDENT ',' IDENT ',' IDENT ',' IDENT ')' flags
  184              | CONCEPT IDENT '.' IDENT â¢ '(' IDENT ',' STRING ',' IDENT ')' flags
  185              | CONCEPT IDENT '.' IDENT â¢ '{' concept_list '}' flags
  186              | CONCEPT IDENT '.' IDENT â¢ '(' IDENT ')' '{' concept_list '}' flags

    '('  shift, and go to state 554
    '{'  shift, and go to state 555


State 422

  176 concept_block: CONCEPT IDENT '{' concept_list â¢ '}' flags
  196 concept_list: concept_list â¢ concept_value

    IDENT    shift, and go to state 221
    STRING   shift, and go to state 222
    INTEGER  shift, and go to state 78
    FLOAT    shift, and go to state 223
    '}'      shift, and go to state 556

    concept_value  go to state 224


State 423

  200 hash_array_block: HASH_ARRAY IDENT '(' IDENT â¢ ',' STRING ',' IDENT ',' IDENT ')' flags

    ','  shift, and go to state 557


State 424

  198 hash_array_list: hash_array_list â¢ hash_array_value
  199 hash_array_block: HASH_ARRAY IDENT '{' hash_array_list â¢ '}' flags

    IDENT   shift, and go to state 225
    STRING  shift, and go to state 226
    '}'     shift, and go to state 558

    hash_array_value  go to state 227


State 425

  188 concept_block: CONCEPT_NOFAIL IDENT '(' IDENT â¢ ')' '{' concept_list '}' flags
  189              | CONCEPT_NOFAIL IDENT '(' IDENT â¢ ',' STRING ',' IDENT ',' IDENT ')' flags
  190              | CONCEPT_NOFAIL IDENT '(' IDENT â¢ ',' STRING ',' IDENT ')' flags

    ','  shift, and go to state 559
    ')'  shift, and go to state 560


State 426

  191 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT â¢ '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  192              | CONCEPT_NOFAIL IDENT '.' IDENT â¢ '(' IDENT ',' STRING ',' IDENT ')' flags
  193              | CONCEPT_NOFAIL IDENT '.' IDENT â¢ '{' concept_list '}' flags
  194              | CONCEPT_NOFAIL IDENT '.' IDENT â¢ '(' IDENT ')' '{' concept_list '}' flags

    '('  shift, and go to state 561
    '{'  shift, and go to state 562


State 427

  187 concept_block: CONCEPT_NOFAIL IDENT '{' concept_list â¢ '}' flags
  196 concept_list: concept_list â¢ concept_value

    IDENT    shift, and go to state 221
    STRING   shift, and go to state 222
    INTEGER  shift, and go to state 78
    FLOAT    shift, and go to state 223
    '}'      shift, and go to state 563

    concept_value  go to state 224


State 428

  158 flag: LOWERCASE â¢

    $default  reduce using rule 158 (flag)


State 429

  169 flag: TRANS â¢

    $default  reduce using rule 169 (flag)


State 430

  157 flag: READ_ONLY â¢

    $default  reduce using rule 157 (flag)


State 431

  170 flag: STRING_TYPE â¢

    $default  reduce using rule 170 (flag)


State 432

  171 flag: LONG_TYPE â¢

    $default  reduce using rule 171 (flag)


State 433

  172 flag: DOUBLE_TYPE â¢

    $default  reduce using rule 172 (flag)


State 434

  160 flag: NO_COPY â¢

    $default  reduce using rule 160 (flag)


State 435

  159 flag: DUMP â¢

    $default  reduce using rule 159 (flag)


State 436

  161 flag: NO_FAIL â¢

    $default  reduce using rule 161 (flag)


State 437

  163 flag: EDITION_SPECIFIC â¢

    $default  reduce using rule 163 (flag)


State 438

  162 flag: HIDDEN â¢

    $default  reduce using rule 162 (flag)


State 439

  164 flag: CAN_BE_MISSING â¢

    $default  reduce using rule 164 (flag)


State 440

  165 flag: CONSTRAINT â¢

    $default  reduce using rule 165 (flag)


State 441

  166 flag: COPY_OK â¢

    $default  reduce using rule 166 (flag)


State 442

  167 flag: COPY_AS_LONG â¢

    $default  reduce using rule 167 (flag)


State 443

  168 flag: COPY_IF_CHANGING_EDITION â¢

    $default  reduce using rule 168 (flag)


State 444

  154 flags: ':' flag_list â¢
  156 flag_list: flag_list â¢ ',' flag

    ','  shift, and go to state 564

    $default  reduce using rule 154 (flags)


State 445

  155 flag_list: flag â¢

    $default  reduce using rule 155 (flag_list)


State 446

  144 when_block: WHEN '(' expression ')' â¢ set semi
  145           | WHEN '(' expression ')' â¢ '{' set_list '}'
  146           | WHEN '(' expression ')' â¢ '{' set_list '}' ELSE '{' set_list '}'

    SET         shift, and go to state 565
    SET_NOFAIL  shift, and go to state 566
    '{'         shift, and go to state 567

    set  go to state 568


State 447

  122 simple: SET IDENT '=' MISSING â¢

    $default  reduce using rule 122 (simple)


State 448

  124 simple: SET IDENT '=' '{' â¢ dvalues '}'
  125       | SET IDENT '=' '{' â¢ svalues '}'

    STRING   shift, and go to state 569
    INTEGER  shift, and go to state 547
    FLOAT    shift, and go to state 548

    dvalues  go to state 570
    svalues  go to state 571


State 449

  123 simple: SET IDENT '=' expression â¢

    $default  reduce using rule 123 (simple)


State 450

  126 simple: SET_NOFAIL IDENT '=' expression â¢

    $default  reduce using rule 126 (simple)


State 451

  129 simple: WRITE '(' INTEGER ')' â¢ STRING
  130       | WRITE '(' INTEGER ')' â¢

    STRING  shift, and go to state 572

    $default  reduce using rule 130 (simple)


State 452

  133 simple: APPEND '(' INTEGER ')' â¢ STRING
  134       | APPEND '(' INTEGER ')' â¢

    STRING  shift, and go to state 573

    $default  reduce using rule 134 (simple)


State 453

  138 simple: PRINT '(' IDENT ')' â¢ STRING

    STRING  shift, and go to state 574


State 454

  137 simple: PRINT '(' STRING ')' â¢ STRING

    STRING  shift, and go to state 575


State 455

  117 simple: EXPORT IDENT '(' argument_list â¢ ')'

    ')'  shift, and go to state 576


State 456

  239 factor: IS_IN_LIST '(' IDENT â¢ ',' STRING ')'

    ','  shift, and go to state 577


State 457

  240 factor: IS_IN_DICT '(' IDENT â¢ ',' STRING ')'

    ','  shift, and go to state 578


State 458

  241 factor: IS_INTEGER '(' IDENT â¢ ',' INTEGER ')'
  242       | IS_INTEGER '(' IDENT â¢ ',' INTEGER ',' INTEGER ')'
  243       | IS_INTEGER '(' IDENT â¢ ')'

    ','  shift, and go to state 579
    ')'  shift, and go to state 580


State 459

  238 factor: LENGTH '(' IDENT â¢ ')'

    ')'  shift, and go to state 581


State 460

  217 string_or_ident: SUBSTR '(' IDENT â¢ ',' INTEGER ',' INTEGER ')'

    ','  shift, and go to state 582


State 461

  219 string_or_ident: SUBSTR '(' STRING â¢ ',' INTEGER ',' INTEGER ')'

    ','  shift, and go to state 583


State 462

  228 atom: IDENT '(' ')' â¢

    $default  reduce using rule 228 (atom)


State 463

  229 atom: IDENT '(' argument_list â¢ ')'

    ')'  shift, and go to state 584


State 464

  226 atom: '(' expression ')' â¢

    $default  reduce using rule 226 (atom)


State 465

   34 arguments: argument ',' arguments â¢

    $default  reduce using rule 34 (arguments)


State 466

  218 string_or_ident: IDENT â¢

    $default  reduce using rule 218 (string_or_ident)


State 467

  253 condition: string_or_ident IS string_or_ident â¢

    $default  reduce using rule 253 (condition)


State 468

  254 condition: string_or_ident ISNOT string_or_ident â¢

    $default  reduce using rule 254 (condition)


State 469

  230 power: atom '^' power â¢

    $default  reduce using rule 230 (power)


State 470

  235 factor: factor BIT power â¢

    $default  reduce using rule 235 (factor)


State 471

  236 factor: factor BITOFF power â¢

    $default  reduce using rule 236 (factor)


State 472

  232 factor: factor '*' power â¢

    $default  reduce using rule 232 (factor)


State 473

  233 factor: factor '/' power â¢

    $default  reduce using rule 233 (factor)


State 474

  234 factor: factor '%' power â¢

    $default  reduce using rule 234 (factor)


State 475

  232 factor: factor â¢ '*' power
  233       | factor â¢ '/' power
  234       | factor â¢ '%' power
  235       | factor â¢ BIT power
  236       | factor â¢ BITOFF power
  245 term: term '-' factor â¢

    BIT     shift, and go to state 314
    BITOFF  shift, and go to state 315
    '*'     shift, and go to state 316
    '/'     shift, and go to state 317
    '%'     shift, and go to state 318

    $default  reduce using rule 245 (term)


State 476

  232 factor: factor â¢ '*' power
  233       | factor â¢ '/' power
  234       | factor â¢ '%' power
  235       | factor â¢ BIT power
  236       | factor â¢ BITOFF power
  244 term: term '+' factor â¢

    BIT     shift, and go to state 314
    BITOFF  shift, and go to state 315
    '*'     shift, and go to state 316
    '/'     shift, and go to state 317
    '%'     shift, and go to state 318

    $default  reduce using rule 244 (term)


State 477

  244 term: term â¢ '+' factor
  245     | term â¢ '-' factor
  248 condition: condition EQ term â¢

    '-'  shift, and go to state 319
    '+'  shift, and go to state 320

    $default  reduce using rule 248 (condition)


State 478

  244 term: term â¢ '+' factor
  245     | term â¢ '-' factor
  252 condition: condition NE term â¢

    '-'  shift, and go to state 319
    '+'  shift, and go to state 320

    $default  reduce using rule 252 (condition)


State 479

  244 term: term â¢ '+' factor
  245     | term â¢ '-' factor
  250 condition: condition GE term â¢

    '-'  shift, and go to state 319
    '+'  shift, and go to state 320

    $default  reduce using rule 250 (condition)


State 480

  244 term: term â¢ '+' factor
  245     | term â¢ '-' factor
  251 condition: condition LE term â¢

    '-'  shift, and go to state 319
    '+'  shift, and go to state 320

    $default  reduce using rule 251 (condition)


State 481

  244 term: term â¢ '+' factor
  245     | term â¢ '-' factor
  249 condition: condition LT term â¢

    '-'  shift, and go to state 319
    '+'  shift, and go to state 320

    $default  reduce using rule 249 (condition)


State 482

  244 term: term â¢ '+' factor
  245     | term â¢ '-' factor
  247 condition: condition GT term â¢

    '-'  shift, and go to state 319
    '+'  shift, and go to state 320

    $default  reduce using rule 247 (condition)


State 483

  247 condition: condition â¢ GT term
  248          | condition â¢ EQ term
  249          | condition â¢ LT term
  250          | condition â¢ GE term
  251          | condition â¢ LE term
  252          | condition â¢ NE term
  257 conjunction: conjunction AND condition â¢

    EQ  shift, and go to state 321
    NE  shift, and go to state 322
    GE  shift, and go to state 323
    LE  shift, and go to state 324
    LT  shift, and go to state 325
    GT  shift, and go to state 326

    $default  reduce using rule 257 (conjunction)


State 484

  257 conjunction: conjunction â¢ AND condition
  259 disjunction: disjunction OR conjunction â¢

    AND  shift, and go to state 327

    $default  reduce using rule 259 (disjunction)


State 485

  119 simple: RENAME '(' IDENT ',' â¢ IDENT ')'

    IDENT  shift, and go to state 585


State 486

   99 simple: PAD IDENT '(' argument_list â¢ ')'

    ')'  shift, and go to state 586


State 487

  103 simple: MESSAGE '[' INTEGER ']' â¢ IDENT flags

    IDENT  shift, and go to state 587


State 488

  100 simple: PADTO IDENT '(' argument_list â¢ ')'

    ')'  shift, and go to state 588


State 489

  101 simple: PADTOEVEN IDENT '(' argument_list â¢ ')'

    ')'  shift, and go to state 589


State 490

  102 simple: PADTOMULTIPLE IDENT '(' argument_list â¢ ')'

    ')'  shift, and go to state 590


State 491

   96 simple: G1_MESSAGE_LENGTH '[' INTEGER ']' â¢ IDENT '(' argument_list ')'

    IDENT  shift, and go to state 591


State 492

   97 simple: G1_SECTION4_LENGTH '[' INTEGER ']' â¢ IDENT '(' argument_list ')'

    IDENT  shift, and go to state 592


State 493

   95 simple: SECTION_LENGTH '[' INTEGER ']' â¢ IDENT default

    IDENT  shift, and go to state 593


State 494

   64 simple: FLAG '[' INTEGER ']' â¢ IDENT argument default flags

    IDENT  shift, and go to state 594


State 495

  114 simple: ITERATOR IDENT '(' argument_list â¢ ')'

    ')'  shift, and go to state 595


State 496

  115 simple: NEAREST IDENT '(' argument_list â¢ ')'

    ')'  shift, and go to state 596


State 497

  116 simple: BOX IDENT '(' argument_list â¢ ')'

    ')'  shift, and go to state 597


State 498

  120 simple: ASSERT '(' expression ')' â¢

    $default  reduce using rule 120 (simple)


State 499

  204 switch_block: SWITCH '(' argument_list ')' â¢ '{' case_list DEFAULT ':' instructions '}'
  205             | SWITCH '(' argument_list ')' â¢ '{' case_list DEFAULT ':' '}'
  206             | SWITCH '(' argument_list ')' â¢ '{' case_list '}'

    '{'  shift, and go to state 598


State 500

  173 list_block: IDENT LIST '(' expression â¢ ')' '{' instructions '}'

    ')'  shift, and go to state 599


State 501

   43 simple: IDENT '=' TO_INTEGER '(' â¢ argument_list ')' flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 600
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 502

   45 simple: IDENT '=' TO_STRING '(' â¢ argument_list ')' flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 601
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 503

   44 simple: IDENT '=' SEX2DEC '(' â¢ argument_list ')' flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 602
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 504

   60 simple: IDENT '=' DICTIONARY '(' â¢ argument_list ')' default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 603
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 505

   61 simple: IDENT '=' GETENV '(' â¢ argument_list ')' default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 604
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 506

   14 integer_array: INTEGER â¢

    $default  reduce using rule 14 (integer_array)


State 507

   15 integer_array: integer_array â¢ ',' INTEGER
  216 hash_array_value: IDENT '=' '[' integer_array â¢ ']'

    ','  shift, and go to state 605
    ']'  shift, and go to state 606


State 508

  213 concept_condition: IDENT â¢ '=' expression ';'
  214                  | IDENT â¢ '=' '[' integer_array ']' ';'

    '='  shift, and go to state 607


State 509

  208 concept_value: IDENT '=' '{' concept_conditions â¢ '}'

    '}'  shift, and go to state 608


State 510

  211 concept_conditions: concept_condition â¢
  212                   | concept_condition â¢ concept_conditions

    IDENT  shift, and go to state 508

    $default  reduce using rule 211 (concept_conditions)

    concept_conditions  go to state 609
    concept_condition   go to state 510


State 511

  264 rule_entry: IDENT '=' expression ';' â¢

    $default  reduce using rule 264 (rule_entry)


State 512

   15 integer_array: integer_array â¢ ',' INTEGER
  215 hash_array_value: STRING '=' '[' integer_array â¢ ']'

    ','  shift, and go to state 605
    ']'  shift, and go to state 610


State 513

  207 concept_value: STRING '=' '{' concept_conditions â¢ '}'

    '}'  shift, and go to state 611


State 514

  209 concept_value: INTEGER '=' '{' concept_conditions â¢ '}'

    '}'  shift, and go to state 612


State 515

   93 simple: FLOAT IDENT '[' argument â¢ ']' default flags

    ']'  shift, and go to state 613


State 516

   92 simple: FLOAT IDENT '.' IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 614


State 517

   91 simple: FLOAT IDENT default flags â¢

    $default  reduce using rule 91 (simple)


State 518

  210 concept_value: FLOAT '=' '{' concept_conditions â¢ '}'

    '}'  shift, and go to state 615


State 519

  140 if_block: IF '(' expression â¢ ')' '{' instructions '}'
  141         | IF '(' expression â¢ ')' '{' instructions '}' ELSE '{' instructions '}'

    ')'  shift, and go to state 616


State 520

  269 conditional_rule: IF '(' expression â¢ ')' '{' rule_entries '}'

    ')'  shift, and go to state 617


State 521

  140 if_block: IF '(' expression ')' '{' â¢ instructions '}'
  141         | IF '(' expression ')' '{' â¢ instructions '}' ELSE '{' instructions '}'
  269 conditional_rule: IF '(' expression ')' '{' â¢ rule_entries '}'

    IF                    shift, and go to state 215
    IF_TRANSIENT          shift, and go to state 3
    CLOSE                 shift, and go to state 4
    UNSIGNED              shift, and go to state 5
    TEMPLATE              shift, and go to state 6
    TEMPLATE_NOFAIL       shift, and go to state 7
    TRIGGER               shift, and go to state 8
    ASCII                 shift, and go to state 9
    GROUP                 shift, and go to state 10
    NON_ALPHA             shift, and go to state 11
    KSEC1EXPVER           shift, and go to state 12
    LABEL                 shift, and go to state 13
    WHILE                 shift, and go to state 14
    IBMFLOAT              shift, and go to state 15
    SIGNED                shift, and go to state 16
    UINT8                 shift, and go to state 17
    INT8                  shift, and go to state 18
    UINT16                shift, and go to state 19
    INT16                 shift, and go to state 20
    UINT16_LITTLE_ENDIAN  shift, and go to state 21
    INT16_LITTLE_ENDIAN   shift, and go to state 22
    UINT32                shift, and go to state 23
    INT32                 shift, and go to state 24
    UINT32_LITTLE_ENDIAN  shift, and go to state 25
    INT32_LITTLE_ENDIAN   shift, and go to state 26
    UINT64                shift, and go to state 27
    INT64                 shift, and go to state 28
    UINT64_LITTLE_ENDIAN  shift, and go to state 29
    INT64_LITTLE_ENDIAN   shift, and go to state 30
    BLOB                  shift, and go to state 31
    BYTE                  shift, and go to state 32
    CODETABLE             shift, and go to state 33
    SMART_TABLE           shift, and go to state 34
    COMPLEX_CODETABLE     shift, and go to state 35
    LOOKUP                shift, and go to state 36
    ALIAS                 shift, and go to state 37
    UNALIAS               shift, and go to state 38
    META                  shift, and go to state 39
    POS                   shift, and go to state 40
    INTCONST              shift, and go to state 41
    TRANS                 shift, and go to state 42
    FLAGBIT               shift, and go to state 43
    CONCEPT               shift, and go to state 44
    HASH_ARRAY            shift, and go to state 45
    CONCEPT_NOFAIL        shift, and go to state 46
    MODIFY                shift, and go to state 47
    WHEN                  shift, and go to state 48
    SET                   shift, and go to state 49
    SET_NOFAIL            shift, and go to state 50
    WRITE                 shift, and go to state 51
    APPEND                shift, and go to state 52
    PRINT                 shift, and go to state 53
    EXPORT                shift, and go to state 54
    REMOVE                shift, and go to state 55
    RENAME                shift, and go to state 56
    SKIP                  shift, and go to state 57
    PAD                   shift, and go to state 58
    SECTION_PADDING       shift, and go to state 59
    MESSAGE               shift, and go to state 60
    MESSAGE_COPY          shift, and go to state 61
    PADTO                 shift, and go to state 62
    PADTOEVEN             shift, and go to state 63
    PADTOMULTIPLE         shift, and go to state 64
    G1_HALF_BYTE          shift, and go to state 65
    G1_MESSAGE_LENGTH     shift, and go to state 66
    G1_SECTION4_LENGTH    shift, and go to state 67
    SECTION_LENGTH        shift, and go to state 68
    FLAG                  shift, and go to state 69
    ITERATOR              shift, and go to state 70
    NEAREST               shift, and go to state 71
    BOX                   shift, and go to state 72
    KSEC                  shift, and go to state 73
    ASSERT                shift, and go to state 74
    SWITCH                shift, and go to state 75
    IDENT                 shift, and go to state 618
    FLOAT                 shift, and go to state 217

    instructions      go to state 619
    instruction       go to state 83
    simple            go to state 84
    if_block          go to state 85
    when_block        go to state 86
    list_block        go to state 87
    while_block       go to state 88
    trigger_block     go to state 89
    concept_block     go to state 90
    hash_array_block  go to state 93
    switch_block      go to state 94
    rule_entry        go to state 620
    rule_entries      go to state 621


State 522

  142 if_block: IF_TRANSIENT '(' expression ')' '{' â¢ instructions '}'
  143         | IF_TRANSIENT '(' expression ')' '{' â¢ instructions '}' ELSE '{' instructions '}'

    IF                    shift, and go to state 215
    IF_TRANSIENT          shift, and go to state 3
    CLOSE                 shift, and go to state 4
    UNSIGNED              shift, and go to state 5
    TEMPLATE              shift, and go to state 6
    TEMPLATE_NOFAIL       shift, and go to state 7
    TRIGGER               shift, and go to state 8
    ASCII                 shift, and go to state 9
    GROUP                 shift, and go to state 10
    NON_ALPHA             shift, and go to state 11
    KSEC1EXPVER           shift, and go to state 12
    LABEL                 shift, and go to state 13
    WHILE                 shift, and go to state 14
    IBMFLOAT              shift, and go to state 15
    SIGNED                shift, and go to state 16
    UINT8                 shift, and go to state 17
    INT8                  shift, and go to state 18
    UINT16                shift, and go to state 19
    INT16                 shift, and go to state 20
    UINT16_LITTLE_ENDIAN  shift, and go to state 21
    INT16_LITTLE_ENDIAN   shift, and go to state 22
    UINT32                shift, and go to state 23
    INT32                 shift, and go to state 24
    UINT32_LITTLE_ENDIAN  shift, and go to state 25
    INT32_LITTLE_ENDIAN   shift, and go to state 26
    UINT64                shift, and go to state 27
    INT64                 shift, and go to state 28
    UINT64_LITTLE_ENDIAN  shift, and go to state 29
    INT64_LITTLE_ENDIAN   shift, and go to state 30
    BLOB                  shift, and go to state 31
    BYTE                  shift, and go to state 32
    CODETABLE             shift, and go to state 33
    SMART_TABLE           shift, and go to state 34
    COMPLEX_CODETABLE     shift, and go to state 35
    LOOKUP                shift, and go to state 36
    ALIAS                 shift, and go to state 37
    UNALIAS               shift, and go to state 38
    META                  shift, and go to state 39
    POS                   shift, and go to state 40
    INTCONST              shift, and go to state 41
    TRANS                 shift, and go to state 42
    FLAGBIT               shift, and go to state 43
    CONCEPT               shift, and go to state 44
    HASH_ARRAY            shift, and go to state 45
    CONCEPT_NOFAIL        shift, and go to state 46
    MODIFY                shift, and go to state 47
    WHEN                  shift, and go to state 48
    SET                   shift, and go to state 49
    SET_NOFAIL            shift, and go to state 50
    WRITE                 shift, and go to state 51
    APPEND                shift, and go to state 52
    PRINT                 shift, and go to state 53
    EXPORT                shift, and go to state 54
    REMOVE                shift, and go to state 55
    RENAME                shift, and go to state 56
    PAD                   shift, and go to state 58
    SECTION_PADDING       shift, and go to state 59
    MESSAGE               shift, and go to state 60
    MESSAGE_COPY          shift, and go to state 61
    PADTO                 shift, and go to state 62
    PADTOEVEN             shift, and go to state 63
    PADTOMULTIPLE         shift, and go to state 64
    G1_HALF_BYTE          shift, and go to state 65
    G1_MESSAGE_LENGTH     shift, and go to state 66
    G1_SECTION4_LENGTH    shift, and go to state 67
    SECTION_LENGTH        shift, and go to state 68
    FLAG                  shift, and go to state 69
    ITERATOR              shift, and go to state 70
    NEAREST               shift, and go to state 71
    BOX                   shift, and go to state 72
    KSEC                  shift, and go to state 73
    ASSERT                shift, and go to state 74
    SWITCH                shift, and go to state 75
    IDENT                 shift, and go to state 216
    FLOAT                 shift, and go to state 217

    instructions      go to state 622
    instruction       go to state 83
    simple            go to state 84
    if_block          go to state 85
    when_block        go to state 86
    list_block        go to state 87
    while_block       go to state 88
    trigger_block     go to state 89
    concept_block     go to state 90
    hash_array_block  go to state 93
    switch_block      go to state 94


State 523

   36 simple: UNSIGNED '[' INTEGER ']' IDENT â¢ default flags
   37       | UNSIGNED '[' INTEGER ']' IDENT â¢ '[' argument_list ']' default flags

    '['  shift, and go to state 623
    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 624


State 524

   38 simple: UNSIGNED '(' INTEGER ')' IDENT â¢ default flags
   39       | UNSIGNED '(' INTEGER ')' IDENT â¢ '[' argument_list ']' default flags

    '['  shift, and go to state 625
    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 626


State 525

  175 trigger_block: TRIGGER '(' argument_list ')' '{' â¢ instructions '}'

    IF                    shift, and go to state 215
    IF_TRANSIENT          shift, and go to state 3
    CLOSE                 shift, and go to state 4
    UNSIGNED              shift, and go to state 5
    TEMPLATE              shift, and go to state 6
    TEMPLATE_NOFAIL       shift, and go to state 7
    TRIGGER               shift, and go to state 8
    ASCII                 shift, and go to state 9
    GROUP                 shift, and go to state 10
    NON_ALPHA             shift, and go to state 11
    KSEC1EXPVER           shift, and go to state 12
    LABEL                 shift, and go to state 13
    WHILE                 shift, and go to state 14
    IBMFLOAT              shift, and go to state 15
    SIGNED                shift, and go to state 16
    UINT8                 shift, and go to state 17
    INT8                  shift, and go to state 18
    UINT16                shift, and go to state 19
    INT16                 shift, and go to state 20
    UINT16_LITTLE_ENDIAN  shift, and go to state 21
    INT16_LITTLE_ENDIAN   shift, and go to state 22
    UINT32                shift, and go to state 23
    INT32                 shift, and go to state 24
    UINT32_LITTLE_ENDIAN  shift, and go to state 25
    INT32_LITTLE_ENDIAN   shift, and go to state 26
    UINT64                shift, and go to state 27
    INT64                 shift, and go to state 28
    UINT64_LITTLE_ENDIAN  shift, and go to state 29
    INT64_LITTLE_ENDIAN   shift, and go to state 30
    BLOB                  shift, and go to state 31
    BYTE                  shift, and go to state 32
    CODETABLE             shift, and go to state 33
    SMART_TABLE           shift, and go to state 34
    COMPLEX_CODETABLE     shift, and go to state 35
    LOOKUP                shift, and go to state 36
    ALIAS                 shift, and go to state 37
    UNALIAS               shift, and go to state 38
    META                  shift, and go to state 39
    POS                   shift, and go to state 40
    INTCONST              shift, and go to state 41
    TRANS                 shift, and go to state 42
    FLAGBIT               shift, and go to state 43
    CONCEPT               shift, and go to state 44
    HASH_ARRAY            shift, and go to state 45
    CONCEPT_NOFAIL        shift, and go to state 46
    MODIFY                shift, and go to state 47
    WHEN                  shift, and go to state 48
    SET                   shift, and go to state 49
    SET_NOFAIL            shift, and go to state 50
    WRITE                 shift, and go to state 51
    APPEND                shift, and go to state 52
    PRINT                 shift, and go to state 53
    EXPORT                shift, and go to state 54
    REMOVE                shift, and go to state 55
    RENAME                shift, and go to state 56
    PAD                   shift, and go to state 58
    SECTION_PADDING       shift, and go to state 59
    MESSAGE               shift, and go to state 60
    MESSAGE_COPY          shift, and go to state 61
    PADTO                 shift, and go to state 62
    PADTOEVEN             shift, and go to state 63
    PADTOMULTIPLE         shift, and go to state 64
    G1_HALF_BYTE          shift, and go to state 65
    G1_MESSAGE_LENGTH     shift, and go to state 66
    G1_SECTION4_LENGTH    shift, and go to state 67
    SECTION_LENGTH        shift, and go to state 68
    FLAG                  shift, and go to state 69
    ITERATOR              shift, and go to state 70
    NEAREST               shift, and go to state 71
    BOX                   shift, and go to state 72
    KSEC                  shift, and go to state 73
    ASSERT                shift, and go to state 74
    SWITCH                shift, and go to state 75
    IDENT                 shift, and go to state 216
    FLOAT                 shift, and go to state 217

    instructions      go to state 627
    instruction       go to state 83
    simple            go to state 84
    if_block          go to state 85
    when_block        go to state 86
    list_block        go to state 87
    while_block       go to state 88
    trigger_block     go to state 89
    concept_block     go to state 90
    hash_array_block  go to state 93
    switch_block      go to state 94


State 526

   40 simple: ASCII '[' INTEGER ']' IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 628


State 527

   47 simple: ASCII '[' INTEGER ']' STRING â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 629


State 528

   42 simple: GROUP IDENT '(' argument_list ')' â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 630


State 529

   50 simple: KSEC1EXPVER '[' INTEGER ']' IDENT â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 631


State 530

  174 while_block: WHILE '(' expression ')' '{' â¢ instructions '}'

    IF                    shift, and go to state 215
    IF_TRANSIENT          shift, and go to state 3
    CLOSE                 shift, and go to state 4
    UNSIGNED              shift, and go to state 5
    TEMPLATE              shift, and go to state 6
    TEMPLATE_NOFAIL       shift, and go to state 7
    TRIGGER               shift, and go to state 8
    ASCII                 shift, and go to state 9
    GROUP                 shift, and go to state 10
    NON_ALPHA             shift, and go to state 11
    KSEC1EXPVER           shift, and go to state 12
    LABEL                 shift, and go to state 13
    WHILE                 shift, and go to state 14
    IBMFLOAT              shift, and go to state 15
    SIGNED                shift, and go to state 16
    UINT8                 shift, and go to state 17
    INT8                  shift, and go to state 18
    UINT16                shift, and go to state 19
    INT16                 shift, and go to state 20
    UINT16_LITTLE_ENDIAN  shift, and go to state 21
    INT16_LITTLE_ENDIAN   shift, and go to state 22
    UINT32                shift, and go to state 23
    INT32                 shift, and go to state 24
    UINT32_LITTLE_ENDIAN  shift, and go to state 25
    INT32_LITTLE_ENDIAN   shift, and go to state 26
    UINT64                shift, and go to state 27
    INT64                 shift, and go to state 28
    UINT64_LITTLE_ENDIAN  shift, and go to state 29
    INT64_LITTLE_ENDIAN   shift, and go to state 30
    BLOB                  shift, and go to state 31
    BYTE                  shift, and go to state 32
    CODETABLE             shift, and go to state 33
    SMART_TABLE           shift, and go to state 34
    COMPLEX_CODETABLE     shift, and go to state 35
    LOOKUP                shift, and go to state 36
    ALIAS                 shift, and go to state 37
    UNALIAS               shift, and go to state 38
    META                  shift, and go to state 39
    POS                   shift, and go to state 40
    INTCONST              shift, and go to state 41
    TRANS                 shift, and go to state 42
    FLAGBIT               shift, and go to state 43
    CONCEPT               shift, and go to state 44
    HASH_ARRAY            shift, and go to state 45
    CONCEPT_NOFAIL        shift, and go to state 46
    MODIFY                shift, and go to state 47
    WHEN                  shift, and go to state 48
    SET                   shift, and go to state 49
    SET_NOFAIL            shift, and go to state 50
    WRITE                 shift, and go to state 51
    APPEND                shift, and go to state 52
    PRINT                 shift, and go to state 53
    EXPORT                shift, and go to state 54
    REMOVE                shift, and go to state 55
    RENAME                shift, and go to state 56
    PAD                   shift, and go to state 58
    SECTION_PADDING       shift, and go to state 59
    MESSAGE               shift, and go to state 60
    MESSAGE_COPY          shift, and go to state 61
    PADTO                 shift, and go to state 62
    PADTOEVEN             shift, and go to state 63
    PADTOMULTIPLE         shift, and go to state 64
    G1_HALF_BYTE          shift, and go to state 65
    G1_MESSAGE_LENGTH     shift, and go to state 66
    G1_SECTION4_LENGTH    shift, and go to state 67
    SECTION_LENGTH        shift, and go to state 68
    FLAG                  shift, and go to state 69
    ITERATOR              shift, and go to state 70
    NEAREST               shift, and go to state 71
    BOX                   shift, and go to state 72
    KSEC                  shift, and go to state 73
    ASSERT                shift, and go to state 74
    SWITCH                shift, and go to state 75
    IDENT                 shift, and go to state 216
    FLOAT                 shift, and go to state 217

    instructions      go to state 632
    instruction       go to state 83
    simple            go to state 84
    if_block          go to state 85
    when_block        go to state 86
    list_block        go to state 87
    while_block       go to state 88
    trigger_block     go to state 89
    concept_block     go to state 90
    hash_array_block  go to state 93
    switch_block      go to state 94


State 531

   86 simple: IBMFLOAT IDENT '[' argument ']' â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 633


State 532

   85 simple: IBMFLOAT IDENT '.' IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 634


State 533

   51 simple: SIGNED '[' INTEGER ']' IDENT â¢ default flags
   52       | SIGNED '[' INTEGER ']' IDENT â¢ '[' argument_list ']' default flags

    '['  shift, and go to state 635
    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 636


State 534

   53 simple: SIGNED '(' INTEGER ')' IDENT â¢ default flags
   54       | SIGNED '(' INTEGER ')' IDENT â¢ '[' argument_list ']' default flags

    '['  shift, and go to state 637
    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 638


State 535

   84 simple: BLOB IDENT '[' argument_list ']' â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 639


State 536

   48 simple: BYTE '[' INTEGER ']' IDENT â¢ default flags
   49       | BYTE '[' INTEGER ']' IDENT â¢ '[' argument_list ']' default flags

    '['  shift, and go to state 640
    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 641


State 537

   56 simple: CODETABLE '[' IDENT ']' IDENT â¢ argument default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    argument         go to state 642
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 538

   55 simple: CODETABLE '[' INTEGER ']' IDENT â¢ argument default flags
   57       | CODETABLE '[' INTEGER ']' IDENT â¢ argument default SET '(' IDENT ')' flags
   58       | CODETABLE '[' INTEGER ']' IDENT â¢ '(' argument_list ')' default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 643
    '-'         shift, and go to state 174

    argument         go to state 644
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 539

   59 simple: SMART_TABLE IDENT '(' argument_list ')' â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 645


State 540

   62 simple: COMPLEX_CODETABLE '[' INTEGER ']' IDENT â¢ argument default flags
   63       | COMPLEX_CODETABLE '[' INTEGER ']' IDENT â¢ '(' argument_list ')' default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 646
    '-'         shift, and go to state 174

    argument         go to state 647
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 541

   65 simple: LOOKUP '[' INTEGER ']' IDENT â¢ '(' argument_list ')' flags

    '('  shift, and go to state 648


State 542

  108 simple: ALIAS IDENT '=' IDENT flags â¢

    $default  reduce using rule 108 (simple)


State 543

  110 simple: ALIAS IDENT '.' IDENT '=' â¢ IDENT flags

    IDENT  shift, and go to state 649


State 544

  112 simple: META IDENT IDENT '(' argument_list â¢ ')' default flags

    ')'  shift, and go to state 650


State 545

  113 simple: META IDENT '.' IDENT IDENT â¢ '(' argument_list ')' default flags

    '('  shift, and go to state 651


State 546

   88 simple: INTCONST IDENT '=' argument flags â¢

    $default  reduce using rule 88 (simple)


State 547

   10 dvalues: INTEGER â¢

    $default  reduce using rule 10 (dvalues)


State 548

    8 dvalues: FLOAT â¢

    $default  reduce using rule 8 (dvalues)


State 549

    9 dvalues: dvalues â¢ ',' FLOAT
   11        | dvalues â¢ ',' INTEGER
   90 simple: TRANS IDENT '=' '{' dvalues â¢ '}' flags

    ','  shift, and go to state 652
    '}'  shift, and go to state 653


State 550

   89 simple: TRANS IDENT '=' argument flags â¢

    $default  reduce using rule 89 (simple)


State 551

   66 simple: FLAGBIT IDENT '(' argument_list ')' â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 654


State 552

  178 concept_block: CONCEPT IDENT '(' IDENT ',' â¢ STRING ',' IDENT ',' IDENT ')' flags
  179              | CONCEPT IDENT '(' IDENT ',' â¢ IDENT ',' IDENT ',' IDENT ')' flags
  180              | CONCEPT IDENT '(' IDENT ',' â¢ STRING ',' IDENT ',' IDENT ',' IDENT ')' flags
  181              | CONCEPT IDENT '(' IDENT ',' â¢ STRING ',' IDENT ')' flags

    IDENT   shift, and go to state 655
    STRING  shift, and go to state 656


State 553

  177 concept_block: CONCEPT IDENT '(' IDENT ')' â¢ '{' concept_list '}' flags

    '{'  shift, and go to state 657


State 554

  182 concept_block: CONCEPT IDENT '.' IDENT '(' â¢ IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  183              | CONCEPT IDENT '.' IDENT '(' â¢ IDENT ',' IDENT ',' IDENT ',' IDENT ')' flags
  184              | CONCEPT IDENT '.' IDENT '(' â¢ IDENT ',' STRING ',' IDENT ')' flags
  186              | CONCEPT IDENT '.' IDENT '(' â¢ IDENT ')' '{' concept_list '}' flags

    IDENT  shift, and go to state 658


State 555

  185 concept_block: CONCEPT IDENT '.' IDENT '{' â¢ concept_list '}' flags

    IDENT    shift, and go to state 221
    STRING   shift, and go to state 222
    INTEGER  shift, and go to state 78
    FLOAT    shift, and go to state 223

    concept_list   go to state 659
    concept_value  go to state 95


State 556

  176 concept_block: CONCEPT IDENT '{' concept_list '}' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 660


State 557

  200 hash_array_block: HASH_ARRAY IDENT '(' IDENT ',' â¢ STRING ',' IDENT ',' IDENT ')' flags

    STRING  shift, and go to state 661


State 558

  199 hash_array_block: HASH_ARRAY IDENT '{' hash_array_list '}' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 662


State 559

  189 concept_block: CONCEPT_NOFAIL IDENT '(' IDENT ',' â¢ STRING ',' IDENT ',' IDENT ')' flags
  190              | CONCEPT_NOFAIL IDENT '(' IDENT ',' â¢ STRING ',' IDENT ')' flags

    STRING  shift, and go to state 663


State 560

  188 concept_block: CONCEPT_NOFAIL IDENT '(' IDENT ')' â¢ '{' concept_list '}' flags

    '{'  shift, and go to state 664


State 561

  191 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '(' â¢ IDENT ',' STRING ',' IDENT ',' IDENT ')' flags
  192              | CONCEPT_NOFAIL IDENT '.' IDENT '(' â¢ IDENT ',' STRING ',' IDENT ')' flags
  194              | CONCEPT_NOFAIL IDENT '.' IDENT '(' â¢ IDENT ')' '{' concept_list '}' flags

    IDENT  shift, and go to state 665


State 562

  193 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '{' â¢ concept_list '}' flags

    IDENT    shift, and go to state 221
    STRING   shift, and go to state 222
    INTEGER  shift, and go to state 78
    FLOAT    shift, and go to state 223

    concept_list   go to state 666
    concept_value  go to state 95


State 563

  187 concept_block: CONCEPT_NOFAIL IDENT '{' concept_list '}' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 667


State 564

  156 flag_list: flag_list ',' â¢ flag

    LOWERCASE                 shift, and go to state 428
    TRANS                     shift, and go to state 429
    READ_ONLY                 shift, and go to state 430
    STRING_TYPE               shift, and go to state 431
    LONG_TYPE                 shift, and go to state 432
    DOUBLE_TYPE               shift, and go to state 433
    NO_COPY                   shift, and go to state 434
    DUMP                      shift, and go to state 435
    NO_FAIL                   shift, and go to state 436
    EDITION_SPECIFIC          shift, and go to state 437
    HIDDEN                    shift, and go to state 438
    CAN_BE_MISSING            shift, and go to state 439
    CONSTRAINT                shift, and go to state 440
    COPY_OK                   shift, and go to state 441
    COPY_AS_LONG              shift, and go to state 442
    COPY_IF_CHANGING_EDITION  shift, and go to state 443

    flag  go to state 668


State 565

  147 set: SET â¢ IDENT '=' expression

    IDENT  shift, and go to state 669


State 566

  148 set: SET_NOFAIL â¢ IDENT '=' expression

    IDENT  shift, and go to state 670


State 567

  145 when_block: WHEN '(' expression ')' '{' â¢ set_list '}'
  146           | WHEN '(' expression ')' '{' â¢ set_list '}' ELSE '{' set_list '}'

    SET         shift, and go to state 565
    SET_NOFAIL  shift, and go to state 566

    set       go to state 671
    set_list  go to state 672


State 568

  144 when_block: WHEN '(' expression ')' set â¢ semi

    ';'  shift, and go to state 673

    semi  go to state 674


State 569

   12 svalues: STRING â¢

    $default  reduce using rule 12 (svalues)


State 570

    9 dvalues: dvalues â¢ ',' FLOAT
   11        | dvalues â¢ ',' INTEGER
  124 simple: SET IDENT '=' '{' dvalues â¢ '}'

    ','  shift, and go to state 652
    '}'  shift, and go to state 675


State 571

   13 svalues: svalues â¢ ',' STRING
  125 simple: SET IDENT '=' '{' svalues â¢ '}'

    ','  shift, and go to state 676
    '}'  shift, and go to state 677


State 572

  129 simple: WRITE '(' INTEGER ')' STRING â¢

    $default  reduce using rule 129 (simple)


State 573

  133 simple: APPEND '(' INTEGER ')' STRING â¢

    $default  reduce using rule 133 (simple)


State 574

  138 simple: PRINT '(' IDENT ')' STRING â¢

    $default  reduce using rule 138 (simple)


State 575

  137 simple: PRINT '(' STRING ')' STRING â¢

    $default  reduce using rule 137 (simple)


State 576

  117 simple: EXPORT IDENT '(' argument_list ')' â¢

    $default  reduce using rule 117 (simple)


State 577

  239 factor: IS_IN_LIST '(' IDENT ',' â¢ STRING ')'

    STRING  shift, and go to state 678


State 578

  240 factor: IS_IN_DICT '(' IDENT ',' â¢ STRING ')'

    STRING  shift, and go to state 679


State 579

  241 factor: IS_INTEGER '(' IDENT ',' â¢ INTEGER ')'
  242       | IS_INTEGER '(' IDENT ',' â¢ INTEGER ',' INTEGER ')'

    INTEGER  shift, and go to state 680


State 580

  243 factor: IS_INTEGER '(' IDENT ')' â¢

    $default  reduce using rule 243 (factor)


State 581

  238 factor: LENGTH '(' IDENT ')' â¢

    $default  reduce using rule 238 (factor)


State 582

  217 string_or_ident: SUBSTR '(' IDENT ',' â¢ INTEGER ',' INTEGER ')'

    INTEGER  shift, and go to state 681


State 583

  219 string_or_ident: SUBSTR '(' STRING ',' â¢ INTEGER ',' INTEGER ')'

    INTEGER  shift, and go to state 682


State 584

  229 atom: IDENT '(' argument_list ')' â¢

    $default  reduce using rule 229 (atom)


State 585

  119 simple: RENAME '(' IDENT ',' IDENT â¢ ')'

    ')'  shift, and go to state 683


State 586

   99 simple: PAD IDENT '(' argument_list ')' â¢

    $default  reduce using rule 99 (simple)


State 587

  103 simple: MESSAGE '[' INTEGER ']' IDENT â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 684


State 588

  100 simple: PADTO IDENT '(' argument_list ')' â¢

    $default  reduce using rule 100 (simple)


State 589

  101 simple: PADTOEVEN IDENT '(' argument_list ')' â¢

    $default  reduce using rule 101 (simple)


State 590

  102 simple: PADTOMULTIPLE IDENT '(' argument_list ')' â¢

    $default  reduce using rule 102 (simple)


State 591

   96 simple: G1_MESSAGE_LENGTH '[' INTEGER ']' IDENT â¢ '(' argument_list ')'

    '('  shift, and go to state 685


State 592

   97 simple: G1_SECTION4_LENGTH '[' INTEGER ']' IDENT â¢ '(' argument_list ')'

    '('  shift, and go to state 686


State 593

   95 simple: SECTION_LENGTH '[' INTEGER ']' IDENT â¢ default

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 687


State 594

   64 simple: FLAG '[' INTEGER ']' IDENT â¢ argument default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    argument         go to state 688
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 595

  114 simple: ITERATOR IDENT '(' argument_list ')' â¢

    $default  reduce using rule 114 (simple)


State 596

  115 simple: NEAREST IDENT '(' argument_list ')' â¢

    $default  reduce using rule 115 (simple)


State 597

  116 simple: BOX IDENT '(' argument_list ')' â¢

    $default  reduce using rule 116 (simple)


State 598

  204 switch_block: SWITCH '(' argument_list ')' '{' â¢ case_list DEFAULT ':' instructions '}'
  205             | SWITCH '(' argument_list ')' '{' â¢ case_list DEFAULT ':' '}'
  206             | SWITCH '(' argument_list ')' '{' â¢ case_list '}'

    CASE  shift, and go to state 689

    case_list   go to state 690
    case_value  go to state 691


State 599

  173 list_block: IDENT LIST '(' expression ')' â¢ '{' instructions '}'

    '{'  shift, and go to state 692


State 600

   43 simple: IDENT '=' TO_INTEGER '(' argument_list â¢ ')' flags

    ')'  shift, and go to state 693


State 601

   45 simple: IDENT '=' TO_STRING '(' argument_list â¢ ')' flags

    ')'  shift, and go to state 694


State 602

   44 simple: IDENT '=' SEX2DEC '(' argument_list â¢ ')' flags

    ')'  shift, and go to state 695


State 603

   60 simple: IDENT '=' DICTIONARY '(' argument_list â¢ ')' default flags

    ')'  shift, and go to state 696


State 604

   61 simple: IDENT '=' GETENV '(' argument_list â¢ ')' default flags

    ')'  shift, and go to state 697


State 605

   15 integer_array: integer_array ',' â¢ INTEGER

    INTEGER  shift, and go to state 698


State 606

  216 hash_array_value: IDENT '=' '[' integer_array ']' â¢

    $default  reduce using rule 216 (hash_array_value)


State 607

  213 concept_condition: IDENT '=' â¢ expression ';'
  214                  | IDENT '=' â¢ '[' integer_array ']' ';'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '['         shift, and go to state 699
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 700


State 608

  208 concept_value: IDENT '=' '{' concept_conditions '}' â¢

    $default  reduce using rule 208 (concept_value)


State 609

  212 concept_conditions: concept_condition concept_conditions â¢

    $default  reduce using rule 212 (concept_conditions)


State 610

  215 hash_array_value: STRING '=' '[' integer_array ']' â¢

    $default  reduce using rule 215 (hash_array_value)


State 611

  207 concept_value: STRING '=' '{' concept_conditions '}' â¢

    $default  reduce using rule 207 (concept_value)


State 612

  209 concept_value: INTEGER '=' '{' concept_conditions '}' â¢

    $default  reduce using rule 209 (concept_value)


State 613

   93 simple: FLOAT IDENT '[' argument ']' â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 701


State 614

   92 simple: FLOAT IDENT '.' IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 702


State 615

  210 concept_value: FLOAT '=' '{' concept_conditions '}' â¢

    $default  reduce using rule 210 (concept_value)


State 616

  140 if_block: IF '(' expression ')' â¢ '{' instructions '}'
  141         | IF '(' expression ')' â¢ '{' instructions '}' ELSE '{' instructions '}'

    '{'  shift, and go to state 703


State 617

  269 conditional_rule: IF '(' expression ')' â¢ '{' rule_entries '}'

    '{'  shift, and go to state 704


State 618

   43 simple: IDENT â¢ '=' TO_INTEGER '(' argument_list ')' flags
   44       | IDENT â¢ '=' SEX2DEC '(' argument_list ')' flags
   45       | IDENT â¢ '=' TO_STRING '(' argument_list ')' flags
   60       | IDENT â¢ '=' DICTIONARY '(' argument_list ')' default flags
   61       | IDENT â¢ '=' GETENV '(' argument_list ')' default flags
  173 list_block: IDENT â¢ LIST '(' expression ')' '{' instructions '}'
  264 rule_entry: IDENT â¢ '=' expression ';'

    LIST  shift, and go to state 208
    '='   shift, and go to state 705


State 619

  140 if_block: IF '(' expression ')' '{' instructions â¢ '}'
  141         | IF '(' expression ')' '{' instructions â¢ '}' ELSE '{' instructions '}'

    '}'  shift, and go to state 706


State 620

  266 rule_entries: rule_entry â¢
  267             | rule_entry â¢ rule_entries

    SKIP   shift, and go to state 57
    IDENT  shift, and go to state 229

    $default  reduce using rule 266 (rule_entries)

    rule_entry    go to state 620
    rule_entries  go to state 707


State 621

  269 conditional_rule: IF '(' expression ')' '{' rule_entries â¢ '}'

    '}'  shift, and go to state 708


State 622

  142 if_block: IF_TRANSIENT '(' expression ')' '{' instructions â¢ '}'
  143         | IF_TRANSIENT '(' expression ')' '{' instructions â¢ '}' ELSE '{' instructions '}'

    '}'  shift, and go to state 709


State 623

   37 simple: UNSIGNED '[' INTEGER ']' IDENT '[' â¢ argument_list ']' default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 710
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 624

   36 simple: UNSIGNED '[' INTEGER ']' IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 711


State 625

   39 simple: UNSIGNED '(' INTEGER ')' IDENT '[' â¢ argument_list ']' default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 712
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 626

   38 simple: UNSIGNED '(' INTEGER ')' IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 713


State 627

  175 trigger_block: TRIGGER '(' argument_list ')' '{' instructions â¢ '}'

    '}'  shift, and go to state 714


State 628

   40 simple: ASCII '[' INTEGER ']' IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 715


State 629

   47 simple: ASCII '[' INTEGER ']' STRING default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 716


State 630

   42 simple: GROUP IDENT '(' argument_list ')' default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 717


State 631

   50 simple: KSEC1EXPVER '[' INTEGER ']' IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 718


State 632

  174 while_block: WHILE '(' expression ')' '{' instructions â¢ '}'

    '}'  shift, and go to state 719


State 633

   86 simple: IBMFLOAT IDENT '[' argument ']' default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 720


State 634

   85 simple: IBMFLOAT IDENT '.' IDENT default flags â¢

    $default  reduce using rule 85 (simple)


State 635

   52 simple: SIGNED '[' INTEGER ']' IDENT '[' â¢ argument_list ']' default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 721
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 636

   51 simple: SIGNED '[' INTEGER ']' IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 722


State 637

   54 simple: SIGNED '(' INTEGER ')' IDENT '[' â¢ argument_list ']' default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 723
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 638

   53 simple: SIGNED '(' INTEGER ')' IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 724


State 639

   84 simple: BLOB IDENT '[' argument_list ']' default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 725


State 640

   49 simple: BYTE '[' INTEGER ']' IDENT '[' â¢ argument_list ']' default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 726
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 641

   48 simple: BYTE '[' INTEGER ']' IDENT default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 727


State 642

   56 simple: CODETABLE '[' IDENT ']' IDENT argument â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 728


State 643

   58 simple: CODETABLE '[' INTEGER ']' IDENT '(' â¢ argument_list ')' default flags
  226 atom: '(' â¢ expression ')'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 729
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 730


State 644

   55 simple: CODETABLE '[' INTEGER ']' IDENT argument â¢ default flags
   57       | CODETABLE '[' INTEGER ']' IDENT argument â¢ default SET '(' IDENT ')' flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 731


State 645

   59 simple: SMART_TABLE IDENT '(' argument_list ')' default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 732


State 646

   63 simple: COMPLEX_CODETABLE '[' INTEGER ']' IDENT '(' â¢ argument_list ')' default flags
  226 atom: '(' â¢ expression ')'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 733
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 730


State 647

   62 simple: COMPLEX_CODETABLE '[' INTEGER ']' IDENT argument â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 734


State 648

   65 simple: LOOKUP '[' INTEGER ']' IDENT '(' â¢ argument_list ')' flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 735
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 649

  110 simple: ALIAS IDENT '.' IDENT '=' IDENT â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 736


State 650

  112 simple: META IDENT IDENT '(' argument_list ')' â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 737


State 651

  113 simple: META IDENT '.' IDENT IDENT '(' â¢ argument_list ')' default flags

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 738
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 652

    9 dvalues: dvalues ',' â¢ FLOAT
   11        | dvalues ',' â¢ INTEGER

    INTEGER  shift, and go to state 739
    FLOAT    shift, and go to state 740


State 653

   90 simple: TRANS IDENT '=' '{' dvalues '}' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 741


State 654

   66 simple: FLAGBIT IDENT '(' argument_list ')' default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 742


State 655

  179 concept_block: CONCEPT IDENT '(' IDENT ',' IDENT â¢ ',' IDENT ',' IDENT ')' flags

    ','  shift, and go to state 743


State 656

  178 concept_block: CONCEPT IDENT '(' IDENT ',' STRING â¢ ',' IDENT ',' IDENT ')' flags
  180              | CONCEPT IDENT '(' IDENT ',' STRING â¢ ',' IDENT ',' IDENT ',' IDENT ')' flags
  181              | CONCEPT IDENT '(' IDENT ',' STRING â¢ ',' IDENT ')' flags

    ','  shift, and go to state 744


State 657

  177 concept_block: CONCEPT IDENT '(' IDENT ')' '{' â¢ concept_list '}' flags

    IDENT    shift, and go to state 221
    STRING   shift, and go to state 222
    INTEGER  shift, and go to state 78
    FLOAT    shift, and go to state 223

    concept_list   go to state 745
    concept_value  go to state 95


State 658

  182 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT â¢ ',' STRING ',' IDENT ',' IDENT ')' flags
  183              | CONCEPT IDENT '.' IDENT '(' IDENT â¢ ',' IDENT ',' IDENT ',' IDENT ')' flags
  184              | CONCEPT IDENT '.' IDENT '(' IDENT â¢ ',' STRING ',' IDENT ')' flags
  186              | CONCEPT IDENT '.' IDENT '(' IDENT â¢ ')' '{' concept_list '}' flags

    ','  shift, and go to state 746
    ')'  shift, and go to state 747


State 659

  185 concept_block: CONCEPT IDENT '.' IDENT '{' concept_list â¢ '}' flags
  196 concept_list: concept_list â¢ concept_value

    IDENT    shift, and go to state 221
    STRING   shift, and go to state 222
    INTEGER  shift, and go to state 78
    FLOAT    shift, and go to state 223
    '}'      shift, and go to state 748

    concept_value  go to state 224


State 660

  176 concept_block: CONCEPT IDENT '{' concept_list '}' flags â¢

    $default  reduce using rule 176 (concept_block)


State 661

  200 hash_array_block: HASH_ARRAY IDENT '(' IDENT ',' STRING â¢ ',' IDENT ',' IDENT ')' flags

    ','  shift, and go to state 749


State 662

  199 hash_array_block: HASH_ARRAY IDENT '{' hash_array_list '}' flags â¢

    $default  reduce using rule 199 (hash_array_block)


State 663

  189 concept_block: CONCEPT_NOFAIL IDENT '(' IDENT ',' STRING â¢ ',' IDENT ',' IDENT ')' flags
  190              | CONCEPT_NOFAIL IDENT '(' IDENT ',' STRING â¢ ',' IDENT ')' flags

    ','  shift, and go to state 750


State 664

  188 concept_block: CONCEPT_NOFAIL IDENT '(' IDENT ')' '{' â¢ concept_list '}' flags

    IDENT    shift, and go to state 221
    STRING   shift, and go to state 222
    INTEGER  shift, and go to state 78
    FLOAT    shift, and go to state 223

    concept_list   go to state 751
    concept_value  go to state 95


State 665

  191 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT â¢ ',' STRING ',' IDENT ',' IDENT ')' flags
  192              | CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT â¢ ',' STRING ',' IDENT ')' flags
  194              | CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT â¢ ')' '{' concept_list '}' flags

    ','  shift, and go to state 752
    ')'  shift, and go to state 753


State 666

  193 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '{' concept_list â¢ '}' flags
  196 concept_list: concept_list â¢ concept_value

    IDENT    shift, and go to state 221
    STRING   shift, and go to state 222
    INTEGER  shift, and go to state 78
    FLOAT    shift, and go to state 223
    '}'      shift, and go to state 754

    concept_value  go to state 224


State 667

  187 concept_block: CONCEPT_NOFAIL IDENT '{' concept_list '}' flags â¢

    $default  reduce using rule 187 (concept_block)


State 668

  156 flag_list: flag_list ',' flag â¢

    $default  reduce using rule 156 (flag_list)


State 669

  147 set: SET IDENT â¢ '=' expression

    '='  shift, and go to state 755


State 670

  148 set: SET_NOFAIL IDENT â¢ '=' expression

    '='  shift, and go to state 756


State 671

  149 set_list: set â¢ semi

    ';'  shift, and go to state 673

    semi  go to state 757


State 672

  145 when_block: WHEN '(' expression ')' '{' set_list â¢ '}'
  146           | WHEN '(' expression ')' '{' set_list â¢ '}' ELSE '{' set_list '}'
  150 set_list: set_list â¢ set semi

    SET         shift, and go to state 565
    SET_NOFAIL  shift, and go to state 566
    '}'         shift, and go to state 758

    set  go to state 759


State 673

   29 semi: ';' â¢

    $default  reduce using rule 29 (semi)


State 674

   30 semi: semi â¢ ';'
  144 when_block: WHEN '(' expression ')' set semi â¢

    ';'  shift, and go to state 760

    ';'       [reduce using rule 144 (when_block)]
    $default  reduce using rule 144 (when_block)


State 675

  124 simple: SET IDENT '=' '{' dvalues '}' â¢

    $default  reduce using rule 124 (simple)


State 676

   13 svalues: svalues ',' â¢ STRING

    STRING  shift, and go to state 761


State 677

  125 simple: SET IDENT '=' '{' svalues '}' â¢

    $default  reduce using rule 125 (simple)


State 678

  239 factor: IS_IN_LIST '(' IDENT ',' STRING â¢ ')'

    ')'  shift, and go to state 762


State 679

  240 factor: IS_IN_DICT '(' IDENT ',' STRING â¢ ')'

    ')'  shift, and go to state 763


State 680

  241 factor: IS_INTEGER '(' IDENT ',' INTEGER â¢ ')'
  242       | IS_INTEGER '(' IDENT ',' INTEGER â¢ ',' INTEGER ')'

    ','  shift, and go to state 764
    ')'  shift, and go to state 765


State 681

  217 string_or_ident: SUBSTR '(' IDENT ',' INTEGER â¢ ',' INTEGER ')'

    ','  shift, and go to state 766


State 682

  219 string_or_ident: SUBSTR '(' STRING ',' INTEGER â¢ ',' INTEGER ')'

    ','  shift, and go to state 767


State 683

  119 simple: RENAME '(' IDENT ',' IDENT ')' â¢

    $default  reduce using rule 119 (simple)


State 684

  103 simple: MESSAGE '[' INTEGER ']' IDENT flags â¢

    $default  reduce using rule 103 (simple)


State 685

   96 simple: G1_MESSAGE_LENGTH '[' INTEGER ']' IDENT '(' â¢ argument_list ')'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 768
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 686

   97 simple: G1_SECTION4_LENGTH '[' INTEGER ']' IDENT '(' â¢ argument_list ')'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    $default  reduce using rule 7 (empty)

    empty            go to state 175
    argument_list    go to state 769
    arguments        go to state 177
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 687

   95 simple: SECTION_LENGTH '[' INTEGER ']' IDENT default â¢

    $default  reduce using rule 95 (simple)


State 688

   64 simple: FLAG '[' INTEGER ']' IDENT argument â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 770


State 689

  203 case_value: CASE â¢ arguments ':' instructions

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    arguments        go to state 771
    argument         go to state 178
    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 187


State 690

  202 case_list: case_list â¢ case_value
  204 switch_block: SWITCH '(' argument_list ')' '{' case_list â¢ DEFAULT ':' instructions '}'
  205             | SWITCH '(' argument_list ')' '{' case_list â¢ DEFAULT ':' '}'
  206             | SWITCH '(' argument_list ')' '{' case_list â¢ '}'

    CASE     shift, and go to state 689
    DEFAULT  shift, and go to state 772
    '}'      shift, and go to state 773

    case_value  go to state 774


State 691

  201 case_list: case_value â¢

    $default  reduce using rule 201 (case_list)


State 692

  173 list_block: IDENT LIST '(' expression ')' '{' â¢ instructions '}'

    IF                    shift, and go to state 215
    IF_TRANSIENT          shift, and go to state 3
    CLOSE                 shift, and go to state 4
    UNSIGNED              shift, and go to state 5
    TEMPLATE              shift, and go to state 6
    TEMPLATE_NOFAIL       shift, and go to state 7
    TRIGGER               shift, and go to state 8
    ASCII                 shift, and go to state 9
    GROUP                 shift, and go to state 10
    NON_ALPHA             shift, and go to state 11
    KSEC1EXPVER           shift, and go to state 12
    LABEL                 shift, and go to state 13
    WHILE                 shift, and go to state 14
    IBMFLOAT              shift, and go to state 15
    SIGNED                shift, and go to state 16
    UINT8                 shift, and go to state 17
    INT8                  shift, and go to state 18
    UINT16                shift, and go to state 19
    INT16                 shift, and go to state 20
    UINT16_LITTLE_ENDIAN  shift, and go to state 21
    INT16_LITTLE_ENDIAN   shift, and go to state 22
    UINT32                shift, and go to state 23
    INT32                 shift, and go to state 24
    UINT32_LITTLE_ENDIAN  shift, and go to state 25
    INT32_LITTLE_ENDIAN   shift, and go to state 26
    UINT64                shift, and go to state 27
    INT64                 shift, and go to state 28
    UINT64_LITTLE_ENDIAN  shift, and go to state 29
    INT64_LITTLE_ENDIAN   shift, and go to state 30
    BLOB                  shift, and go to state 31
    BYTE                  shift, and go to state 32
    CODETABLE             shift, and go to state 33
    SMART_TABLE           shift, and go to state 34
    COMPLEX_CODETABLE     shift, and go to state 35
    LOOKUP                shift, and go to state 36
    ALIAS                 shift, and go to state 37
    UNALIAS               shift, and go to state 38
    META                  shift, and go to state 39
    POS                   shift, and go to state 40
    INTCONST              shift, and go to state 41
    TRANS                 shift, and go to state 42
    FLAGBIT               shift, and go to state 43
    CONCEPT               shift, and go to state 44
    HASH_ARRAY            shift, and go to state 45
    CONCEPT_NOFAIL        shift, and go to state 46
    MODIFY                shift, and go to state 47
    WHEN                  shift, and go to state 48
    SET                   shift, and go to state 49
    SET_NOFAIL            shift, and go to state 50
    WRITE                 shift, and go to state 51
    APPEND                shift, and go to state 52
    PRINT                 shift, and go to state 53
    EXPORT                shift, and go to state 54
    REMOVE                shift, and go to state 55
    RENAME                shift, and go to state 56
    PAD                   shift, and go to state 58
    SECTION_PADDING       shift, and go to state 59
    MESSAGE               shift, and go to state 60
    MESSAGE_COPY          shift, and go to state 61
    PADTO                 shift, and go to state 62
    PADTOEVEN             shift, and go to state 63
    PADTOMULTIPLE         shift, and go to state 64
    G1_HALF_BYTE          shift, and go to state 65
    G1_MESSAGE_LENGTH     shift, and go to state 66
    G1_SECTION4_LENGTH    shift, and go to state 67
    SECTION_LENGTH        shift, and go to state 68
    FLAG                  shift, and go to state 69
    ITERATOR              shift, and go to state 70
    NEAREST               shift, and go to state 71
    BOX                   shift, and go to state 72
    KSEC                  shift, and go to state 73
    ASSERT                shift, and go to state 74
    SWITCH                shift, and go to state 75
    IDENT                 shift, and go to state 216
    FLOAT                 shift, and go to state 217

    instructions      go to state 775
    instruction       go to state 83
    simple            go to state 84
    if_block          go to state 85
    when_block        go to state 86
    list_block        go to state 87
    while_block       go to state 88
    trigger_block     go to state 89
    concept_block     go to state 90
    hash_array_block  go to state 93
    switch_block      go to state 94


State 693

   43 simple: IDENT '=' TO_INTEGER '(' argument_list ')' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 776


State 694

   45 simple: IDENT '=' TO_STRING '(' argument_list ')' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 777


State 695

   44 simple: IDENT '=' SEX2DEC '(' argument_list ')' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 778


State 696

   60 simple: IDENT '=' DICTIONARY '(' argument_list ')' â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 779


State 697

   61 simple: IDENT '=' GETENV '(' argument_list ')' â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 780


State 698

   15 integer_array: integer_array ',' INTEGER â¢

    $default  reduce using rule 15 (integer_array)


State 699

  214 concept_condition: IDENT '=' '[' â¢ integer_array ']' ';'

    INTEGER  shift, and go to state 506

    integer_array  go to state 781


State 700

  213 concept_condition: IDENT '=' expression â¢ ';'

    ';'  shift, and go to state 782


State 701

   93 simple: FLOAT IDENT '[' argument ']' default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 783


State 702

   92 simple: FLOAT IDENT '.' IDENT default flags â¢

    $default  reduce using rule 92 (simple)


State 703

  140 if_block: IF '(' expression ')' '{' â¢ instructions '}'
  141         | IF '(' expression ')' '{' â¢ instructions '}' ELSE '{' instructions '}'

    IF                    shift, and go to state 215
    IF_TRANSIENT          shift, and go to state 3
    CLOSE                 shift, and go to state 4
    UNSIGNED              shift, and go to state 5
    TEMPLATE              shift, and go to state 6
    TEMPLATE_NOFAIL       shift, and go to state 7
    TRIGGER               shift, and go to state 8
    ASCII                 shift, and go to state 9
    GROUP                 shift, and go to state 10
    NON_ALPHA             shift, and go to state 11
    KSEC1EXPVER           shift, and go to state 12
    LABEL                 shift, and go to state 13
    WHILE                 shift, and go to state 14
    IBMFLOAT              shift, and go to state 15
    SIGNED                shift, and go to state 16
    UINT8                 shift, and go to state 17
    INT8                  shift, and go to state 18
    UINT16                shift, and go to state 19
    INT16                 shift, and go to state 20
    UINT16_LITTLE_ENDIAN  shift, and go to state 21
    INT16_LITTLE_ENDIAN   shift, and go to state 22
    UINT32                shift, and go to state 23
    INT32                 shift, and go to state 24
    UINT32_LITTLE_ENDIAN  shift, and go to state 25
    INT32_LITTLE_ENDIAN   shift, and go to state 26
    UINT64                shift, and go to state 27
    INT64                 shift, and go to state 28
    UINT64_LITTLE_ENDIAN  shift, and go to state 29
    INT64_LITTLE_ENDIAN   shift, and go to state 30
    BLOB                  shift, and go to state 31
    BYTE                  shift, and go to state 32
    CODETABLE             shift, and go to state 33
    SMART_TABLE           shift, and go to state 34
    COMPLEX_CODETABLE     shift, and go to state 35
    LOOKUP                shift, and go to state 36
    ALIAS                 shift, and go to state 37
    UNALIAS               shift, and go to state 38
    META                  shift, and go to state 39
    POS                   shift, and go to state 40
    INTCONST              shift, and go to state 41
    TRANS                 shift, and go to state 42
    FLAGBIT               shift, and go to state 43
    CONCEPT               shift, and go to state 44
    HASH_ARRAY            shift, and go to state 45
    CONCEPT_NOFAIL        shift, and go to state 46
    MODIFY                shift, and go to state 47
    WHEN                  shift, and go to state 48
    SET                   shift, and go to state 49
    SET_NOFAIL            shift, and go to state 50
    WRITE                 shift, and go to state 51
    APPEND                shift, and go to state 52
    PRINT                 shift, and go to state 53
    EXPORT                shift, and go to state 54
    REMOVE                shift, and go to state 55
    RENAME                shift, and go to state 56
    PAD                   shift, and go to state 58
    SECTION_PADDING       shift, and go to state 59
    MESSAGE               shift, and go to state 60
    MESSAGE_COPY          shift, and go to state 61
    PADTO                 shift, and go to state 62
    PADTOEVEN             shift, and go to state 63
    PADTOMULTIPLE         shift, and go to state 64
    G1_HALF_BYTE          shift, and go to state 65
    G1_MESSAGE_LENGTH     shift, and go to state 66
    G1_SECTION4_LENGTH    shift, and go to state 67
    SECTION_LENGTH        shift, and go to state 68
    FLAG                  shift, and go to state 69
    ITERATOR              shift, and go to state 70
    NEAREST               shift, and go to state 71
    BOX                   shift, and go to state 72
    KSEC                  shift, and go to state 73
    ASSERT                shift, and go to state 74
    SWITCH                shift, and go to state 75
    IDENT                 shift, and go to state 216
    FLOAT                 shift, and go to state 217

    instructions      go to state 619
    instruction       go to state 83
    simple            go to state 84
    if_block          go to state 85
    when_block        go to state 86
    list_block        go to state 87
    while_block       go to state 88
    trigger_block     go to state 89
    concept_block     go to state 90
    hash_array_block  go to state 93
    switch_block      go to state 94


State 704

  269 conditional_rule: IF '(' expression ')' '{' â¢ rule_entries '}'

    SKIP   shift, and go to state 57
    IDENT  shift, and go to state 229

    rule_entry    go to state 620
    rule_entries  go to state 621


State 705

   43 simple: IDENT '=' â¢ TO_INTEGER '(' argument_list ')' flags
   44       | IDENT '=' â¢ SEX2DEC '(' argument_list ')' flags
   45       | IDENT '=' â¢ TO_STRING '(' argument_list ')' flags
   60       | IDENT '=' â¢ DICTIONARY '(' argument_list ')' default flags
   61       | IDENT '=' â¢ GETENV '(' argument_list ')' default flags
  264 rule_entry: IDENT '=' â¢ expression ';'

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    TO_INTEGER  shift, and go to state 348
    TO_STRING   shift, and go to state 349
    SEX2DEC     shift, and go to state 350
    DICTIONARY  shift, and go to state 351
    GETENV      shift, and go to state 352
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 355


State 706

  140 if_block: IF '(' expression ')' '{' instructions '}' â¢
  141         | IF '(' expression ')' '{' instructions '}' â¢ ELSE '{' instructions '}'

    ELSE  shift, and go to state 784

    $default  reduce using rule 140 (if_block)


State 707

  267 rule_entries: rule_entry rule_entries â¢

    $default  reduce using rule 267 (rule_entries)


State 708

  269 conditional_rule: IF '(' expression ')' '{' rule_entries '}' â¢

    $default  reduce using rule 269 (conditional_rule)


State 709

  142 if_block: IF_TRANSIENT '(' expression ')' '{' instructions '}' â¢
  143         | IF_TRANSIENT '(' expression ')' '{' instructions '}' â¢ ELSE '{' instructions '}'

    ELSE  shift, and go to state 785

    $default  reduce using rule 142 (if_block)


State 710

   37 simple: UNSIGNED '[' INTEGER ']' IDENT '[' argument_list â¢ ']' default flags

    ']'  shift, and go to state 786


State 711

   36 simple: UNSIGNED '[' INTEGER ']' IDENT default flags â¢

    $default  reduce using rule 36 (simple)


State 712

   39 simple: UNSIGNED '(' INTEGER ')' IDENT '[' argument_list â¢ ']' default flags

    ']'  shift, and go to state 787


State 713

   38 simple: UNSIGNED '(' INTEGER ')' IDENT default flags â¢

    $default  reduce using rule 38 (simple)


State 714

  175 trigger_block: TRIGGER '(' argument_list ')' '{' instructions '}' â¢

    $default  reduce using rule 175 (trigger_block)


State 715

   40 simple: ASCII '[' INTEGER ']' IDENT default flags â¢

    $default  reduce using rule 40 (simple)


State 716

   47 simple: ASCII '[' INTEGER ']' STRING default flags â¢

    $default  reduce using rule 47 (simple)


State 717

   42 simple: GROUP IDENT '(' argument_list ')' default flags â¢

    $default  reduce using rule 42 (simple)


State 718

   50 simple: KSEC1EXPVER '[' INTEGER ']' IDENT default flags â¢

    $default  reduce using rule 50 (simple)


State 719

  174 while_block: WHILE '(' expression ')' '{' instructions '}' â¢

    $default  reduce using rule 174 (while_block)


State 720

   86 simple: IBMFLOAT IDENT '[' argument ']' default flags â¢

    $default  reduce using rule 86 (simple)


State 721

   52 simple: SIGNED '[' INTEGER ']' IDENT '[' argument_list â¢ ']' default flags

    ']'  shift, and go to state 788


State 722

   51 simple: SIGNED '[' INTEGER ']' IDENT default flags â¢

    $default  reduce using rule 51 (simple)


State 723

   54 simple: SIGNED '(' INTEGER ')' IDENT '[' argument_list â¢ ']' default flags

    ']'  shift, and go to state 789


State 724

   53 simple: SIGNED '(' INTEGER ')' IDENT default flags â¢

    $default  reduce using rule 53 (simple)


State 725

   84 simple: BLOB IDENT '[' argument_list ']' default flags â¢

    $default  reduce using rule 84 (simple)


State 726

   49 simple: BYTE '[' INTEGER ']' IDENT '[' argument_list â¢ ']' default flags

    ']'  shift, and go to state 790


State 727

   48 simple: BYTE '[' INTEGER ']' IDENT default flags â¢

    $default  reduce using rule 48 (simple)


State 728

   56 simple: CODETABLE '[' IDENT ']' IDENT argument default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 791


State 729

   58 simple: CODETABLE '[' INTEGER ']' IDENT '(' argument_list â¢ ')' default flags

    ')'  shift, and go to state 792


State 730

   35 argument: expression â¢
  226 atom: '(' expression â¢ ')'

    ')'  shift, and go to state 464

    ')'       [reduce using rule 35 (argument)]
    $default  reduce using rule 35 (argument)


State 731

   55 simple: CODETABLE '[' INTEGER ']' IDENT argument default â¢ flags
   57       | CODETABLE '[' INTEGER ']' IDENT argument default â¢ SET '(' IDENT ')' flags

    SET  shift, and go to state 793
    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 794


State 732

   59 simple: SMART_TABLE IDENT '(' argument_list ')' default flags â¢

    $default  reduce using rule 59 (simple)


State 733

   63 simple: COMPLEX_CODETABLE '[' INTEGER ']' IDENT '(' argument_list â¢ ')' default flags

    ')'  shift, and go to state 795


State 734

   62 simple: COMPLEX_CODETABLE '[' INTEGER ']' IDENT argument default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 796


State 735

   65 simple: LOOKUP '[' INTEGER ']' IDENT '(' argument_list â¢ ')' flags

    ')'  shift, and go to state 797


State 736

  110 simple: ALIAS IDENT '.' IDENT '=' IDENT flags â¢

    $default  reduce using rule 110 (simple)


State 737

  112 simple: META IDENT IDENT '(' argument_list ')' default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 798


State 738

  113 simple: META IDENT '.' IDENT IDENT '(' argument_list â¢ ')' default flags

    ')'  shift, and go to state 799


State 739

   11 dvalues: dvalues ',' INTEGER â¢

    $default  reduce using rule 11 (dvalues)


State 740

    9 dvalues: dvalues ',' FLOAT â¢

    $default  reduce using rule 9 (dvalues)


State 741

   90 simple: TRANS IDENT '=' '{' dvalues '}' flags â¢

    $default  reduce using rule 90 (simple)


State 742

   66 simple: FLAGBIT IDENT '(' argument_list ')' default flags â¢

    $default  reduce using rule 66 (simple)


State 743

  179 concept_block: CONCEPT IDENT '(' IDENT ',' IDENT ',' â¢ IDENT ',' IDENT ')' flags

    IDENT  shift, and go to state 800


State 744

  178 concept_block: CONCEPT IDENT '(' IDENT ',' STRING ',' â¢ IDENT ',' IDENT ')' flags
  180              | CONCEPT IDENT '(' IDENT ',' STRING ',' â¢ IDENT ',' IDENT ',' IDENT ')' flags
  181              | CONCEPT IDENT '(' IDENT ',' STRING ',' â¢ IDENT ')' flags

    IDENT  shift, and go to state 801


State 745

  177 concept_block: CONCEPT IDENT '(' IDENT ')' '{' concept_list â¢ '}' flags
  196 concept_list: concept_list â¢ concept_value

    IDENT    shift, and go to state 221
    STRING   shift, and go to state 222
    INTEGER  shift, and go to state 78
    FLOAT    shift, and go to state 223
    '}'      shift, and go to state 802

    concept_value  go to state 224


State 746

  182 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ',' â¢ STRING ',' IDENT ',' IDENT ')' flags
  183              | CONCEPT IDENT '.' IDENT '(' IDENT ',' â¢ IDENT ',' IDENT ',' IDENT ')' flags
  184              | CONCEPT IDENT '.' IDENT '(' IDENT ',' â¢ STRING ',' IDENT ')' flags

    IDENT   shift, and go to state 803
    STRING  shift, and go to state 804


State 747

  186 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ')' â¢ '{' concept_list '}' flags

    '{'  shift, and go to state 805


State 748

  185 concept_block: CONCEPT IDENT '.' IDENT '{' concept_list '}' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 806


State 749

  200 hash_array_block: HASH_ARRAY IDENT '(' IDENT ',' STRING ',' â¢ IDENT ',' IDENT ')' flags

    IDENT  shift, and go to state 807


State 750

  189 concept_block: CONCEPT_NOFAIL IDENT '(' IDENT ',' STRING ',' â¢ IDENT ',' IDENT ')' flags
  190              | CONCEPT_NOFAIL IDENT '(' IDENT ',' STRING ',' â¢ IDENT ')' flags

    IDENT  shift, and go to state 808


State 751

  188 concept_block: CONCEPT_NOFAIL IDENT '(' IDENT ')' '{' concept_list â¢ '}' flags
  196 concept_list: concept_list â¢ concept_value

    IDENT    shift, and go to state 221
    STRING   shift, and go to state 222
    INTEGER  shift, and go to state 78
    FLOAT    shift, and go to state 223
    '}'      shift, and go to state 809

    concept_value  go to state 224


State 752

  191 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ',' â¢ STRING ',' IDENT ',' IDENT ')' flags
  192              | CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ',' â¢ STRING ',' IDENT ')' flags

    STRING  shift, and go to state 810


State 753

  194 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ')' â¢ '{' concept_list '}' flags

    '{'  shift, and go to state 811


State 754

  193 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '{' concept_list '}' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 812


State 755

  147 set: SET IDENT '=' â¢ expression

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 813


State 756

  148 set: SET_NOFAIL IDENT '=' â¢ expression

    IS_IN_LIST  shift, and go to state 161
    IS_IN_DICT  shift, and go to state 162
    IS_INTEGER  shift, and go to state 163
    NIL         shift, and go to state 164
    DUMMY       shift, and go to state 165
    LENGTH      shift, and go to state 166
    SUBSTR      shift, and go to state 167
    NOT         shift, and go to state 168
    IDENT       shift, and go to state 169
    STRING      shift, and go to state 170
    INTEGER     shift, and go to state 171
    FLOAT       shift, and go to state 172
    '('         shift, and go to state 173
    '-'         shift, and go to state 174

    string_or_ident  go to state 179
    atom             go to state 180
    power            go to state 181
    factor           go to state 182
    term             go to state 183
    condition        go to state 184
    conjunction      go to state 185
    disjunction      go to state 186
    expression       go to state 814


State 757

   30 semi: semi â¢ ';'
  149 set_list: set semi â¢

    ';'  shift, and go to state 760

    $default  reduce using rule 149 (set_list)


State 758

  145 when_block: WHEN '(' expression ')' '{' set_list '}' â¢
  146           | WHEN '(' expression ')' '{' set_list '}' â¢ ELSE '{' set_list '}'

    ELSE  shift, and go to state 815

    $default  reduce using rule 145 (when_block)


State 759

  150 set_list: set_list set â¢ semi

    ';'  shift, and go to state 673

    semi  go to state 816


State 760

   30 semi: semi ';' â¢

    $default  reduce using rule 30 (semi)


State 761

   13 svalues: svalues ',' STRING â¢

    $default  reduce using rule 13 (svalues)


State 762

  239 factor: IS_IN_LIST '(' IDENT ',' STRING ')' â¢

    $default  reduce using rule 239 (factor)


State 763

  240 factor: IS_IN_DICT '(' IDENT ',' STRING ')' â¢

    $default  reduce using rule 240 (factor)


State 764

  242 factor: IS_INTEGER '(' IDENT ',' INTEGER ',' â¢ INTEGER ')'

    INTEGER  shift, and go to state 817


State 765

  241 factor: IS_INTEGER '(' IDENT ',' INTEGER ')' â¢

    $default  reduce using rule 241 (factor)


State 766

  217 string_or_ident: SUBSTR '(' IDENT ',' INTEGER ',' â¢ INTEGER ')'

    INTEGER  shift, and go to state 818


State 767

  219 string_or_ident: SUBSTR '(' STRING ',' INTEGER ',' â¢ INTEGER ')'

    INTEGER  shift, and go to state 819


State 768

   96 simple: G1_MESSAGE_LENGTH '[' INTEGER ']' IDENT '(' argument_list â¢ ')'

    ')'  shift, and go to state 820


State 769

   97 simple: G1_SECTION4_LENGTH '[' INTEGER ']' IDENT '(' argument_list â¢ ')'

    ')'  shift, and go to state 821


State 770

   64 simple: FLAG '[' INTEGER ']' IDENT argument default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 822


State 771

  203 case_value: CASE arguments â¢ ':' instructions

    ':'  shift, and go to state 823


State 772

  204 switch_block: SWITCH '(' argument_list ')' '{' case_list DEFAULT â¢ ':' instructions '}'
  205             | SWITCH '(' argument_list ')' '{' case_list DEFAULT â¢ ':' '}'

    ':'  shift, and go to state 824


State 773

  206 switch_block: SWITCH '(' argument_list ')' '{' case_list '}' â¢

    $default  reduce using rule 206 (switch_block)


State 774

  202 case_list: case_list case_value â¢

    $default  reduce using rule 202 (case_list)


State 775

  173 list_block: IDENT LIST '(' expression ')' '{' instructions â¢ '}'

    '}'  shift, and go to state 825


State 776

   43 simple: IDENT '=' TO_INTEGER '(' argument_list ')' flags â¢

    $default  reduce using rule 43 (simple)


State 777

   45 simple: IDENT '=' TO_STRING '(' argument_list ')' flags â¢

    $default  reduce using rule 45 (simple)


State 778

   44 simple: IDENT '=' SEX2DEC '(' argument_list ')' flags â¢

    $default  reduce using rule 44 (simple)


State 779

   60 simple: IDENT '=' DICTIONARY '(' argument_list ')' default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 826


State 780

   61 simple: IDENT '=' GETENV '(' argument_list ')' default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 827


State 781

   15 integer_array: integer_array â¢ ',' INTEGER
  214 concept_condition: IDENT '=' '[' integer_array â¢ ']' ';'

    ','  shift, and go to state 605
    ']'  shift, and go to state 828


State 782

  213 concept_condition: IDENT '=' expression ';' â¢

    $default  reduce using rule 213 (concept_condition)


State 783

   93 simple: FLOAT IDENT '[' argument ']' default flags â¢

    $default  reduce using rule 93 (simple)


State 784

  141 if_block: IF '(' expression ')' '{' instructions '}' ELSE â¢ '{' instructions '}'

    '{'  shift, and go to state 829


State 785

  143 if_block: IF_TRANSIENT '(' expression ')' '{' instructions '}' ELSE â¢ '{' instructions '}'

    '{'  shift, and go to state 830


State 786

   37 simple: UNSIGNED '[' INTEGER ']' IDENT '[' argument_list ']' â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 831


State 787

   39 simple: UNSIGNED '(' INTEGER ')' IDENT '[' argument_list ']' â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 832


State 788

   52 simple: SIGNED '[' INTEGER ']' IDENT '[' argument_list ']' â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 833


State 789

   54 simple: SIGNED '(' INTEGER ')' IDENT '[' argument_list ']' â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 834


State 790

   49 simple: BYTE '[' INTEGER ']' IDENT '[' argument_list ']' â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 835


State 791

   56 simple: CODETABLE '[' IDENT ']' IDENT argument default flags â¢

    $default  reduce using rule 56 (simple)


State 792

   58 simple: CODETABLE '[' INTEGER ']' IDENT '(' argument_list ')' â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 836


State 793

   57 simple: CODETABLE '[' INTEGER ']' IDENT argument default SET â¢ '(' IDENT ')' flags

    '('  shift, and go to state 837


State 794

   55 simple: CODETABLE '[' INTEGER ']' IDENT argument default flags â¢

    $default  reduce using rule 55 (simple)


State 795

   63 simple: COMPLEX_CODETABLE '[' INTEGER ']' IDENT '(' argument_list ')' â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 838


State 796

   62 simple: COMPLEX_CODETABLE '[' INTEGER ']' IDENT argument default flags â¢

    $default  reduce using rule 62 (simple)


State 797

   65 simple: LOOKUP '[' INTEGER ']' IDENT '(' argument_list ')' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 839


State 798

  112 simple: META IDENT IDENT '(' argument_list ')' default flags â¢

    $default  reduce using rule 112 (simple)


State 799

  113 simple: META IDENT '.' IDENT IDENT '(' argument_list ')' â¢ default flags

    '='  shift, and go to state 241

    $default  reduce using rule 7 (empty)

    empty    go to state 242
    default  go to state 840


State 800

  179 concept_block: CONCEPT IDENT '(' IDENT ',' IDENT ',' IDENT â¢ ',' IDENT ')' flags

    ','  shift, and go to state 841


State 801

  178 concept_block: CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT â¢ ',' IDENT ')' flags
  180              | CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT â¢ ',' IDENT ',' IDENT ')' flags
  181              | CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT â¢ ')' flags

    ','  shift, and go to state 842
    ')'  shift, and go to state 843


State 802

  177 concept_block: CONCEPT IDENT '(' IDENT ')' '{' concept_list '}' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 844


State 803

  183 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ',' IDENT â¢ ',' IDENT ',' IDENT ')' flags

    ','  shift, and go to state 845


State 804

  182 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ',' STRING â¢ ',' IDENT ',' IDENT ')' flags
  184              | CONCEPT IDENT '.' IDENT '(' IDENT ',' STRING â¢ ',' IDENT ')' flags

    ','  shift, and go to state 846


State 805

  186 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ')' '{' â¢ concept_list '}' flags

    IDENT    shift, and go to state 221
    STRING   shift, and go to state 222
    INTEGER  shift, and go to state 78
    FLOAT    shift, and go to state 223

    concept_list   go to state 847
    concept_value  go to state 95


State 806

  185 concept_block: CONCEPT IDENT '.' IDENT '{' concept_list '}' flags â¢

    $default  reduce using rule 185 (concept_block)


State 807

  200 hash_array_block: HASH_ARRAY IDENT '(' IDENT ',' STRING ',' IDENT â¢ ',' IDENT ')' flags

    ','  shift, and go to state 848


State 808

  189 concept_block: CONCEPT_NOFAIL IDENT '(' IDENT ',' STRING ',' IDENT â¢ ',' IDENT ')' flags
  190              | CONCEPT_NOFAIL IDENT '(' IDENT ',' STRING ',' IDENT â¢ ')' flags

    ','  shift, and go to state 849
    ')'  shift, and go to state 850


State 809

  188 concept_block: CONCEPT_NOFAIL IDENT '(' IDENT ')' '{' concept_list '}' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 851


State 810

  191 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ',' STRING â¢ ',' IDENT ',' IDENT ')' flags
  192              | CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ',' STRING â¢ ',' IDENT ')' flags

    ','  shift, and go to state 852


State 811

  194 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ')' '{' â¢ concept_list '}' flags

    IDENT    shift, and go to state 221
    STRING   shift, and go to state 222
    INTEGER  shift, and go to state 78
    FLOAT    shift, and go to state 223

    concept_list   go to state 853
    concept_value  go to state 95


State 812

  193 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '{' concept_list '}' flags â¢

    $default  reduce using rule 193 (concept_block)


State 813

  147 set: SET IDENT '=' expression â¢

    $default  reduce using rule 147 (set)


State 814

  148 set: SET_NOFAIL IDENT '=' expression â¢

    $default  reduce using rule 148 (set)


State 815

  146 when_block: WHEN '(' expression ')' '{' set_list '}' ELSE â¢ '{' set_list '}'

    '{'  shift, and go to state 854


State 816

   30 semi: semi â¢ ';'
  150 set_list: set_list set semi â¢

    ';'  shift, and go to state 760

    $default  reduce using rule 150 (set_list)


State 817

  242 factor: IS_INTEGER '(' IDENT ',' INTEGER ',' INTEGER â¢ ')'

    ')'  shift, and go to state 855


State 818

  217 string_or_ident: SUBSTR '(' IDENT ',' INTEGER ',' INTEGER â¢ ')'

    ')'  shift, and go to state 856


State 819

  219 string_or_ident: SUBSTR '(' STRING ',' INTEGER ',' INTEGER â¢ ')'

    ')'  shift, and go to state 857


State 820

   96 simple: G1_MESSAGE_LENGTH '[' INTEGER ']' IDENT '(' argument_list ')' â¢

    $default  reduce using rule 96 (simple)


State 821

   97 simple: G1_SECTION4_LENGTH '[' INTEGER ']' IDENT '(' argument_list ')' â¢

    $default  reduce using rule 97 (simple)


State 822

   64 simple: FLAG '[' INTEGER ']' IDENT argument default flags â¢

    $default  reduce using rule 64 (simple)


State 823

  203 case_value: CASE arguments ':' â¢ instructions

    IF                    shift, and go to state 215
    IF_TRANSIENT          shift, and go to state 3
    CLOSE                 shift, and go to state 4
    UNSIGNED              shift, and go to state 5
    TEMPLATE              shift, and go to state 6
    TEMPLATE_NOFAIL       shift, and go to state 7
    TRIGGER               shift, and go to state 8
    ASCII                 shift, and go to state 9
    GROUP                 shift, and go to state 10
    NON_ALPHA             shift, and go to state 11
    KSEC1EXPVER           shift, and go to state 12
    LABEL                 shift, and go to state 13
    WHILE                 shift, and go to state 14
    IBMFLOAT              shift, and go to state 15
    SIGNED                shift, and go to state 16
    UINT8                 shift, and go to state 17
    INT8                  shift, and go to state 18
    UINT16                shift, and go to state 19
    INT16                 shift, and go to state 20
    UINT16_LITTLE_ENDIAN  shift, and go to state 21
    INT16_LITTLE_ENDIAN   shift, and go to state 22
    UINT32                shift, and go to state 23
    INT32                 shift, and go to state 24
    UINT32_LITTLE_ENDIAN  shift, and go to state 25
    INT32_LITTLE_ENDIAN   shift, and go to state 26
    UINT64                shift, and go to state 27
    INT64                 shift, and go to state 28
    UINT64_LITTLE_ENDIAN  shift, and go to state 29
    INT64_LITTLE_ENDIAN   shift, and go to state 30
    BLOB                  shift, and go to state 31
    BYTE                  shift, and go to state 32
    CODETABLE             shift, and go to state 33
    SMART_TABLE           shift, and go to state 34
    COMPLEX_CODETABLE     shift, and go to state 35
    LOOKUP                shift, and go to state 36
    ALIAS                 shift, and go to state 37
    UNALIAS               shift, and go to state 38
    META                  shift, and go to state 39
    POS                   shift, and go to state 40
    INTCONST              shift, and go to state 41
    TRANS                 shift, and go to state 42
    FLAGBIT               shift, and go to state 43
    CONCEPT               shift, and go to state 44
    HASH_ARRAY            shift, and go to state 45
    CONCEPT_NOFAIL        shift, and go to state 46
    MODIFY                shift, and go to state 47
    WHEN                  shift, and go to state 48
    SET                   shift, and go to state 49
    SET_NOFAIL            shift, and go to state 50
    WRITE                 shift, and go to state 51
    APPEND                shift, and go to state 52
    PRINT                 shift, and go to state 53
    EXPORT                shift, and go to state 54
    REMOVE                shift, and go to state 55
    RENAME                shift, and go to state 56
    PAD                   shift, and go to state 58
    SECTION_PADDING       shift, and go to state 59
    MESSAGE               shift, and go to state 60
    MESSAGE_COPY          shift, and go to state 61
    PADTO                 shift, and go to state 62
    PADTOEVEN             shift, and go to state 63
    PADTOMULTIPLE         shift, and go to state 64
    G1_HALF_BYTE          shift, and go to state 65
    G1_MESSAGE_LENGTH     shift, and go to state 66
    G1_SECTION4_LENGTH    shift, and go to state 67
    SECTION_LENGTH        shift, and go to state 68
    FLAG                  shift, and go to state 69
    ITERATOR              shift, and go to state 70
    NEAREST               shift, and go to state 71
    BOX                   shift, and go to state 72
    KSEC                  shift, and go to state 73
    ASSERT                shift, and go to state 74
    SWITCH                shift, and go to state 75
    IDENT                 shift, and go to state 216
    FLOAT                 shift, and go to state 217

    instructions      go to state 858
    instruction       go to state 83
    simple            go to state 84
    if_block          go to state 85
    when_block        go to state 86
    list_block        go to state 87
    while_block       go to state 88
    trigger_block     go to state 89
    concept_block     go to state 90
    hash_array_block  go to state 93
    switch_block      go to state 94


State 824

  204 switch_block: SWITCH '(' argument_list ')' '{' case_list DEFAULT ':' â¢ instructions '}'
  205             | SWITCH '(' argument_list ')' '{' case_list DEFAULT ':' â¢ '}'

    IF                    shift, and go to state 215
    IF_TRANSIENT          shift, and go to state 3
    CLOSE                 shift, and go to state 4
    UNSIGNED              shift, and go to state 5
    TEMPLATE              shift, and go to state 6
    TEMPLATE_NOFAIL       shift, and go to state 7
    TRIGGER               shift, and go to state 8
    ASCII                 shift, and go to state 9
    GROUP                 shift, and go to state 10
    NON_ALPHA             shift, and go to state 11
    KSEC1EXPVER           shift, and go to state 12
    LABEL                 shift, and go to state 13
    WHILE                 shift, and go to state 14
    IBMFLOAT              shift, and go to state 15
    SIGNED                shift, and go to state 16
    UINT8                 shift, and go to state 17
    INT8                  shift, and go to state 18
    UINT16                shift, and go to state 19
    INT16                 shift, and go to state 20
    UINT16_LITTLE_ENDIAN  shift, and go to state 21
    INT16_LITTLE_ENDIAN   shift, and go to state 22
    UINT32                shift, and go to state 23
    INT32                 shift, and go to state 24
    UINT32_LITTLE_ENDIAN  shift, and go to state 25
    INT32_LITTLE_ENDIAN   shift, and go to state 26
    UINT64                shift, and go to state 27
    INT64                 shift, and go to state 28
    UINT64_LITTLE_ENDIAN  shift, and go to state 29
    INT64_LITTLE_ENDIAN   shift, and go to state 30
    BLOB                  shift, and go to state 31
    BYTE                  shift, and go to state 32
    CODETABLE             shift, and go to state 33
    SMART_TABLE           shift, and go to state 34
    COMPLEX_CODETABLE     shift, and go to state 35
    LOOKUP                shift, and go to state 36
    ALIAS                 shift, and go to state 37
    UNALIAS               shift, and go to state 38
    META                  shift, and go to state 39
    POS                   shift, and go to state 40
    INTCONST              shift, and go to state 41
    TRANS                 shift, and go to state 42
    FLAGBIT               shift, and go to state 43
    CONCEPT               shift, and go to state 44
    HASH_ARRAY            shift, and go to state 45
    CONCEPT_NOFAIL        shift, and go to state 46
    MODIFY                shift, and go to state 47
    WHEN                  shift, and go to state 48
    SET                   shift, and go to state 49
    SET_NOFAIL            shift, and go to state 50
    WRITE                 shift, and go to state 51
    APPEND                shift, and go to state 52
    PRINT                 shift, and go to state 53
    EXPORT                shift, and go to state 54
    REMOVE                shift, and go to state 55
    RENAME                shift, and go to state 56
    PAD                   shift, and go to state 58
    SECTION_PADDING       shift, and go to state 59
    MESSAGE               shift, and go to state 60
    MESSAGE_COPY          shift, and go to state 61
    PADTO                 shift, and go to state 62
    PADTOEVEN             shift, and go to state 63
    PADTOMULTIPLE         shift, and go to state 64
    G1_HALF_BYTE          shift, and go to state 65
    G1_MESSAGE_LENGTH     shift, and go to state 66
    G1_SECTION4_LENGTH    shift, and go to state 67
    SECTION_LENGTH        shift, and go to state 68
    FLAG                  shift, and go to state 69
    ITERATOR              shift, and go to state 70
    NEAREST               shift, and go to state 71
    BOX                   shift, and go to state 72
    KSEC                  shift, and go to state 73
    ASSERT                shift, and go to state 74
    SWITCH                shift, and go to state 75
    IDENT                 shift, and go to state 216
    FLOAT                 shift, and go to state 217
    '}'                   shift, and go to state 859

    instructions      go to state 860
    instruction       go to state 83
    simple            go to state 84
    if_block          go to state 85
    when_block        go to state 86
    list_block        go to state 87
    while_block       go to state 88
    trigger_block     go to state 89
    concept_block     go to state 90
    hash_array_block  go to state 93
    switch_block      go to state 94


State 825

  173 list_block: IDENT LIST '(' expression ')' '{' instructions '}' â¢

    $default  reduce using rule 173 (list_block)


State 826

   60 simple: IDENT '=' DICTIONARY '(' argument_list ')' default flags â¢

    $default  reduce using rule 60 (simple)


State 827

   61 simple: IDENT '=' GETENV '(' argument_list ')' default flags â¢

    $default  reduce using rule 61 (simple)


State 828

  214 concept_condition: IDENT '=' '[' integer_array ']' â¢ ';'

    ';'  shift, and go to state 861


State 829

  141 if_block: IF '(' expression ')' '{' instructions '}' ELSE '{' â¢ instructions '}'

    IF                    shift, and go to state 215
    IF_TRANSIENT          shift, and go to state 3
    CLOSE                 shift, and go to state 4
    UNSIGNED              shift, and go to state 5
    TEMPLATE              shift, and go to state 6
    TEMPLATE_NOFAIL       shift, and go to state 7
    TRIGGER               shift, and go to state 8
    ASCII                 shift, and go to state 9
    GROUP                 shift, and go to state 10
    NON_ALPHA             shift, and go to state 11
    KSEC1EXPVER           shift, and go to state 12
    LABEL                 shift, and go to state 13
    WHILE                 shift, and go to state 14
    IBMFLOAT              shift, and go to state 15
    SIGNED                shift, and go to state 16
    UINT8                 shift, and go to state 17
    INT8                  shift, and go to state 18
    UINT16                shift, and go to state 19
    INT16                 shift, and go to state 20
    UINT16_LITTLE_ENDIAN  shift, and go to state 21
    INT16_LITTLE_ENDIAN   shift, and go to state 22
    UINT32                shift, and go to state 23
    INT32                 shift, and go to state 24
    UINT32_LITTLE_ENDIAN  shift, and go to state 25
    INT32_LITTLE_ENDIAN   shift, and go to state 26
    UINT64                shift, and go to state 27
    INT64                 shift, and go to state 28
    UINT64_LITTLE_ENDIAN  shift, and go to state 29
    INT64_LITTLE_ENDIAN   shift, and go to state 30
    BLOB                  shift, and go to state 31
    BYTE                  shift, and go to state 32
    CODETABLE             shift, and go to state 33
    SMART_TABLE           shift, and go to state 34
    COMPLEX_CODETABLE     shift, and go to state 35
    LOOKUP                shift, and go to state 36
    ALIAS                 shift, and go to state 37
    UNALIAS               shift, and go to state 38
    META                  shift, and go to state 39
    POS                   shift, and go to state 40
    INTCONST              shift, and go to state 41
    TRANS                 shift, and go to state 42
    FLAGBIT               shift, and go to state 43
    CONCEPT               shift, and go to state 44
    HASH_ARRAY            shift, and go to state 45
    CONCEPT_NOFAIL        shift, and go to state 46
    MODIFY                shift, and go to state 47
    WHEN                  shift, and go to state 48
    SET                   shift, and go to state 49
    SET_NOFAIL            shift, and go to state 50
    WRITE                 shift, and go to state 51
    APPEND                shift, and go to state 52
    PRINT                 shift, and go to state 53
    EXPORT                shift, and go to state 54
    REMOVE                shift, and go to state 55
    RENAME                shift, and go to state 56
    PAD                   shift, and go to state 58
    SECTION_PADDING       shift, and go to state 59
    MESSAGE               shift, and go to state 60
    MESSAGE_COPY          shift, and go to state 61
    PADTO                 shift, and go to state 62
    PADTOEVEN             shift, and go to state 63
    PADTOMULTIPLE         shift, and go to state 64
    G1_HALF_BYTE          shift, and go to state 65
    G1_MESSAGE_LENGTH     shift, and go to state 66
    G1_SECTION4_LENGTH    shift, and go to state 67
    SECTION_LENGTH        shift, and go to state 68
    FLAG                  shift, and go to state 69
    ITERATOR              shift, and go to state 70
    NEAREST               shift, and go to state 71
    BOX                   shift, and go to state 72
    KSEC                  shift, and go to state 73
    ASSERT                shift, and go to state 74
    SWITCH                shift, and go to state 75
    IDENT                 shift, and go to state 216
    FLOAT                 shift, and go to state 217

    instructions      go to state 862
    instruction       go to state 83
    simple            go to state 84
    if_block          go to state 85
    when_block        go to state 86
    list_block        go to state 87
    while_block       go to state 88
    trigger_block     go to state 89
    concept_block     go to state 90
    hash_array_block  go to state 93
    switch_block      go to state 94


State 830

  143 if_block: IF_TRANSIENT '(' expression ')' '{' instructions '}' ELSE '{' â¢ instructions '}'

    IF                    shift, and go to state 215
    IF_TRANSIENT          shift, and go to state 3
    CLOSE                 shift, and go to state 4
    UNSIGNED              shift, and go to state 5
    TEMPLATE              shift, and go to state 6
    TEMPLATE_NOFAIL       shift, and go to state 7
    TRIGGER               shift, and go to state 8
    ASCII                 shift, and go to state 9
    GROUP                 shift, and go to state 10
    NON_ALPHA             shift, and go to state 11
    KSEC1EXPVER           shift, and go to state 12
    LABEL                 shift, and go to state 13
    WHILE                 shift, and go to state 14
    IBMFLOAT              shift, and go to state 15
    SIGNED                shift, and go to state 16
    UINT8                 shift, and go to state 17
    INT8                  shift, and go to state 18
    UINT16                shift, and go to state 19
    INT16                 shift, and go to state 20
    UINT16_LITTLE_ENDIAN  shift, and go to state 21
    INT16_LITTLE_ENDIAN   shift, and go to state 22
    UINT32                shift, and go to state 23
    INT32                 shift, and go to state 24
    UINT32_LITTLE_ENDIAN  shift, and go to state 25
    INT32_LITTLE_ENDIAN   shift, and go to state 26
    UINT64                shift, and go to state 27
    INT64                 shift, and go to state 28
    UINT64_LITTLE_ENDIAN  shift, and go to state 29
    INT64_LITTLE_ENDIAN   shift, and go to state 30
    BLOB                  shift, and go to state 31
    BYTE                  shift, and go to state 32
    CODETABLE             shift, and go to state 33
    SMART_TABLE           shift, and go to state 34
    COMPLEX_CODETABLE     shift, and go to state 35
    LOOKUP                shift, and go to state 36
    ALIAS                 shift, and go to state 37
    UNALIAS               shift, and go to state 38
    META                  shift, and go to state 39
    POS                   shift, and go to state 40
    INTCONST              shift, and go to state 41
    TRANS                 shift, and go to state 42
    FLAGBIT               shift, and go to state 43
    CONCEPT               shift, and go to state 44
    HASH_ARRAY            shift, and go to state 45
    CONCEPT_NOFAIL        shift, and go to state 46
    MODIFY                shift, and go to state 47
    WHEN                  shift, and go to state 48
    SET                   shift, and go to state 49
    SET_NOFAIL            shift, and go to state 50
    WRITE                 shift, and go to state 51
    APPEND                shift, and go to state 52
    PRINT                 shift, and go to state 53
    EXPORT                shift, and go to state 54
    REMOVE                shift, and go to state 55
    RENAME                shift, and go to state 56
    PAD                   shift, and go to state 58
    SECTION_PADDING       shift, and go to state 59
    MESSAGE               shift, and go to state 60
    MESSAGE_COPY          shift, and go to state 61
    PADTO                 shift, and go to state 62
    PADTOEVEN             shift, and go to state 63
    PADTOMULTIPLE         shift, and go to state 64
    G1_HALF_BYTE          shift, and go to state 65
    G1_MESSAGE_LENGTH     shift, and go to state 66
    G1_SECTION4_LENGTH    shift, and go to state 67
    SECTION_LENGTH        shift, and go to state 68
    FLAG                  shift, and go to state 69
    ITERATOR              shift, and go to state 70
    NEAREST               shift, and go to state 71
    BOX                   shift, and go to state 72
    KSEC                  shift, and go to state 73
    ASSERT                shift, and go to state 74
    SWITCH                shift, and go to state 75
    IDENT                 shift, and go to state 216
    FLOAT                 shift, and go to state 217

    instructions      go to state 863
    instruction       go to state 83
    simple            go to state 84
    if_block          go to state 85
    when_block        go to state 86
    list_block        go to state 87
    while_block       go to state 88
    trigger_block     go to state 89
    concept_block     go to state 90
    hash_array_block  go to state 93
    switch_block      go to state 94


State 831

   37 simple: UNSIGNED '[' INTEGER ']' IDENT '[' argument_list ']' default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 864


State 832

   39 simple: UNSIGNED '(' INTEGER ')' IDENT '[' argument_list ']' default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 865


State 833

   52 simple: SIGNED '[' INTEGER ']' IDENT '[' argument_list ']' default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 866


State 834

   54 simple: SIGNED '(' INTEGER ')' IDENT '[' argument_list ']' default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 867


State 835

   49 simple: BYTE '[' INTEGER ']' IDENT '[' argument_list ']' default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 868


State 836

   58 simple: CODETABLE '[' INTEGER ']' IDENT '(' argument_list ')' default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 869


State 837

   57 simple: CODETABLE '[' INTEGER ']' IDENT argument default SET '(' â¢ IDENT ')' flags

    IDENT  shift, and go to state 870


State 838

   63 simple: COMPLEX_CODETABLE '[' INTEGER ']' IDENT '(' argument_list ')' default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 871


State 839

   65 simple: LOOKUP '[' INTEGER ']' IDENT '(' argument_list ')' flags â¢

    $default  reduce using rule 65 (simple)


State 840

  113 simple: META IDENT '.' IDENT IDENT '(' argument_list ')' default â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 872


State 841

  179 concept_block: CONCEPT IDENT '(' IDENT ',' IDENT ',' IDENT ',' â¢ IDENT ')' flags

    IDENT  shift, and go to state 873


State 842

  178 concept_block: CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT ',' â¢ IDENT ')' flags
  180              | CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT ',' â¢ IDENT ',' IDENT ')' flags

    IDENT  shift, and go to state 874


State 843

  181 concept_block: CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT ')' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 875


State 844

  177 concept_block: CONCEPT IDENT '(' IDENT ')' '{' concept_list '}' flags â¢

    $default  reduce using rule 177 (concept_block)


State 845

  183 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ',' IDENT ',' â¢ IDENT ',' IDENT ')' flags

    IDENT  shift, and go to state 876


State 846

  182 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ',' STRING ',' â¢ IDENT ',' IDENT ')' flags
  184              | CONCEPT IDENT '.' IDENT '(' IDENT ',' STRING ',' â¢ IDENT ')' flags

    IDENT  shift, and go to state 877


State 847

  186 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ')' '{' concept_list â¢ '}' flags
  196 concept_list: concept_list â¢ concept_value

    IDENT    shift, and go to state 221
    STRING   shift, and go to state 222
    INTEGER  shift, and go to state 78
    FLOAT    shift, and go to state 223
    '}'      shift, and go to state 878

    concept_value  go to state 224


State 848

  200 hash_array_block: HASH_ARRAY IDENT '(' IDENT ',' STRING ',' IDENT ',' â¢ IDENT ')' flags

    IDENT  shift, and go to state 879


State 849

  189 concept_block: CONCEPT_NOFAIL IDENT '(' IDENT ',' STRING ',' IDENT ',' â¢ IDENT ')' flags

    IDENT  shift, and go to state 880


State 850

  190 concept_block: CONCEPT_NOFAIL IDENT '(' IDENT ',' STRING ',' IDENT ')' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 881


State 851

  188 concept_block: CONCEPT_NOFAIL IDENT '(' IDENT ')' '{' concept_list '}' flags â¢

    $default  reduce using rule 188 (concept_block)


State 852

  191 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ',' STRING ',' â¢ IDENT ',' IDENT ')' flags
  192              | CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ',' STRING ',' â¢ IDENT ')' flags

    IDENT  shift, and go to state 882


State 853

  194 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ')' '{' concept_list â¢ '}' flags
  196 concept_list: concept_list â¢ concept_value

    IDENT    shift, and go to state 221
    STRING   shift, and go to state 222
    INTEGER  shift, and go to state 78
    FLOAT    shift, and go to state 223
    '}'      shift, and go to state 883

    concept_value  go to state 224


State 854

  146 when_block: WHEN '(' expression ')' '{' set_list '}' ELSE '{' â¢ set_list '}'

    SET         shift, and go to state 565
    SET_NOFAIL  shift, and go to state 566

    set       go to state 671
    set_list  go to state 884


State 855

  242 factor: IS_INTEGER '(' IDENT ',' INTEGER ',' INTEGER ')' â¢

    $default  reduce using rule 242 (factor)


State 856

  217 string_or_ident: SUBSTR '(' IDENT ',' INTEGER ',' INTEGER ')' â¢

    $default  reduce using rule 217 (string_or_ident)


State 857

  219 string_or_ident: SUBSTR '(' STRING ',' INTEGER ',' INTEGER ')' â¢

    $default  reduce using rule 219 (string_or_ident)


State 858

  203 case_value: CASE arguments ':' instructions â¢

    $default  reduce using rule 203 (case_value)


State 859

  205 switch_block: SWITCH '(' argument_list ')' '{' case_list DEFAULT ':' '}' â¢

    $default  reduce using rule 205 (switch_block)


State 860

  204 switch_block: SWITCH '(' argument_list ')' '{' case_list DEFAULT ':' instructions â¢ '}'

    '}'  shift, and go to state 885


State 861

  214 concept_condition: IDENT '=' '[' integer_array ']' ';' â¢

    $default  reduce using rule 214 (concept_condition)


State 862

  141 if_block: IF '(' expression ')' '{' instructions '}' ELSE '{' instructions â¢ '}'

    '}'  shift, and go to state 886


State 863

  143 if_block: IF_TRANSIENT '(' expression ')' '{' instructions '}' ELSE '{' instructions â¢ '}'

    '}'  shift, and go to state 887


State 864

   37 simple: UNSIGNED '[' INTEGER ']' IDENT '[' argument_list ']' default flags â¢

    $default  reduce using rule 37 (simple)


State 865

   39 simple: UNSIGNED '(' INTEGER ')' IDENT '[' argument_list ']' default flags â¢

    $default  reduce using rule 39 (simple)


State 866

   52 simple: SIGNED '[' INTEGER ']' IDENT '[' argument_list ']' default flags â¢

    $default  reduce using rule 52 (simple)


State 867

   54 simple: SIGNED '(' INTEGER ')' IDENT '[' argument_list ']' default flags â¢

    $default  reduce using rule 54 (simple)


State 868

   49 simple: BYTE '[' INTEGER ']' IDENT '[' argument_list ']' default flags â¢

    $default  reduce using rule 49 (simple)


State 869

   58 simple: CODETABLE '[' INTEGER ']' IDENT '(' argument_list ')' default flags â¢

    $default  reduce using rule 58 (simple)


State 870

   57 simple: CODETABLE '[' INTEGER ']' IDENT argument default SET '(' IDENT â¢ ')' flags

    ')'  shift, and go to state 888


State 871

   63 simple: COMPLEX_CODETABLE '[' INTEGER ']' IDENT '(' argument_list ')' default flags â¢

    $default  reduce using rule 63 (simple)


State 872

  113 simple: META IDENT '.' IDENT IDENT '(' argument_list ')' default flags â¢

    $default  reduce using rule 113 (simple)


State 873

  179 concept_block: CONCEPT IDENT '(' IDENT ',' IDENT ',' IDENT ',' IDENT â¢ ')' flags

    ')'  shift, and go to state 889


State 874

  178 concept_block: CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT â¢ ')' flags
  180              | CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT â¢ ',' IDENT ')' flags

    ','  shift, and go to state 890
    ')'  shift, and go to state 891


State 875

  181 concept_block: CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT ')' flags â¢

    $default  reduce using rule 181 (concept_block)


State 876

  183 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ',' IDENT ',' IDENT â¢ ',' IDENT ')' flags

    ','  shift, and go to state 892


State 877

  182 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT â¢ ',' IDENT ')' flags
  184              | CONCEPT IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT â¢ ')' flags

    ','  shift, and go to state 893
    ')'  shift, and go to state 894


State 878

  186 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ')' '{' concept_list '}' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 895


State 879

  200 hash_array_block: HASH_ARRAY IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT â¢ ')' flags

    ')'  shift, and go to state 896


State 880

  189 concept_block: CONCEPT_NOFAIL IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT â¢ ')' flags

    ')'  shift, and go to state 897


State 881

  190 concept_block: CONCEPT_NOFAIL IDENT '(' IDENT ',' STRING ',' IDENT ')' flags â¢

    $default  reduce using rule 190 (concept_block)


State 882

  191 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT â¢ ',' IDENT ')' flags
  192              | CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT â¢ ')' flags

    ','  shift, and go to state 898
    ')'  shift, and go to state 899


State 883

  194 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ')' '{' concept_list '}' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 900


State 884

  146 when_block: WHEN '(' expression ')' '{' set_list '}' ELSE '{' set_list â¢ '}'
  150 set_list: set_list â¢ set semi

    SET         shift, and go to state 565
    SET_NOFAIL  shift, and go to state 566
    '}'         shift, and go to state 901

    set  go to state 759


State 885

  204 switch_block: SWITCH '(' argument_list ')' '{' case_list DEFAULT ':' instructions '}' â¢

    $default  reduce using rule 204 (switch_block)


State 886

  141 if_block: IF '(' expression ')' '{' instructions '}' ELSE '{' instructions '}' â¢

    $default  reduce using rule 141 (if_block)


State 887

  143 if_block: IF_TRANSIENT '(' expression ')' '{' instructions '}' ELSE '{' instructions '}' â¢

    $default  reduce using rule 143 (if_block)


State 888

   57 simple: CODETABLE '[' INTEGER ']' IDENT argument default SET '(' IDENT ')' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 902


State 889

  179 concept_block: CONCEPT IDENT '(' IDENT ',' IDENT ',' IDENT ',' IDENT ')' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 903


State 890

  180 concept_block: CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ',' â¢ IDENT ')' flags

    IDENT  shift, and go to state 904


State 891

  178 concept_block: CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 905


State 892

  183 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ',' IDENT ',' IDENT ',' â¢ IDENT ')' flags

    IDENT  shift, and go to state 906


State 893

  182 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ',' â¢ IDENT ')' flags

    IDENT  shift, and go to state 907


State 894

  184 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ')' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 908


State 895

  186 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ')' '{' concept_list '}' flags â¢

    $default  reduce using rule 186 (concept_block)


State 896

  200 hash_array_block: HASH_ARRAY IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 909


State 897

  189 concept_block: CONCEPT_NOFAIL IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 910


State 898

  191 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ',' â¢ IDENT ')' flags

    IDENT  shift, and go to state 911


State 899

  192 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ')' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 912


State 900

  194 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ')' '{' concept_list '}' flags â¢

    $default  reduce using rule 194 (concept_block)


State 901

  146 when_block: WHEN '(' expression ')' '{' set_list '}' ELSE '{' set_list '}' â¢

    $default  reduce using rule 146 (when_block)


State 902

   57 simple: CODETABLE '[' INTEGER ']' IDENT argument default SET '(' IDENT ')' flags â¢

    $default  reduce using rule 57 (simple)


State 903

  179 concept_block: CONCEPT IDENT '(' IDENT ',' IDENT ',' IDENT ',' IDENT ')' flags â¢

    $default  reduce using rule 179 (concept_block)


State 904

  180 concept_block: CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ',' IDENT â¢ ')' flags

    ')'  shift, and go to state 913


State 905

  178 concept_block: CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags â¢

    $default  reduce using rule 178 (concept_block)


State 906

  183 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ',' IDENT ',' IDENT ',' IDENT â¢ ')' flags

    ')'  shift, and go to state 914


State 907

  182 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT â¢ ')' flags

    ')'  shift, and go to state 915


State 908

  184 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ')' flags â¢

    $default  reduce using rule 184 (concept_block)


State 909

  200 hash_array_block: HASH_ARRAY IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags â¢

    $default  reduce using rule 200 (hash_array_block)


State 910

  189 concept_block: CONCEPT_NOFAIL IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags â¢

    $default  reduce using rule 189 (concept_block)


State 911

  191 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT â¢ ')' flags

    ')'  shift, and go to state 916


State 912

  192 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ')' flags â¢

    $default  reduce using rule 192 (concept_block)


State 913

  180 concept_block: CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ',' IDENT ')' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 917


State 914

  183 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ',' IDENT ',' IDENT ',' IDENT ')' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 918


State 915

  182 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 919


State 916

  191 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' â¢ flags

    ':'  shift, and go to state 289

    $default  reduce using rule 7 (empty)

    empty  go to state 290
    flags  go to state 920


State 917

  180 concept_block: CONCEPT IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ',' IDENT ')' flags â¢

    $default  reduce using rule 180 (concept_block)


State 918

  183 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ',' IDENT ',' IDENT ',' IDENT ')' flags â¢

    $default  reduce using rule 183 (concept_block)


State 919

  182 concept_block: CONCEPT IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags â¢

    $default  reduce using rule 182 (concept_block)


State 920

  191 concept_block: CONCEPT_NOFAIL IDENT '.' IDENT '(' IDENT ',' STRING ',' IDENT ',' IDENT ')' flags â¢

    $default  reduce using rule 191 (concept_block)
