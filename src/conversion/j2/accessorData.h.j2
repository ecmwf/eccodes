/*
 * (C) Copyright 2005- ECMWF.
 *
 * This software is licensed under the terms of the Apache Licence Version 2.0
 * which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
 *
 * In applying this licence, ECMWF does not waive the privileges and immunities granted to it by
 * virtue of its status as an intergovernmental organisation nor does it submit to any jurisdiction.
 */

#pragma once

{% for i in c.header_includes -%}
#include "{{ i }}"
{%- endfor %}

namespace {{ c.nested_namespaces }} {

// Forward declarations
{%- for f in c.forward_declarations %}
{{ f }}
{%- endfor %}

class {{ c.name }} : public {{ c.super }} {
public:
    {{ c.name }}({{c.constructor.arg_string}});
    ~{{ c.name }}() = default;

protected:
    // Inherited functions
    {%- for u in c.inherited_method_using_list %}
    using AccessorData::{{u}};{% endfor %}
    {%- for m in c.inherited_methods %}
    {{ m.return_type }} {{ m.name }}({{ m.arg_string }}) {{ m.const }} override;{% endfor %}

    // Members
    {% for m in c.members %} {{ m.as_declaration() }}{{ m.default_value }};
    {%- endfor %}

private:
    // Private methods
    {%- for m in c.private_methods %}
    {{ m.return_type }} {{ m.name }}({{ m.arg_string }}) const;{% endfor %}
    };

} // namespace {{ c.nested_namespaces }}
