#include "ga_impl_creators.h"
#include "ga_impl_creator_targets.h"

#include <unordered_map>

namespace eccodes {  

   using namespace std::string_view_literals;

   template<typename GA_TYPE>
   std::enable_if_t<std::is_base_of_v<grib_accessor_impl_gen, GA_TYPE>, grib_accessor_impl_gen*>
   create_ga_impl(grib_section* p, grib_action* creator)
   {
      return new GA_TYPE(p, creator);
   }

   // Creator targets - uncomment to include in the factory
   //
   // Note: 1. This list derived from grib_accessor_classes_hash.cc:classes[]
   //       2. Keep in sync with ga_impl_creator_targets.h
   //
   static const std::unordered_map<std::string_view, ga_impl_creator> ga_impl_creators = {
      //{"abstract_long_vector"sv, create_ga_impl<grib_accessor_impl_abstract_long_vector>},
      //{"abstract_vector"sv, create_ga_impl<grib_accessor_impl_abstract_vector>},
      //{"apply_operators"sv, create_ga_impl<grib_accessor_impl_apply_operators>},
      //{"array"sv, create_ga_impl<grib_accessor_impl_array>},
      //{"ascii"sv, create_ga_impl<grib_accessor_impl_ascii>},
      //{"assert"sv, create_ga_impl<grib_accessor_impl_assert>},
      //{"bit"sv, create_ga_impl<grib_accessor_impl_bit>},
      //{"bitmap"sv, create_ga_impl<grib_accessor_impl_bitmap>},
      //{"bits"sv, create_ga_impl<grib_accessor_impl_bits>},
      //{"bits_per_value"sv, create_ga_impl<grib_accessor_impl_bits_per_value>},
      //{"blob"sv, create_ga_impl<grib_accessor_impl_blob>},
      //{"box"sv, create_ga_impl<grib_accessor_impl_box>},
      //{"budgdate"sv, create_ga_impl<grib_accessor_impl_budgdate>},
      //{"bufr_data_array"sv, create_ga_impl<grib_accessor_impl_bufr_data_array>},
      //{"bufr_data_element"sv, create_ga_impl<grib_accessor_impl_bufr_data_element>},
      //{"bufr_elements_table"sv, create_ga_impl<grib_accessor_impl_bufr_elements_table>},
      //{"bufr_extract_area_subsets"sv, create_ga_impl<grib_accessor_impl_bufr_extract_area_subsets>},
      //{"bufr_extract_datetime_subsets"sv, create_ga_impl<grib_accessor_impl_bufr_extract_datetime_subsets>},
      //{"bufr_extract_subsets"sv, create_ga_impl<grib_accessor_impl_bufr_extract_subsets>},
      //{"bufr_group"sv, create_ga_impl<grib_accessor_impl_bufr_group>},
      //{"bufr_simple_thinning"sv, create_ga_impl<grib_accessor_impl_bufr_simple_thinning>},
      //{"bufr_string_values"sv, create_ga_impl<grib_accessor_impl_bufr_string_values>},
      //{"bufrdc_expanded_descriptors"sv, create_ga_impl<grib_accessor_impl_bufrdc_expanded_descriptors>},
      //{"bytes"sv, create_ga_impl<grib_accessor_impl_bytes>},
      //{"change_alternative_row_scanning"sv, create_ga_impl<grib_accessor_impl_change_alternative_row_scanning>},
      //{"change_scanning_direction"sv, create_ga_impl<grib_accessor_impl_change_scanning_direction>},
      //{"check_internal_version"sv, create_ga_impl<grib_accessor_impl_check_internal_version>},
      //{"closest_date"sv, create_ga_impl<grib_accessor_impl_closest_date>},
      //{"codeflag"sv, create_ga_impl<grib_accessor_impl_codeflag>},
      //{"codetable"sv, create_ga_impl<grib_accessor_impl_codetable>},
      //{"codetable_title"sv, create_ga_impl<grib_accessor_impl_codetable_title>},
      //{"codetable_units"sv, create_ga_impl<grib_accessor_impl_codetable_units>},
      //{"concept"sv, create_ga_impl<grib_accessor_impl_concept>},
      //{"constant"sv, create_ga_impl<grib_accessor_impl_constant>},
      //{"count_file"sv, create_ga_impl<grib_accessor_impl_count_file>},
      //{"count_missing"sv, create_ga_impl<grib_accessor_impl_count_missing>},
      //{"count_total"sv, create_ga_impl<grib_accessor_impl_count_total>},
      //{"data_2order_packing"sv, create_ga_impl<grib_accessor_impl_data_2order_packing>},
      //{"data_apply_bitmap"sv, create_ga_impl<grib_accessor_impl_data_apply_bitmap>},
      //{"data_apply_boustrophedonic"sv, create_ga_impl<grib_accessor_impl_data_apply_boustrophedonic>},
      //{"data_apply_boustrophedonic_bitmap"sv, create_ga_impl<grib_accessor_impl_data_apply_boustrophedonic_bitmap>},
      //{"data_apply_gdsnotpresent"sv, create_ga_impl<grib_accessor_impl_data_apply_gdsnotpresent>},
      //{"data_ccsds_packing"sv, create_ga_impl<grib_accessor_impl_data_ccsds_packing>},
      //{"data_complex_packing"sv, create_ga_impl<grib_accessor_impl_data_complex_packing>},
      //{"data_dummy_field"sv, create_ga_impl<grib_accessor_impl_data_dummy_field>},
      //{"data_g1complex_packing"sv, create_ga_impl<grib_accessor_impl_data_g1complex_packing>},
      //{"data_g1second_order_constant_width_packing"sv, create_ga_impl<grib_accessor_impl_data_g1second_order_constant_width_packing>},
      //{"data_g1second_order_general_extended_packing"sv, create_ga_impl<grib_accessor_impl_data_g1second_order_general_extended_packing>},
      //{"data_g1second_order_general_packing"sv, create_ga_impl<grib_accessor_impl_data_g1second_order_general_packing>},
      //{"data_g1second_order_row_by_row_packing"sv, create_ga_impl<grib_accessor_impl_data_g1second_order_row_by_row_packing>},
      //{"data_g1secondary_bitmap"sv, create_ga_impl<grib_accessor_impl_data_g1secondary_bitmap>},
      //{"data_g1shsimple_packing"sv, create_ga_impl<grib_accessor_impl_data_g1shsimple_packing>},
      //{"data_g1simple_packing"sv, create_ga_impl<grib_accessor_impl_data_g1simple_packing>},
      //{"data_g22order_packing"sv, create_ga_impl<grib_accessor_impl_data_g22order_packing>},
      //{"data_g2bifourier_packing"sv, create_ga_impl<grib_accessor_impl_data_g2bifourier_packing>},
      //{"data_g2complex_packing"sv, create_ga_impl<grib_accessor_impl_data_g2complex_packing>},
      //{"data_g2secondary_bitmap"sv, create_ga_impl<grib_accessor_impl_data_g2secondary_bitmap>},
      //{"data_g2shsimple_packing"sv, create_ga_impl<grib_accessor_impl_data_g2shsimple_packing>},
      //{"data_g2simple_packing"sv, create_ga_impl<grib_accessor_impl_data_g2simple_packing>},
      //{"data_g2simple_packing_with_preprocessing"sv, create_ga_impl<grib_accessor_impl_data_g2simple_packing_with_preprocessing>},
      //{"data_jpeg2000_packing"sv, create_ga_impl<grib_accessor_impl_data_jpeg2000_packing>},
      //{"data_png_packing"sv, create_ga_impl<grib_accessor_impl_data_png_packing>},
      //{"data_raw_packing"sv, create_ga_impl<grib_accessor_impl_data_raw_packing>},
      //{"data_run_length_packing"sv, create_ga_impl<grib_accessor_impl_data_run_length_packing>},
      //{"data_secondary_bitmap"sv, create_ga_impl<grib_accessor_impl_data_secondary_bitmap>},
      //{"data_sh_packed"sv, create_ga_impl<grib_accessor_impl_data_sh_packed>},
      //{"data_sh_unpacked"sv, create_ga_impl<grib_accessor_impl_data_sh_unpacked>},
      //{"data_shsimple_packing"sv, create_ga_impl<grib_accessor_impl_data_shsimple_packing>},
      //{"data_simple_packing"sv, create_ga_impl<grib_accessor_impl_data_simple_packing>},
      //{"decimal_precision"sv, create_ga_impl<grib_accessor_impl_decimal_precision>},
      //{"dictionary"sv, create_ga_impl<grib_accessor_impl_dictionary>},
      //{"dirty"sv, create_ga_impl<grib_accessor_impl_dirty>},
      //{"divdouble"sv, create_ga_impl<grib_accessor_impl_divdouble>},
      //{"double"sv, create_ga_impl<grib_accessor_impl_double>},
      //{"element"sv, create_ga_impl<grib_accessor_impl_element>},
      //{"evaluate"sv, create_ga_impl<grib_accessor_impl_evaluate>},
      //{"expanded_descriptors"sv, create_ga_impl<grib_accessor_impl_expanded_descriptors>},
      //{"forward"sv, create_ga_impl<grib_accessor_impl_forward>},
      //{"from_scale_factor_scaled_value"sv, create_ga_impl<grib_accessor_impl_from_scale_factor_scaled_value>},
      //{"g1_half_byte_codeflag"sv, create_ga_impl<grib_accessor_impl_g1_half_byte_codeflag>},
      //{"g1_message_length"sv, create_ga_impl<grib_accessor_impl_g1_message_length>},
      //{"g1_section4_length"sv, create_ga_impl<grib_accessor_impl_g1_section4_length>},
      //{"g1area"sv, create_ga_impl<grib_accessor_impl_g1area>},
      //{"g1bitmap"sv, create_ga_impl<grib_accessor_impl_g1bitmap>},
      //{"g1date"sv, create_ga_impl<grib_accessor_impl_g1date>},
      //{"g1day_of_the_year_date"sv, create_ga_impl<grib_accessor_impl_g1day_of_the_year_date>},
      //{"g1end_of_interval_monthly"sv, create_ga_impl<grib_accessor_impl_g1end_of_interval_monthly>},
      //{"g1fcperiod"sv, create_ga_impl<grib_accessor_impl_g1fcperiod>},
      //{"g1forecastmonth"sv, create_ga_impl<grib_accessor_impl_g1forecastmonth>}
      //{"g1monthlydate"sv, create_ga_impl<grib_accessor_impl_g1monthlydate>},
      //{"g1number_of_coded_values_sh_complex"sv, create_ga_impl<grib_accessor_impl_g1number_of_coded_values_sh_complex>},
      //{"g1number_of_coded_values_sh_simple"sv, create_ga_impl<grib_accessor_impl_g1number_of_coded_values_sh_simple>},
      //{"g1step_range"sv, create_ga_impl<grib_accessor_impl_g1step_range>},
      //{"g2_aerosol"sv, create_ga_impl<grib_accessor_impl_g2_aerosol>},
      //{"g2_chemical"sv, create_ga_impl<grib_accessor_impl_g2_chemical>},
      //{"g2_eps"sv, create_ga_impl<grib_accessor_impl_g2_eps>},
      //{"g2_mars_labeling"sv, create_ga_impl<grib_accessor_impl_g2_mars_labeling>},
      //{"g2bitmap"sv, create_ga_impl<grib_accessor_impl_g2bitmap>},
      //{"g2bitmap_present"sv, create_ga_impl<grib_accessor_impl_g2bitmap_present>},
      //{"g2date"sv, create_ga_impl<grib_accessor_impl_g2date>},
      //{"g2end_step"sv, create_ga_impl<grib_accessor_impl_g2end_step>},
      //{"g2grid"sv, create_ga_impl<grib_accessor_impl_g2grid>},
      //{"g2latlon"sv, create_ga_impl<grib_accessor_impl_g2latlon>},
      //{"g2level"sv, create_ga_impl<grib_accessor_impl_g2level>},
      //{"g2lon"sv, create_ga_impl<grib_accessor_impl_g2lon>},
      //{"g2step_range"sv, create_ga_impl<grib_accessor_impl_g2step_range>},
      //{"gaussian_grid_name"sv, create_ga_impl<grib_accessor_impl_gaussian_grid_name>},
      //{"gds_is_present"sv, create_ga_impl<grib_accessor_impl_gds_is_present>},
      //{"gds_not_present_bitmap"sv, create_ga_impl<grib_accessor_impl_gds_not_present_bitmap>},
      //{"gen"sv, create_ga_impl<grib_accessor_impl_gen>},
      //{"getenv"sv, create_ga_impl<grib_accessor_impl_getenv>},
      //{"global_gaussian"sv, create_ga_impl<grib_accessor_impl_global_gaussian>},
      //{"group"sv, create_ga_impl<grib_accessor_impl_group>},
      //{"gts_header"sv, create_ga_impl<grib_accessor_impl_gts_header>},
      //{"hash_array"sv, create_ga_impl<grib_accessor_impl_hash_array>},
      //{"headers_only"sv, create_ga_impl<grib_accessor_impl_headers_only>},
      //{"ibmfloat"sv, create_ga_impl<grib_accessor_impl_ibmfloat>},
      //{"ieeefloat"sv, create_ga_impl<grib_accessor_impl_ieeefloat>},
      //{"ifs_param"sv, create_ga_impl<grib_accessor_impl_ifs_param>},
      //{"int16"sv, create_ga_impl<grib_accessor_impl_int16>},
      //{"int16_little_endian"sv, create_ga_impl<grib_accessor_impl_int16_little_endian>},
      //{"int32"sv, create_ga_impl<grib_accessor_impl_int32>},
      //{"int32_little_endian"sv, create_ga_impl<grib_accessor_impl_int32_little_endian>},
      //{"int64"sv, create_ga_impl<grib_accessor_impl_int64>},
      //{"int64_little_endian"sv, create_ga_impl<grib_accessor_impl_int64_little_endian>},
      //{"int8"sv, create_ga_impl<grib_accessor_impl_int8>},
      //{"iterator"sv, create_ga_impl<grib_accessor_impl_iterator>},
      //{"julian_date"sv, create_ga_impl<grib_accessor_impl_julian_date>},
      //{"julian_day"sv, create_ga_impl<grib_accessor_impl_julian_day>},
      //{"ksec1expver"sv, create_ga_impl<grib_accessor_impl_ksec1expver>},
      //{"label"sv, create_ga_impl<grib_accessor_impl_label>},
      //{"laplacian"sv, create_ga_impl<grib_accessor_impl_laplacian>},
      //{"latitudes"sv, create_ga_impl<grib_accessor_impl_latitudes>},
      //{"latlon_increment"sv, create_ga_impl<grib_accessor_impl_latlon_increment>},
      //{"latlonvalues"sv, create_ga_impl<grib_accessor_impl_latlonvalues>},
      //{"library_version"sv, create_ga_impl<grib_accessor_impl_library_version>},
      //{"local_definition"sv, create_ga_impl<grib_accessor_impl_local_definition>},
      //{"long"sv, create_ga_impl<grib_accessor_impl_long>},
      //{"long_vector"sv, create_ga_impl<grib_accessor_impl_long_vector>},
      //{"longitudes"sv, create_ga_impl<grib_accessor_impl_longitudes>},
      //{"lookup"sv, create_ga_impl<grib_accessor_impl_lookup>},
      //{"mars_param"sv, create_ga_impl<grib_accessor_impl_mars_param>},
      //{"mars_step"sv, create_ga_impl<grib_accessor_impl_mars_step>},
      //{"md5"sv, create_ga_impl<grib_accessor_impl_md5>},
      //{"message"sv, create_ga_impl<grib_accessor_impl_message>},
      //{"message_copy"sv, create_ga_impl<grib_accessor_impl_message_copy>},
      //{"missing"sv, create_ga_impl<grib_accessor_impl_missing>},
      //{"nearest"sv, create_ga_impl<grib_accessor_impl_nearest>},
      //{"non_alpha"sv, create_ga_impl<grib_accessor_impl_non_alpha>},
      //{"number_of_coded_values"sv, create_ga_impl<grib_accessor_impl_number_of_coded_values>},
      //{"number_of_points"sv, create_ga_impl<grib_accessor_impl_number_of_points>},
      //{"number_of_points_gaussian"sv, create_ga_impl<grib_accessor_impl_number_of_points_gaussian>},
      //{"number_of_values"sv, create_ga_impl<grib_accessor_impl_number_of_values>},
      //{"number_of_values_data_raw_packing"sv, create_ga_impl<grib_accessor_impl_number_of_values_data_raw_packing>},
      //{"octahedral_gaussian"sv, create_ga_impl<grib_accessor_impl_octahedral_gaussian>},
      //{"octet_number"sv, create_ga_impl<grib_accessor_impl_octet_number>},
      //{"offset_file"sv, create_ga_impl<grib_accessor_impl_offset_file>},
      //{"offset_values"sv, create_ga_impl<grib_accessor_impl_offset_values>},
      //{"pack_bufr_values"sv, create_ga_impl<grib_accessor_impl_pack_bufr_values>},
      //{"pad"sv, create_ga_impl<grib_accessor_impl_pad>},
      //{"padding"sv, create_ga_impl<grib_accessor_impl_padding>},
      //{"padto"sv, create_ga_impl<grib_accessor_impl_padto>},
      //{"padtoeven"sv, create_ga_impl<grib_accessor_impl_padtoeven>},
      //{"padtomultiple"sv, create_ga_impl<grib_accessor_impl_padtomultiple>},
      //{"position"sv, create_ga_impl<grib_accessor_impl_position>},
      {"proj_string"sv, create_ga_impl<grib_accessor_impl_proj_string>},
      //{"raw"sv, create_ga_impl<grib_accessor_impl_raw>},
      //{"rdbtime_guess_date"sv, create_ga_impl<grib_accessor_impl_rdbtime_guess_date>},
      //{"reference_value_error"sv, create_ga_impl<grib_accessor_impl_reference_value_error>},
      //{"round"sv, create_ga_impl<grib_accessor_impl_round>},
      //{"scale"sv, create_ga_impl<grib_accessor_impl_scale>},
      //{"scale_values"sv, create_ga_impl<grib_accessor_impl_scale_values>},
      //{"second_order_bits_per_value"sv, create_ga_impl<grib_accessor_impl_second_order_bits_per_value>},
      //{"section"sv, create_ga_impl<grib_accessor_impl_section>},
      //{"section_length"sv, create_ga_impl<grib_accessor_impl_section_length>},
      //{"section_padding"sv, create_ga_impl<grib_accessor_impl_section_padding>},
      //{"section_pointer"sv, create_ga_impl<grib_accessor_impl_section_pointer>},
      //{"select_step_template"sv, create_ga_impl<grib_accessor_impl_select_step_template>},
      //{"sexagesimal2decimal"sv, create_ga_impl<grib_accessor_impl_sexagesimal2decimal>},
      //{"signed"sv, create_ga_impl<grib_accessor_impl_signed>},
      //{"signed_bits"sv, create_ga_impl<grib_accessor_impl_signed_bits>},
      //{"simple_packing_error"sv, create_ga_impl<grib_accessor_impl_simple_packing_error>},
      //{"size"sv, create_ga_impl<grib_accessor_impl_size>},
      //{"smart_table"sv, create_ga_impl<grib_accessor_impl_smart_table>},
      //{"smart_table_column"sv, create_ga_impl<grib_accessor_impl_smart_table_column>},
      //{"spd"sv, create_ga_impl<grib_accessor_impl_spd>},
      //{"spectral_truncation"sv, create_ga_impl<grib_accessor_impl_spectral_truncation>},
      //{"sprintf"sv, create_ga_impl<grib_accessor_impl_sprintf>},
      //{"statistics"sv, create_ga_impl<grib_accessor_impl_statistics>},
      //{"statistics_spectral"sv, create_ga_impl<grib_accessor_impl_statistics_spectral>},
      //{"step_human_readable"sv, create_ga_impl<grib_accessor_impl_step_human_readable>},
      //{"step_in_units"sv, create_ga_impl<grib_accessor_impl_step_in_units>},
      //{"sum"sv, create_ga_impl<grib_accessor_impl_sum>},
      //{"suppressed"sv, create_ga_impl<grib_accessor_impl_suppressed>},
      //{"time"sv, create_ga_impl<grib_accessor_impl_time>},
      //{"times"sv, create_ga_impl<grib_accessor_impl_times>},
      //{"to_double"sv, create_ga_impl<grib_accessor_impl_to_double>},
      //{"to_integer"sv, create_ga_impl<grib_accessor_impl_to_integer>},
      //{"to_string"sv, create_ga_impl<grib_accessor_impl_to_string>},
      //{"transient"sv, create_ga_impl<grib_accessor_impl_transient>},
      //{"transient_darray"sv, create_ga_impl<grib_accessor_impl_transient_darray>},
      //{"trim"sv, create_ga_impl<grib_accessor_impl_trim>},
      //{"uint16"sv, create_ga_impl<grib_accessor_impl_uint16>},
      //{"uint16_little_endian"sv, create_ga_impl<grib_accessor_impl_uint16_little_endian>},
      //{"uint32"sv, create_ga_impl<grib_accessor_impl_uint32>},
      //{"uint32_little_endian"sv, create_ga_impl<grib_accessor_impl_uint32_little_endian>},
      //{"uint64"sv, create_ga_impl<grib_accessor_impl_uint64>},
      //{"uint64_little_endian"sv, create_ga_impl<grib_accessor_impl_uint64_little_endian>},
      //{"uint8"sv, create_ga_impl<grib_accessor_impl_uint8>},
      //{"unexpanded_descriptors"sv, create_ga_impl<grib_accessor_impl_unexpanded_descriptors>},
      //{"unpack_bufr_values"sv, create_ga_impl<grib_accessor_impl_unpack_bufr_values>},
      //{"unsigned"sv, create_ga_impl<grib_accessor_impl_unsigned>},
      //{"unsigned_bits"sv, create_ga_impl<grib_accessor_impl_unsigned_bits>},
      //{"validity_date"sv, create_ga_impl<grib_accessor_impl_validity_date>},
      //{"validity_time"sv, create_ga_impl<grib_accessor_impl_validity_time>},
      //{"values"sv, create_ga_impl<grib_accessor_impl_values>},
      //{"variable"sv, create_ga_impl<grib_accessor_impl_variable>},
      //{"vector"sv, create_ga_impl<grib_accessor_impl_vector>},
      //{"when"sv, create_ga_impl<grib_accessor_impl_when>},
   };

   ga_impl_creator get_ga_impl_creator(std::string_view name)
   {
      if(auto it = ga_impl_creators.find(name); it != ga_impl_creators.end()) 
      {
         return it->second;
      }

      return {};
   }

}


