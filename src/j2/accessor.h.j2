/*
 * (C) Copyright 2005- ECMWF.
 *
 * This software is licensed under the terms of the Apache Licence Version 2.0
 * which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
 *
 * In applying this licence, ECMWF does not waive the privileges and immunities granted to it by
 * virtue of its status as an intergovernmental organisation nor does it submit to any jurisdiction.
 */

{% for i in includes %}
#include {{ i }}
{% endfor %}


{% for n in namespaces %}namespace {{ n }} {
{% endfor %}

class {{ name }} : public {{ super }} {

protected:

    {{ name }}({{constructor.args}});
    virtual ~{{ name }}();

private:

    // Inherited methods

    {% for m in inherited_methods %}
    virtual {{ m.result }} {{ m.name }}({{ m.args }}) const override;{% endfor %}
    virtual void print(std::ostream& s) const override;

    // Private methods
    {% for m in private_methods %}
    {{ m.result }} {{ m.name }}({{ m.args }}) const;{% endfor %}


    // Members
    {% for m in members %}{{ m.type }} {{ m.name }};
    {% endfor %}



    // friends
    friend std::ostream& operator<<(std::ostream& s, const {{ name }}& p) { p.print(s); return s; }
};

{% for n in namespace_reversed %}} // namespace {{ n }}
{% endfor %}
