static void init_class      (grib_action_class*);
static void init            (grib_action* d);
static void dump            (grib_action* d, FILE*,int);
static void xref            (grib_action* d, FILE* f,const char* path);
static void destroy         (grib_context*,grib_action*);
static int create_accessor(grib_section*,grib_action*,grib_loader*);
static int notify_change(grib_action* a, grib_accessor* observer,grib_accessor* observed);
static grib_action* reparse(grib_action* a,grib_accessor* acc,int *doit);
static int execute(grib_action* a,grib_handle* h);


typedef struct grib_action_NAME {
    grib_action          act;
MEMBERS
} grib_action_NAME;

extern grib_action_class* SUPER;

static grib_action_class _grib_action_class_NAME = {
    &SUPER,                              /* super                     */
    "action_class_NAME",                              /* name                      */
    sizeof(grib_action_NAME),            /* size                      */
    0,                                   /* inited */
    &init_class,                         /* init_class */
    &init,                               /* init                      */
    &destroy,                            /* destroy */

    &dump,                               /* dump                      */
    &xref,                               /* xref                      */

    &create_accessor,             /* create_accessor*/

    &notify_change,                            /* notify_change */
    &reparse,                            /* reparse */
    &execute,                            /* execute */
};

grib_action_class* grib_action_class_NAME = &_grib_action_class_NAME;

static void init_class(grib_action_class* c)
{
INIT
}
