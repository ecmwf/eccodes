/*
 * (C) Copyright 2005- ECMWF.
 *
 * This software is licensed under the terms of the Apache Licence Version 2.0
 * which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
 *
 * In applying this licence, ECMWF does not waive the privileges and immunities granted to it by
 * virtue of its status as an intergovernmental organisation nor does it submit to any jurisdiction.
 */

#pragma once

{% for i in c.header_file_includes -%}
#include "{{ i }}"
{%- endfor %}

namespace {{ c.nested_namespaces }} {

// Forward declarations
{%- for f in c.forward_declarations %}
{{ f }}
{%- endfor %}

class {{ c.class_name }} : public {{ c.super_class_name }} {
public:
    {% if c.constructor %}
    {{c.constructor.funcsig_as_declaration}};
    {%- endif %}
    {%- if c.destructor %}
    {% else %}
    ~{{ c.class_name }}() = default;
    {%- endif %}

protected:
    // Virtual member functions
    {%- for u in c.base_function_names %}
    using AccessorData::{{u}};{% endfor %}
    {%- for m in c.virtual_member_functions %}
    {{ m.funcsig_as_declaration }};{% endfor %}

    // Data members
    {% for m in c.data_members %} {{ m.as_string() }}{{ m.default_value }};
    {%- endfor %}

private:
    // Member functions
    {%- for m in c.template_member_functions %}
    {{ m.funcsig_as_declaration }};{% endfor %}
    {%- for m in c.member_functions %}
    {{ m.funcsig_as_declaration }};{% endfor %}
};

} // namespace {{ c.nested_namespaces }}
