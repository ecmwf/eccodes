# (C) Copyright 2005- ECMWF.

# See ECC-1846
# This is ecmf local so we shouldn't use MasterDir. Instead we look for pseudocentre (conceptsDir2) then centre (conceptsLocalDirAll)

concept modelName(unknown, "modelNameConcept.def", conceptsDir2, conceptsLocalDirAll): no_copy, dump;

if (modelName isnot "unknown") {
   concept configuration(unknown, "configurationConcept.[modelName].def", conceptsDir2, conceptsLocalDirAll): no_copy, dump, read_only;
  if ( grib2LocalSectionPresent or localUsePresent ) { # See ECC-2039
      if ( defined(marsClass) ) {
         alias ls.model = modelName;
         alias ls.configuration = configuration;
      }
   }
}

alias mars.model = modelName;
alias mars.configuration = configuration;
#alias mars.origin = inputOriginatingCentre;

# last three digits specify the model version of the input
# leading 1 to 2 digits the model name of the input
meta forcingModelCode evaluate(inputProcessIdentifier/1000);
concept forcingModel(unknown, "forcingModelConcept.def", conceptsDir2, conceptsLocalDirAll): no_copy, dump, read_only;

meta originForcing sprintf("%s_%s",inputOriginatingCentre,forcingModel);
alias mars.origin = originForcing;
