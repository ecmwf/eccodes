# (C) Copyright 2005- ECMWF.
# ECMWF specific section 2 extras

# MTG2 behaviour based on tablesVersion defined in boot.def
# Without accessing this logic (i.e. no ECMWF Section 2) the default is 1 = post-MTG2
# 0 = pre-MTG2 encoding used
# 1 = post-MTG2 encoding used
# 2 = post-MTG2 encoding with paramId + chemId used

# TODO: is add the when statement functionality for changes in memory. First attempt below:
transient redo_mtg2_switch = 0;
when( changed(tablesVersion) ) {
   set redo_mtg2_switch = 1;
}
# TODO(masn): This is work in progress
if ( tablesVersion > 0 ) {
    transient redo_mtg2_switch = 1;
}

# TODO(masn): This is work in progress
if ( redo_mtg2_switch == 1 ) {
    if (tablesVersion <= tablesVersionMTG2Switch) {
        constant MTG2SwitchDefault = 0;
    } else {
        if (defined(marsClass) and (marsClass is 'mc' or marsClass is 'cr')) {
            constant MTG2SwitchDefault = 2;
        } else {
            constant MTG2SwitchDefault = 1;
        }
    }
}

if (tablesVersion <= tablesVersionMTG2Switch) {
    # Pre-MTG2
    constant MTG2SwitchDefault = 0;
} else {
    # For class mc and cr post MTG2 we always want the param + chem split (value 2)
    # For TIGGE, marsClass is not defined in the empty local Section 2, but is defined later on.
    # Therefore we need to protect this with an if defined check
    if (defined(marsClass) and (marsClass is 'mc' or marsClass is 'cr')) {
        constant MTG2SwitchDefault = 2;
        # All other cases we are post-MTG2
    } else {
        constant MTG2SwitchDefault = 1;
    }
}

# Update defaults if we change in memory (logic as above)
# if (redo_mtg2_switch == 1) {
#     if (tablesVersion <= tablesVersionMTG2Switch) {
#         constant MTG2SwitchDefault = 0;
#     } else {
#         if (defined(marsClass) and (marsClass is 'mc' or marsClass is 'cr')) {
#             constant MTG2SwitchDefault = 2;
#         } else {
#             constant MTG2SwitchDefault = 1;
#         }
#     }
# }

# Evaluate concept itself in parameters.def
# This allows non-ECMWF centres to also access functionality of switch
